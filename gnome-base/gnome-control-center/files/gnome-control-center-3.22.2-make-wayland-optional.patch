--- a/configure.ac
+++ b/configure.ac
@@ -225,12 +225,21 @@ if test "x$have_udev" = xyes ; then
 fi
 AM_CONDITIONAL(HAVE_UDEV, [test "x$have_udev" = "xyes"])
 
-PKG_CHECK_MODULES(WAYLAND, gdk-wayland-3.0, have_wayland=yes, have_wayland=no)
-if test "x$have_wayland" = xyes ; then
-	if test "x$have_udev" != xyes ; then
-		AC_MSG_ERROR([udev is required for Wayland support])
-	fi
-fi
+AC_ARG_ENABLE(
+  [wayland],
+  AS_HELP_STRING([--disable-wayland], [disable wayland support]),
+  [],
+  enable_wayland=auto
+)
+
+AS_IF([test "$enable_wayland" != "no"],
+      [
+        AS_IF([test "x$have_udev" = xno],
+              [AC_MSG_ERROR([udev is required for Wayland support])],
+              [AC_DEFINE(HAVE_UDEV, 1, [System has udev])])
+
+        PKG_CHECK_MODULES(WAYLAND, gdk-wayland-3.0)
+])
 
 PKG_CHECK_MODULES(NETWORK_MANAGER,
                   libnm >= $NETWORK_MANAGER_REQUIRED_VERSION
--- a/panels/info/cc-info-panel.c
+++ b/panels/info/cc-info-panel.c
@@ -351,8 +351,15 @@ get_graphics_data (void)
   display = gdk_display_get_default ();
 
 #if defined(GDK_WINDOWING_X11) || defined(GDK_WINDOWING_WAYLAND)
-  if (GDK_IS_X11_DISPLAY (display) ||
-      GDK_IS_WAYLAND_DISPLAY (display))
+  gboolean x11_or_wayland = FALSE;
+#ifdef GDK_WINDOWING_X11
+  x11_or_wayland = GDK_IS_X11_DISPLAY (display);
+#endif
+#ifdef GDK_WINDOWING_WAYLAND
+  x11_or_wayland = x11_or_wayland || GDK_IS_WAYLAND_DISPLAY (display);
+#endif
+
+  if (x11_or_wayland)
     {
       char *discrete_renderer = NULL;
       char *renderer;
