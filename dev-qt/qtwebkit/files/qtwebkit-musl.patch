--- a/Source/JavaScriptCore/heap/MachineStackMarker.cpp
+++ b/Source/JavaScriptCore/heap/MachineStackMarker.cpp
@@ -566,7 +566,7 @@
 #error Unknown Architecture
 #endif
 
-#elif defined(__GLIBC__) && ENABLE(JIT)
+#elif defined(__linux__) && ENABLE(JIT)
 
 #if CPU(X86)
     return reinterpret_cast<void*>((uintptr_t) regs.machineContext.gregs[REG_ESP]);
@@ -665,7 +665,7 @@
 #error Unknown Architecture
 #endif
 
-#elif defined(__GLIBC__)
+#elif defined(__linux__) // glibc and musl
 
 // The following sequence depends on glibc's sys/ucontext.h.
 #if CPU(X86)
@@ -747,7 +747,7 @@
 #error Unknown Architecture
 #endif
 
-#elif defined(__GLIBC__)
+#elif defined(__linux__) // glibc and musl
 
 // The following sequence depends on glibc's sys/ucontext.h.
 #if CPU(X86)
@@ -838,7 +838,7 @@
 #error Unknown Architecture
 #endif
 
-#elif defined(__GLIBC__)
+#elif defined(__linux__) // glibc and musl
 
 // The following sequence depends on glibc's sys/ucontext.h.
 #if CPU(X86)
--- a/Source/JavaScriptCore/runtime/Options.h
+++ b/Source/JavaScriptCore/runtime/Options.h
@@ -113,8 +113,8 @@
     v(bool, reportMustSucceedExecutableAllocations, false, nullptr) \
     \
     v(unsigned, maxPerThreadStackUsage, 4 * MB, nullptr) \
-    v(unsigned, reservedZoneSize, 128 * KB, nullptr) \
-    v(unsigned, errorModeReservedZoneSize, 64 * KB, nullptr) \
+    v(unsigned, reservedZoneSize, 32 * KB, nullptr) \
+    v(unsigned, errorModeReservedZoneSize, 16 * KB, nullptr) \
     \
     v(bool, crashIfCantAllocateJITMemory, false, nullptr) \
     v(unsigned, jitMemoryReservationSize, 0, "Set this number to change the executable allocation size in ExecutableAllocatorFixedVMPool. (In bytes.)") \
--- a/Source/JavaScriptCore/inspector/JSGlobalObjectInspectorController.cpp
+++ b/Source/JavaScriptCore/inspector/JSGlobalObjectInspectorController.cpp
@@ -49,7 +49,7 @@
 #include <wtf/Stopwatch.h>
 
 #include <cxxabi.h>
-#if OS(DARWIN) || (OS(LINUX) && !PLATFORM(GTK))
+#if OS(DARWIN) || (OS(LINUX) && !PLATFORM(GTK) && defined(__GLIBC__) && !defined(__UCLIBC__))
 #include <dlfcn.h>
 #include <execinfo.h>
 #endif
@@ -187,7 +187,7 @@
 
 void JSGlobalObjectInspectorController::appendAPIBacktrace(ScriptCallStack* callStack)
 {
-#if OS(DARWIN) || (OS(LINUX) && !PLATFORM(GTK))
+#if OS(DARWIN) || (OS(LINUX) && !PLATFORM(GTK) && defined(__GLIBC__) && !defined(__UCLIBC__))
     static const int framesToShow = 31;
     static const int framesToSkip = 3; // WTFGetBacktrace, appendAPIBacktrace, reportAPIException.
 
