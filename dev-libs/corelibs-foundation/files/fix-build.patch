diff --git a/CoreFoundation/Base.subproj/CFInternal.h b/CoreFoundation/Base.subproj/CFInternal.h
index f292ca6..ae04242 100644
--- a/CoreFoundation/Base.subproj/CFInternal.h
+++ b/CoreFoundation/Base.subproj/CFInternal.h
@@ -98,7 +98,7 @@ CF_EXTERN_C_BEGIN
 #include <CoreFoundation/CFRuntime.h>
 #include <limits.h>
 #if DEPLOYMENT_TARGET_MACOSX || DEPLOYMENT_TARGET_EMBEDDED || DEPLOYMENT_TARGET_EMBEDDED_MINI || DEPLOYMENT_TARGET_LINUX || DEPLOYMENT_TARGET_FREEBSD
-#include <xlocale.h>
+#include <locale.h>
 #include <unistd.h>
 #include <sys/time.h>
 #include <signal.h>
diff --git a/CoreFoundation/Base.subproj/CFUtilities.c b/CoreFoundation/Base.subproj/CFUtilities.c
index e16ab2b..19098f9 100644
--- a/CoreFoundation/Base.subproj/CFUtilities.c
+++ b/CoreFoundation/Base.subproj/CFUtilities.c
@@ -1265,9 +1265,6 @@ CFDictionaryRef __CFGetEnvironment() {
         extern char **environ;
         char **envp = environ;
 #elif DEPLOYMENT_TARGET_LINUX
-#ifndef environ
-#define environ __environ
-#endif
         char **envp = environ;
 #endif
         envDict = CFDictionaryCreateMutable(kCFAllocatorSystemDefault, 0, &kCFCopyStringDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
diff --git a/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h b/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h
index e930f52..794aaca 100644
--- a/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h
+++ b/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h
@@ -178,6 +178,7 @@ typedef int		boolean_t;
 
 #include <pthread.h>
 
+#if defined(__GLIBC__)
 CF_INLINE size_t
 strlcpy(char * dst, const char * src, size_t maxlen) {
     const size_t srclen = strlen(src);
@@ -205,7 +206,8 @@ strlcat(char * dst, const char * src, size_t maxlen) {
 }
 
 #define issetugid() 0
-    
+#endif
+
 // Implemented in CFPlatform.c 
 bool OSAtomicCompareAndSwapPtr(void *oldp, void *newp, void *volatile *dst);
 bool OSAtomicCompareAndSwapLong(long oldl, long newl, long volatile *dst);
diff --git a/CoreFoundation/Base.subproj/ForFoundationOnly.h b/CoreFoundation/Base.subproj/ForFoundationOnly.h
index f3e4c8d..2d6e92b 100644
--- a/CoreFoundation/Base.subproj/ForFoundationOnly.h
+++ b/CoreFoundation/Base.subproj/ForFoundationOnly.h
@@ -34,6 +34,7 @@
 #include <CoreFoundation/CFStreamPriv.h>
 #include <math.h>
 #include <limits.h>
+#include <sys/types.h>
 
 #define _CF_EXPORT_SCOPE_BEGIN \
 CF_EXTERN_C_BEGIN \
diff --git a/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c b/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c
index 31a40a1..2465f6c 100644
--- a/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c
+++ b/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c
@@ -25,7 +25,6 @@
 
 #if DEPLOYMENT_TARGET_MACOSX || DEPLOYMENT_TARGET_EMBEDDED || DEPLOYMENT_TARGET_LINUX || DEPLOYMENT_TARGET_EMBEDDED_MINI || DEPLOYMENT_TARGET_FREEBSD
 #include <dirent.h>
-#include <sys/sysctl.h>
 #include <sys/mman.h>
 #endif
 
diff --git a/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c b/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c
index db73b4d..6d1ee22 100644
--- a/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c
+++ b/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c
@@ -33,7 +33,6 @@
 
 #if DEPLOYMENT_TARGET_MACOSX || DEPLOYMENT_TARGET_EMBEDDED || DEPLOYMENT_TARGET_EMBEDDED_MINI || DEPLOYMENT_TARGET_LINUX
 #include <unistd.h>
-#include <sys/sysctl.h>
 #include <sys/stat.h>
 #include <dirent.h>
 #endif
diff --git a/Foundation/NSFileManager.swift b/Foundation/NSFileManager.swift
index 68cb6de..c654d89 100644
--- a/Foundation/NSFileManager.swift
+++ b/Foundation/NSFileManager.swift
@@ -302,7 +302,7 @@ open class FileManager: NSObject {
                 #if os(OSX) || os(iOS)
                     let tempEntryType = entryType
                 #elseif os(Linux)
-                    let tempEntryType = Int(entryType)
+                    let tempEntryType = entryType
                 #endif
                         
                 if tempEntryType == DT_DIR {
diff --git a/Foundation/Unit.swift b/Foundation/Unit.swift
index 88c7046..c12c173 100644
--- a/Foundation/Unit.swift
+++ b/Foundation/Unit.swift
@@ -98,11 +98,11 @@ private class UnitConverterReciprocal : UnitConverter, NSSecureCoding {
         self.reciprocal = reciprocal
     }
     
-    private override func baseUnitValue(fromValue value: Double) -> Double {
+    fileprivate override func baseUnitValue(fromValue value: Double) -> Double {
         return reciprocal / value
     }
     
-    private override func value(fromBaseUnitValue baseUnitValue: Double) -> Double {
+    fileprivate override func value(fromBaseUnitValue baseUnitValue: Double) -> Double {
         return reciprocal / baseUnitValue
     }
     
