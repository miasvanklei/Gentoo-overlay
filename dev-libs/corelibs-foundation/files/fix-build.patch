diff --git a/CoreFoundation/Base.subproj/CFRuntime.c b/CoreFoundation/Base.subproj/CFRuntime.c
index 5b3a091..39951a1 100644
--- a/CoreFoundation/Base.subproj/CFRuntime.c
+++ b/CoreFoundation/Base.subproj/CFRuntime.c
@@ -302,7 +302,7 @@ CF_INLINE CFRuntimeBase *_cf_aligned_malloc(size_t align, CFIndex size, const ch
     char errorStringBuffer[errorStringBufferLength] = "unknown error";
     const char *errorStringPointer = errorStringBuffer;
     //The GNU-specific version returns a pointer, which may or may not be the pointer passed in. The XSI version returns int. See strerror(3) on Linux.
-#if ! ( (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && ! _GNU_SOURCE )
+#if ! ( (_POSIX_C_SOURCE >= 200112L || _XOPEN_SOURCE >= 600) && !defined(_GNU_SOURCE) )
     errorStringPointer =
 #endif
     strerror_r(errno, errorStringBuffer, errorStringBufferLength);
diff --git a/CoreFoundation/Base.subproj/CFUtilities.c b/CoreFoundation/Base.subproj/CFUtilities.c
index 4e99bc0..6c46540 100644
--- a/CoreFoundation/Base.subproj/CFUtilities.c
+++ b/CoreFoundation/Base.subproj/CFUtilities.c
@@ -684,7 +684,7 @@ static void _populateBanner(char **banner, char **time, char **thread, int *bann
     bannerLen = asprintf(banner, "%04d-%02d-%02d %02d:%02d:%02d.%03d %s[%d:%x] ", year, month, day, hour, minute, second, ms, *_CFGetProgname(), getpid(), GetCurrentThreadId());
     asprintf(thread, "%x", GetCurrentThreadId());
 #else
-    bannerLen = asprintf(banner, "%04d-%02d-%02d %02d:%02d:%02d.%03d %s[%d:%x] ", year, month, day, hour, minute, second, ms, *_CFGetProgname(), getpid(), (unsigned int)pthread_self());
+    bannerLen = asprintf(banner, "%04d-%02d-%02d %02d:%02d:%02d.%03d %s[%d:%x] ", year, month, day, hour, minute, second, ms, *_CFGetProgname(), getpid(), pthread_self());
     asprintf(thread, "%lx", pthread_self());
 #endif
     asprintf(time, "%04d-%02d-%02d %02d:%02d:%02d.%03d", year, month, day, hour, minute, second, ms);
@@ -1526,9 +1526,6 @@ CFDictionaryRef __CFGetEnvironment() {
         extern char **environ;
         char **envp = environ;
 #elif DEPLOYMENT_TARGET_LINUX
-#if !defined(environ) && !TARGET_OS_ANDROID
-#define environ __environ
-#endif
         char **envp = environ;
 #endif
         envDict = CFDictionaryCreateMutable(kCFAllocatorSystemDefault, 0, &kCFCopyStringDictionaryKeyCallBacks, &kCFTypeDictionaryValueCallBacks);
diff --git a/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h b/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h
index 5f15195..cae8d06 100644
--- a/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h
+++ b/CoreFoundation/Base.subproj/CoreFoundation_Prefix.h
@@ -162,8 +162,8 @@ typedef int		boolean_t;
 #if TARGET_OS_ANDROID
 typedef unsigned long fd_mask;
 #endif
-    
-#if !TARGET_OS_ANDROID && !TARGET_OS_CYGWIN
+
+#if !TARGET_OS_ANDROID && !TARGET_OS_CYGWIN && defined(__GLIBC__)
 CF_INLINE size_t
 strlcpy(char * dst, const char * src, size_t maxlen) {
     const size_t srclen = strlen(src);
@@ -191,7 +191,7 @@ strlcat(char * dst, const char * src, size_t maxlen) {
 }
 #endif
 
-#if !TARGET_OS_CYGWIN
+#if !TARGET_OS_CYGWIN && defined(__GLIBC__)
 #define issetugid() 0
 #endif
     
diff --git a/CoreFoundation/Base.subproj/ForFoundationOnly.h b/CoreFoundation/Base.subproj/ForFoundationOnly.h
index 14dd5a1..09129e5 100644
--- a/CoreFoundation/Base.subproj/ForFoundationOnly.h
+++ b/CoreFoundation/Base.subproj/ForFoundationOnly.h
@@ -29,6 +29,7 @@
 #include <CoreFoundation/CFStreamPriv.h>
 #include <math.h>
 #include <limits.h>
+#include <sys/types.h>
 
 #ifndef CF_SWIFT_EXPORT
 #if DEPLOYMENT_RUNTIME_SWIFT
diff --git a/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c b/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c
index a9ef705..cd92916 100644
--- a/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c
+++ b/CoreFoundation/PlugIn.subproj/CFBundle_InfoPlist.c
@@ -19,7 +19,7 @@
 #if TARGET_OS_CYGWIN
 #else
 #include <dirent.h>
-#if !TARGET_OS_ANDROID
+#if !TARGET_OS_ANDROID && defined(__GLIBC__)
 #include <sys/sysctl.h>
 #endif
 #include <sys/mman.h>
diff --git a/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c b/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c
index b82ec82..e709440 100644
--- a/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c
+++ b/CoreFoundation/PlugIn.subproj/CFBundle_Resources.c
@@ -27,7 +27,7 @@
 
 #if DEPLOYMENT_TARGET_MACOSX || DEPLOYMENT_TARGET_EMBEDDED || DEPLOYMENT_TARGET_EMBEDDED_MINI || DEPLOYMENT_TARGET_LINUX
 #include <unistd.h>
-#if !TARGET_OS_ANDROID
+#if !TARGET_OS_ANDROID && defined(__GLIBC__)
 #include <sys/sysctl.h>
 #endif
 #include <sys/stat.h>
diff --git a/CoreFoundation/RunLoop.subproj/CFRunLoop.c b/CoreFoundation/RunLoop.subproj/CFRunLoop.c
index b92c2bf..cf5df40 100644
--- a/CoreFoundation/RunLoop.subproj/CFRunLoop.c
+++ b/CoreFoundation/RunLoop.subproj/CFRunLoop.c
@@ -46,7 +46,6 @@ CF_INLINE uint64_t check_uint64_add(uint64_t x, uint64_t y, int32_t* err) {
 #include <dispatch/private.h>
 #elif __HAS_DISPATCH__
 extern dispatch_queue_t _dispatch_runloop_root_queue_create_4CF(const char *_Nullable label, unsigned long flags);
-extern mach_port_t _dispatch_runloop_root_queue_get_port_4CF(dispatch_queue_t queue);
 extern void _dispatch_source_set_runloop_timer_4CF(dispatch_source_t source, dispatch_time_t start, uint64_t interval, uint64_t leeway);
 #endif
 
@@ -90,9 +89,6 @@ DISPATCH_EXPORT void _dispatch_main_queue_callback_4CF(void);
 #include <sys/eventfd.h>
 #include <sys/timerfd.h>
 
-dispatch_runloop_handle_t _dispatch_get_main_queue_handle_4CF(void);
-extern void _dispatch_main_queue_callback_4CF(void *_Null_unspecified msg);
-
 #define _dispatch_get_main_queue_port_4CF _dispatch_get_main_queue_handle_4CF
 #define _dispatch_main_queue_callback_4CF(x) _dispatch_main_queue_callback_4CF(x)
 #endif
diff --git a/Foundation/Thread.swift b/Foundation/Thread.swift
index 3b46fac..d4c132d 100644
--- a/Foundation/Thread.swift
+++ b/Foundation/Thread.swift
@@ -256,11 +252,7 @@ open class Thread : NSObject {
         let maxSupportedStackDepth = 128;
         let addrs = UnsafeMutablePointer<UnsafeMutableRawPointer?>.allocate(capacity: maxSupportedStackDepth)
         defer { addrs.deallocate() }
-#if os(Android)
         let count = 0
-#else
-        let count = backtrace(addrs, Int32(maxSupportedStackDepth))
-#endif
         let addressCount = max(0, min(Int(count), maxSupportedStackDepth))
         return body(addrs, addressCount)
     }
@@ -274,23 +266,7 @@ open class Thread : NSObject {
     }
 
     open class var callStackSymbols: [String] {
-#if os(Android)
         return []
-#else
-        return backtraceAddresses({ (addrs, count) in
-            var symbols: [String] = []
-            if let bs = backtrace_symbols(addrs, Int32(count)) {
-                symbols = UnsafeBufferPointer(start: bs, count: count).map {
-                    guard let symbol = $0 else {
-                        return "<null>"
-                    }
-                    return String(cString: symbol)
-                }
-                free(bs)
-            }
-            return symbols
-        })
-#endif
     }
 }
 
diff --git a/Foundation/Process.swift b/Foundation/Process.swift
index c0e1518..9197e2f 100644
--- a/Foundation/Process.swift
+++ b/Foundation/Process.swift
@@ -241,11 +241,7 @@ open class Process: NSObject {
         }
 
         var taskSocketPair : [Int32] = [0, 0]
-#if os(OSX) || os(iOS)
         socketpair(AF_UNIX, SOCK_STREAM, 0, &taskSocketPair)
-#else
-        socketpair(AF_UNIX, Int32(SOCK_STREAM.rawValue), 0, &taskSocketPair)
-#endif
         var context = CFSocketContext()
         context.version = 0
         context.retain = runLoopSourceRetain
diff --git a/build.py b/build.py
index ccd9bf1..9c490c2 100644
--- a/build.py
+++ b/build.py
@@ -89,22 +89,18 @@ if triple == "armv7-none-linux-androideabi":
 else:
 	foundation.LDFLAGS += '-lpthread '
 
-foundation.LDFLAGS += '-ldl -lm -lswiftCore '
+foundation.LDFLAGS += '-ldl -lm -lswiftCore -lfts -ldispatch '
 
 # Configure use of Dispatch in CoreFoundation and Foundation if libdispatch is being built
-if "LIBDISPATCH_SOURCE_DIR" in Configuration.current.variables:
-	foundation.CFLAGS += " "+" ".join([
-		'-DDEPLOYMENT_ENABLE_LIBDISPATCH',
-		'-I'+Configuration.current.variables["LIBDISPATCH_SOURCE_DIR"],
-		'-I'+Configuration.current.variables["LIBDISPATCH_BUILD_DIR"]+'/tests'  # for include of dispatch/private.h in CF
-	])
-	swift_cflags += ([
-		'-DDEPLOYMENT_ENABLE_LIBDISPATCH',
-		'-I'+Configuration.current.variables["LIBDISPATCH_SOURCE_DIR"],
-		'-I'+Configuration.current.variables["LIBDISPATCH_BUILD_DIR"]+'/src/swift',
-		'-Xcc -fblocks'
-	])
-	foundation.LDFLAGS += '-ldispatch -L'+Configuration.current.variables["LIBDISPATCH_BUILD_DIR"]+'/src/.libs -rpath \$$ORIGIN '
+foundation.CFLAGS += " "+" ".join([
+	'-DDEPLOYMENT_ENABLE_LIBDISPATCH',
+	'-I/usr/lib/swift'
+])
+swift_cflags += ([
+	'-DDEPLOYMENT_ENABLE_LIBDISPATCH',
+	'-I/usr/lib/swift',
+	'-Xcc -fblocks'
+])
 
 foundation.SWIFTCFLAGS = " ".join(swift_cflags)
 
@@ -297,11 +293,6 @@ sources = CompileSources([
        'CoreFoundation/URL.subproj/CFURLSessionInterface.c',
 ])
 
-# This code is already in libdispatch so is only needed if libdispatch is
-# NOT being used
-if "LIBDISPATCH_SOURCE_DIR" not in Configuration.current.variables:
-    sources += (['closure/data.c', 'closure/runtime.c'])
-
 sources.add_dependency(headers)
 foundation.add_phase(sources)
 
@@ -480,8 +476,6 @@ foundation_tests = SwiftExecutable('TestFoundation', [
         'Foundation/ProgressFraction.swift',
 ] + glob.glob('./TestFoundation/Test*.swift')) # all TestSomething.swift are considered sources to the test project in the TestFoundation directory
 
-Configuration.current.extra_ld_flags += ' -L'+Configuration.current.variables["LIBDISPATCH_BUILD_DIR"]+'/src/.libs'
-
 foundation_tests.add_dependency(foundation_tests_resources)
 foundation.add_phase(foundation_tests_resources)
 foundation.add_phase(foundation_tests)
diff --git a/lib/script.py b/lib/script.py
index 4f6a39f..a923fbb 100644
--- a/lib/script.py
+++ b/lib/script.py
@@ -103,14 +103,12 @@ TARGET_CFLAGS         = -fcolor-diagnostics -fdollars-in-identifiers -fblocks -f
         c_flags += Configuration.current.extra_c_flags
 
         swift_flags = "\nTARGET_SWIFTCFLAGS    = -I${SDKROOT}/lib/swift/" + Configuration.current.target.swift_sdk_name + " -Xcc -fblocks -resource-dir ${SDKROOT}/lib/swift "
-        if swift_triple is not None:
-            swift_flags += "-target ${SWIFT_TARGET} "
         if Configuration.current.system_root is not None:
             swift_flags += "-sdk ${SYSROOT} "
 
         if Configuration.current.bootstrap_directory is not None:
             swift_flags += """  -I${BOOTSTRAP_DIR}/usr/include -I${BOOTSTRAP_DIR}/usr/local/include """
-            swift_flags += """  -I${TARGET_BOOTSTRAP_DIR}/usr/include -I${TARGET_BOOTSTRAP_DIR}/usr/local/include """
+            swift_flags += """  -I${TARGET_BOOTSTRAP_DIR}/usr/include -Xcc -fmodule-map-file=Build/Foundation${PREFIX}/lib/swift/CoreFoundation/module.modulemap -I${TARGET_BOOTSTRAP_DIR}/usr/local/include """
 
         if Configuration.current.build_mode == Configuration.Debug:
             swift_flags += "-g -Onone "
diff --git a/Foundation/Host.swift b/Foundation/Host.swift
index d01151f..ad19ff4 100644
--- a/Foundation/Host.swift
+++ b/Foundation/Host.swift
@@ -74,11 +74,7 @@ open class Host: NSObject {
             }
             var hints = addrinfo()
             hints.ai_family = PF_UNSPEC
-#if os(OSX) || os(iOS) || os(Android)
             hints.ai_socktype = SOCK_STREAM
-#else
-            hints.ai_socktype = Int32(SOCK_STREAM.rawValue)
-#endif
     
             hints.ai_flags = flags
             
diff --git a/CoreFoundation/Base.subproj/CFPlatform.c b/CoreFoundation/Base.subproj/CFPlatform.c
index 5aefe201..6be19cd2 100644
--- a/CoreFoundation/Base.subproj/CFPlatform.c
+++ b/CoreFoundation/Base.subproj/CFPlatform.c
@@ -1331,7 +1331,7 @@ CF_SWIFT_EXPORT int _CFThreadGetName(char *_Nonnull buf, int length) {
 #if DEPLOYMENT_TARGET_MACOSX || DEPLOYMENT_TARGET_EMBEDDED || DEPLOYMENT_TARGET_EMBEDDED_MINI
     return pthread_getname_np(pthread_self(), buf, length);
 #elif DEPLOYMENT_TARGET_ANDROID
-#elif DEPLOYMENT_TARGET_LINUX
+#elif defined(__GLIBC__)
     return pthread_getname_np(pthread_self(), buf, length);
 #endif
     return -1;
diff --git a/configure b/configure
index f4cc0227..17355752 100755
--- a/configure
+++ b/configure
@@ -1,4 +1,4 @@
-#!/usr/bin/env python
+#!/usr/bin/env python2.7
 
 # This source file is part of the Swift.org open source project
 #
diff --git a/CoreFoundation/Base.subproj/CFPriv.h b/CoreFoundation/Base.subproj/CFPriv.h
index 06891b7f..e9667d17 100644
--- a/CoreFoundation/Base.subproj/CFPriv.h
+++ b/CoreFoundation/Base.subproj/CFPriv.h
@@ -25,6 +25,7 @@
 #include <CoreFoundation/CFDate.h>
 #include <CoreFoundation/CFSet.h>
 #include <math.h>
+#include <sys/types.h>
 
 
 
