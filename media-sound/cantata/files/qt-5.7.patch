--- devices/musicbrainz.cpp.bak	2016-04-02 12:02:50.525762442 +0200
+++ devices/musicbrainz.cpp	2016-04-02 12:04:49.874759116 +0200
@@ -248,7 +248,7 @@
     }
     DBUG << "Should lookup " << discId;
 
-    MusicBrainz5::CQuery Query("cantata-"PACKAGE_VERSION_STRING);
+    MusicBrainz5::CQuery Query("cantata-" PACKAGE_VERSION_STRING);
     QList<CdAlbum> m;
     QList<QNetworkProxy> proxies=NetworkProxyFactory::self()->queryProxy(QNetworkProxyQuery(QUrl("http://musicbrainz.org")));
     foreach (const QNetworkProxy &p, proxies) {
--- support/utils.cpp.bak	2016-04-02 12:03:07.425761971 +0200
+++ support/utils.cpp	2016-04-02 12:05:03.649758732 +0200
@@ -773,7 +773,7 @@
     #elif defined Q_OS_MAC
     return fixPath(QCoreApplication::applicationDirPath())+app;
     #else
-    return QString(INSTALL_PREFIX "/"LINUX_LIB_DIR"/")+QCoreApplication::applicationName()+constDirSep+app;
+    return QString(INSTALL_PREFIX "/" LINUX_LIB_DIR "/")+QCoreApplication::applicationName()+constDirSep+app;
     #endif
 }
 
--- CMakeLists.txt.bak	2016-04-02 12:03:59.700760514 +0200
+++ CMakeLists.txt	2016-04-02 12:04:17.924760007 +0200
@@ -279,7 +279,7 @@
     set(QTINCLUDES ${Qt5Widgets_INCLUDE_DIRS} ${Qt5Network_INCLUDE_DIRS} ${Qt5Xml_INCLUDE_DIRS} ${Qt5Core_INCLUDE_DIRS} ${Qt5Concurrent_INCLUDE_DIRS}
                    ${Qt5Svg_INCLUDE_DIRS} ${Qt5Sql_INCLUDE_DIRS})
     add_definitions(${Qt5Widgets_DEFINITIONS} ${Qt5Network_DEFINITIONS} ${Qt5Xml_DEFINITIONS} ${Qt5Concurrent_DEFINITIONS} ${Qt5Svg_DEFINITIONS} ${Qt5Sql_DEFINITIONS})
-    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS}")
+    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} ${Qt5Widgets_EXECUTABLE_COMPILE_FLAGS} -std=c++1z -fPIC")
     if (NOT ENABLE_UBUNTU AND NOT APPLE AND NOT WIN32)
         # Does Ubuntu/Touch version need DBus?
         find_package(Qt5DBus)
