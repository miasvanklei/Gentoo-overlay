diff --git a/hls-call-hierarchy-plugin.cabal b/hls-call-hierarchy-plugin.cabal
index 85a8cbb59b..d54d0d5677 100644
--- a/hls-call-hierarchy-plugin.cabal
+++ b/hls-call-hierarchy-plugin.cabal
@@ -42,22 +42,6 @@ library
   default-language:   Haskell2010
   default-extensions: DataKinds
 
-  if impl(ghc < 8.10.5)
-    build-depends:
-      ghc-api-compat ==8.6
-  elif impl(ghc == 8.10.5)
-    build-depends:
-      ghc-api-compat ==8.10.5
-  elif impl(ghc == 8.10.6)
-    build-depends:
-      ghc-api-compat ==8.10.6
-  elif impl(ghc == 8.10.7)
-    build-depends:
-      ghc-api-compat ==8.10.7
-  elif impl(ghc == 9.0.1)
-    build-depends:
-      ghc-api-compat ==9.0.1
-
 test-suite tests
   type:             exitcode-stdio-1.0
   default-language: Haskell2010
diff --git a/src/Ide/Plugin/CallHierarchy/Internal.hs b/src/Ide/Plugin/CallHierarchy/Internal.hs
index 602fb328f8..e54c7721ab 100644
--- a/src/Ide/Plugin/CallHierarchy/Internal.hs
+++ b/src/Ide/Plugin/CallHierarchy/Internal.hs
@@ -37,7 +37,6 @@ import           Ide.Plugin.CallHierarchy.Types
 import           Ide.Types
 import           Language.LSP.Types
 import qualified Language.LSP.Types.Lens        as L
-import           Name
 import           Text.Read                      (readMaybe)
 
 -- | Render prepare call hierarchy request.
diff --git a/src/Ide/Plugin/CallHierarchy/Query.hs b/src/Ide/Plugin/CallHierarchy/Query.hs
index 1ba3a793f8..9a855958c1 100644
--- a/src/Ide/Plugin/CallHierarchy/Query.hs
+++ b/src/Ide/Plugin/CallHierarchy/Query.hs
@@ -14,7 +14,6 @@ import           Development.IDE.GHC.Compat
 import           HieDb                          (HieDb (getConn), Symbol (..),
                                                  toNsChar)
 import           Ide.Plugin.CallHierarchy.Types
-import           Name
 
 incomingCalls :: HieDb -> Symbol -> IO [Vertex]
 incomingCalls (getConn -> conn) symbol = do
@@ -78,5 +77,5 @@ parseSymbol :: Symbol -> (String, String, String)
 parseSymbol Symbol{..} =
     let o = toNsChar (occNameSpace symName) : occNameString symName
         m = moduleNameString $ moduleName symModule
-        u = unitString $ moduleUnitId symModule
+        u = unitString $ moduleUnit symModule
     in  (o, m, u)
