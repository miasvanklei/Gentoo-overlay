diff --git a/src/Language/Haskell/Refact/Refactoring/MaybeToMonadPlus.hs b/src/Language/Haskell/Refact/Refactoring/MaybeToMonadPlus.hs
index 18bea223..112d804d 100644
--- a/src/Language/Haskell/Refact/Refactoring/MaybeToMonadPlus.hs
+++ b/src/Language/Haskell/Refact/Refactoring/MaybeToMonadPlus.hs
@@ -8,7 +8,7 @@ module Language.Haskell.Refact.Refactoring.MaybeToMonadPlus
   , compMaybeToMonadPlus
   ) where
 
--- import qualified BasicTypes as GHC
+import qualified BasicTypes as GHC
 import qualified FastString as GHC
 import qualified GHC        as GHC
 import qualified OccName    as GHC
diff --git a/src/Language/Haskell/Refact/Utils/LocUtils.hs b/src/Language/Haskell/Refact/Utils/LocUtils.hs
index a4e4e512..15dd7280 100644
--- a/src/Language/Haskell/Refact/Utils/LocUtils.hs
+++ b/src/Language/Haskell/Refact/Utils/LocUtils.hs
@@ -157,11 +157,7 @@ getSrcSpan t = res t
     literalInExp (GHC.L l _) = Just l
 
     literalInPat :: GHC.LPat GhcPs -> Maybe GHC.SrcSpan
-#if __GLASGOW_HASKELL__ >= 808
-    literalInPat (GHC.LL l _) = Just l
-#else
-    literalInPat (GHC.L l _) = Just l
-#endif
+    literalInPat (GHC.dL->GHC.L l _) = Just l
 
     importDecl :: GHC.LImportDecl GhcPs -> Maybe GHC.SrcSpan
     importDecl (GHC.L l _) = Just l
