diff --git a/tools/llvm-objcopy/CMakeLists.txt b/tools/llvm-objcopy/CMakeLists.txt
index 05aa727ab9d..b30a04b2479 100644
--- a/tools/llvm-objcopy/CMakeLists.txt
+++ b/tools/llvm-objcopy/CMakeLists.txt
@@ -10,4 +10,5 @@ add_llvm_tool(llvm-objcopy
 
 if(LLVM_INSTALL_BINUTILS_SYMLINKS)
   add_llvm_tool_symlink(objcopy llvm-objcopy)
+  add_llvm_tool_symlink(strip llvm-objcopy)
 endif()
diff --git a/tools/llvm-objcopy/llvm-objcopy.cpp b/tools/llvm-objcopy/llvm-objcopy.cpp
index 20ce93bb40e..d4c01b3eb6a 100644
--- a/tools/llvm-objcopy/llvm-objcopy.cpp
+++ b/tools/llvm-objcopy/llvm-objcopy.cpp
@@ -89,6 +89,8 @@ static cl::opt<bool> StripAll(
 static cl::opt<bool>
     StripAllGNU("strip-all-gnu",
                 cl::desc("Removes symbol, relocation, and debug information"));
+static cl::alias StripAllGNUA("S", cl::desc("Alias for strip-all-gnu"),
+                           cl::aliasopt(StripAllGNU));
 static cl::list<std::string> Keep("keep", cl::desc("Keep <section>"),
                                   cl::value_desc("section"));
 static cl::list<std::string> OnlyKeep("only-keep",
@@ -98,6 +100,8 @@ static cl::alias OnlyKeepA("j", cl::desc("Alias for only-keep"),
                            cl::aliasopt(OnlyKeep));
 static cl::opt<bool> StripDebug("strip-debug",
                                 cl::desc("Removes all debug information"));
+static cl::alias StripDebugA("g", cl::desc("Alias for strip-debug"),
+                           cl::aliasopt(StripDebug));
 static cl::opt<bool> StripSections("strip-sections",
                                    cl::desc("Remove all section headers"));
 static cl::opt<bool>
@@ -307,7 +311,10 @@ template <class ELFT> void CopyBinary(const ELFObjectFile<ELFT> &ObjFile) {
   }
 
   Obj->finalize();
-  WriteObjectFile(*Obj, OutputFilename.getValue());
+  if (OutputFilename.empty() || OutputFilename == "-")
+    WriteObjectFile(*Obj, InputFilename.getValue());
+  else
+    WriteObjectFile(*Obj, OutputFilename.getValue());
 }
 
 int main(int argc, char **argv) {
