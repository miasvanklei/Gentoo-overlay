--- a/tools/llvm-ar/llvm-ar.cpp	2018-08-03 12:12:24.000000000 +0200
+++ b/tools/llvm-ar/llvm-ar.cpp	2018-11-24 17:22:20.101700795 +0100
@@ -178,6 +178,7 @@
 static bool Symtab = true;         ///< 's' modifier
 static bool Deterministic = true;  ///< 'D' and 'U' modifiers
 static bool Thin = false;          ///< 'T' modifier
+static bool FullPath = false;      ///< 'P' modifier
 static bool AddLibrary = false;    ///< 'L' modifier
 
 // Relative Positional Argument (for insert/move). This variable holds
@@ -335,6 +336,9 @@
     case 'L':
       AddLibrary = true;
       break;
+    case 'P':
+      FullPath = true;
+      break;
     default:
       fail(std::string("unknown option ") + Options[i]);
     }
@@ -565,6 +569,12 @@
 
 static void addMember(std::vector<NewArchiveMember> &Members,
                       StringRef FileName, bool FlattenArchive = false) {
+  if (FullPath) {
+    // 'P' modifier, uses full path.
+    SmallString<256> real_path;
+    sys::fs::real_path(FileName, real_path);
+    FileName = real_path;
+  }
   Expected<NewArchiveMember> NMOrErr =
       NewArchiveMember::getFile(FileName, Deterministic);
   failIfError(NMOrErr.takeError(), FileName);
@@ -581,8 +591,10 @@
       return;
     }
   }
-  // Use the basename of the object path for the member name.
-  NMOrErr->MemberName = sys::path::filename(NMOrErr->MemberName);
+  if (!FullPath) {
+     // Use the basename of the object path for the member name.
+     NMOrErr->MemberName = sys::path::filename(NMOrErr->MemberName);
+  }
   Members.push_back(std::move(*NMOrErr));
 }
  
