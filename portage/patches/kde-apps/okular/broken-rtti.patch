--- a/shell/shell.cpp	2020-08-14 13:37:46.944924467 +0200
+++ b/shell/shell.cpp	2020-08-14 13:39:10.641274760 +0200
@@ -53,6 +53,8 @@
 #include <KActivities/ResourceInstance>
 #endif
 
+#include <QObject>
+
 // local includes
 #include "../interfaces/viewerinterface.h"
 #include "kdocumentviewer.h"
@@ -215,7 +217,7 @@
     KParts::ReadWritePart *const part = m_tabs[0].part;
 
     // Return false if we can't open new tabs and the only part is occupied
-    if (!dynamic_cast<Okular::ViewerInterface *>(part)->openNewFilesInTabs() && !part->url().isEmpty() && !ShellUtils::unique(serializedOptions)) {
+    if (!qobject_cast<Okular::ViewerInterface *>(part)->openNewFilesInTabs() && !part->url().isEmpty() && !ShellUtils::unique(serializedOptions)) {
         return false;
     }
 
@@ -235,7 +237,7 @@
         return false;
 
     KParts::ReadWritePart *const part = m_tabs[0].part;
-    const bool allowTabs = dynamic_cast<Okular::ViewerInterface *>(part)->openNewFilesInTabs();
+    const bool allowTabs = qobject_cast<Okular::ViewerInterface *>(part)->openNewFilesInTabs();
 
     if (!allowTabs && (numDocs > 1 || !part->url().isEmpty()))
         return false;
@@ -257,7 +259,7 @@
                 applyOptionsToPart(activePart, serializedOptions);
                 activePart->openUrl(url);
             } else {
-                if (dynamic_cast<Okular::ViewerInterface *>(activePart)->openNewFilesInTabs()) {
+                if (qobject_cast<Okular::ViewerInterface *>(activePart)->openNewFilesInTabs()) {
                     openNewTab(url, serializedOptions);
                 } else {
                     Shell *newShell = new Shell(serializedOptions);
