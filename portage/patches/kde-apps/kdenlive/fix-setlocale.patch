--- a/src/lib/localeHandling.cpp	2020-09-07 12:34:54.070436268 +0200
+++ b/src/lib/localeHandling.cpp	2020-09-07 12:35:18.215640758 +0200
@@ -20,11 +20,7 @@
     QList<QString> localesToTest;
     localesToTest << lcName << lcName + ".utf-8" << lcName + ".UTF-8" << lcName + ".utf8" << lcName + ".UTF8";
     for (const auto &locale : qAsConst(localesToTest)) {
-#ifdef Q_OS_FREEBSD
         auto *result = setlocale(MLT_LC_CATEGORY, locale.toStdString().c_str());
-#else
-        auto *result = std::setlocale(MLT_LC_CATEGORY, locale.toStdString().c_str());
-#endif
         if (result != nullptr) {
             ::qputenv(MLT_LC_NAME, locale.toStdString().c_str());
             newLocale = locale;
@@ -39,21 +35,12 @@
 
 void LocaleHandling::resetLocale()
 {
-#ifdef Q_OS_FREEBSD
     setlocale(MLT_LC_CATEGORY, "C");
-#else
-    std::setlocale(MLT_LC_CATEGORY, "C");
-#endif
-    ::qputenv(MLT_LC_NAME, "C");
 }
 
 void LocaleHandling::resetAllLocale()
 {
-#ifdef Q_OS_FREEBSD
     setlocale(LC_ALL, "C");
-#else
-    std::setlocale(LC_ALL, "C");
-#endif
     ::qputenv("LC_ALL", "C");
 }
 
--- a/src/mltconnection.cpp	2021-04-26 13:37:43.087574901 +0200
+++ b/src/mltconnection.cpp	2021-04-26 13:37:58.619739760 +0200
@@ -66,11 +66,7 @@
     // to ensure numbers are always serialised with . as decimal point.
     m_repository = std::unique_ptr<Mlt::Repository>(Mlt::Factory::init());
 
-#ifdef Q_OS_FREEBSD
     setlocale(MLT_LC_CATEGORY, nullptr);
-#else
-    std::setlocale(MLT_LC_CATEGORY, nullptr);
-#endif
 
     locateMeltAndProfilesPath(mltPath);
 
