--- a/Source/WebCore/platform/UserAgentQuirks.cpp	2023-04-30 14:52:52.468282303 +0200
+++ b/Source/WebCore/platform/UserAgentQuirks.cpp	2023-04-30 14:58:56.589284863 +0200
@@ -133,6 +133,15 @@
     return false;
 }
 
+static bool urlRequiresIphonePlatform(const String& domain)
+{
+    // non-mobile variant doesn't load with adblocking enabled
+    if (domain == "kissasian.li"_s || domain == "kisstvshow.to"_s)
+        return true;
+
+    return false;
+}
+
 static bool urlRequiresUnbrandedUserAgent(const String& domain)
 {
     // Google uses an ugly fallback login page if application branding is
@@ -169,6 +178,8 @@
 
     if (urlRequiresMacintoshPlatform(domain, baseDomain))
         quirks.add(UserAgentQuirks::NeedsMacintoshPlatform);
+    else if (urlRequiresIphonePlatform(domain))
+        quirks.add(UserAgentQuirks::NeedsIphonePlatform);
 #else
     if (urlRequiresFirefoxBrowser(domain))
         quirks.add(UserAgentQuirks::NeedsFirefoxBrowser);
@@ -190,6 +201,8 @@
         return "; rv:95.0) Gecko/20100101 Firefox/95.0"_s;
     case NeedsMacintoshPlatform:
         return "Macintosh; Intel Mac OS X 10_15"_s;
+    case NeedsIphonePlatform:
+        return "iPhone; Intel Mac OS X 10_15"_s;
     case NeedsUnbrandedUserAgent:
     case NumUserAgentQuirks:
         ASSERT_NOT_REACHED();
--- a/Source/WebCore/platform/UserAgentQuirks.h	2023-04-30 14:53:09.747519243 +0200
+++ b/Source/WebCore/platform/UserAgentQuirks.h	2023-04-30 14:52:35.472049297 +0200
@@ -36,6 +36,7 @@
         NeedsChromeBrowser,
         NeedsFirefoxBrowser,
         NeedsMacintoshPlatform,
+        NeedsIphonePlatform,
         NeedsUnbrandedUserAgent,
 
         NumUserAgentQuirks
--- a/Source/WebCore/platform/glib/UserAgentGLib.cpp	2023-04-30 14:52:47.651216258 +0200
+++ b/Source/WebCore/platform/glib/UserAgentGLib.cpp	2023-04-30 14:57:48.119342895 +0200
@@ -82,6 +82,8 @@
 
     if (quirks.contains(UserAgentQuirks::NeedsMacintoshPlatform))
         uaString.append(UserAgentQuirks::stringForQuirk(UserAgentQuirks::NeedsMacintoshPlatform));
+    else if (quirks.contains(UserAgentQuirks::NeedsIphonePlatform))
+        uaString.append(UserAgentQuirks::stringForQuirk(UserAgentQuirks::NeedsIphonePlatform));
     else {
         uaString.append(platformForUAString(), "; ");
 #if defined(USER_AGENT_BRANDING)
