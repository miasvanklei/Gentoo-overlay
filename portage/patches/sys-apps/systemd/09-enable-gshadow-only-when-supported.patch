diff --git a/meson.build b/meson.build
index b5fc395cfae32..afdb8112c3421 100644
--- a/meson.build
+++ b/meson.build
@@ -1636,7 +1636,6 @@ foreach term : ['analyze',
                 'efi',
                 'environment-d',
                 'firstboot',
-                'gshadow',
                 'hibernate',
                 'hostnamed',
                 'hwdb',
@@ -1683,6 +1682,13 @@ if have and get_option('libc') == 'musl'
 endif
 conf.set10('ENABLE_IDN', have)
 
+have = get_option('gshadow')
+if have and get_option('libc') == 'musl'
+        warning('support for shadow group is requested but it is not supported when building with musl, disabling it.')
+        have = false
+endif
+conf.set10('ENABLE_GSHADOW', have)
+
 foreach tuple : [['nss-mymachines', 'machined'],
                  ['nss-resolve',    'resolve']]
         want = get_option(tuple[0])
diff --git a/src/include/musl/gshadow.h b/src/include/musl/gshadow.h
new file mode 100644
index 0000000000000..b57c74ca83483
--- /dev/null
+++ b/src/include/musl/gshadow.h
@@ -0,0 +1,22 @@
+/* SPDX-License-Identifier: LGPL-2.1-or-later */
+#pragma once
+
+#include <errno.h>
+#include <stddef.h>
+
+struct sgrp {
+        char *sg_namp;
+        char *sg_passwd;
+        char **sg_adm;
+        char **sg_mem;
+};
+
+static inline int getsgnam_r(
+                const char *__name,
+                struct sgrp *__result_buf,
+                char *__buffer,
+                size_t __buflen,
+                struct sgrp **__result) {
+
+        return EOPNOTSUPP; /* this function returns positive errno in case of error. */
+}
