--- a/sound/soc/codecs/es8316.c	2020-01-20 12:29:34.866790179 +0100
+++ b/sound/soc/codecs/es8316.c	2020-01-20 12:46:17.878146908 +0100
@@ -14,6 +14,7 @@
 #include <linux/i2c.h>
 #include <linux/mod_devicetable.h>
 #include <linux/mutex.h>
+#include <linux/of_gpio.h>
 #include <linux/regmap.h>
 #include <sound/pcm.h>
 #include <sound/pcm_params.h>
@@ -23,6 +24,8 @@
 #include <sound/jack.h>
 #include "es8316.h"
 
+#define INVALID_GPIO -1
+
 /* In slave mode at single speed, the codec is documented as accepting 5
  * MCLK/LRCK ratios, but we also add ratio 400, which is commonly used on
  * Intel Cherry Trail platforms (19.2MHz MCLK, 48kHz LRCK).
@@ -39,12 +42,24 @@
 	struct snd_soc_component *component;
 	struct snd_soc_jack *jack;
 	int irq;
+	int spk_ctl_gpio;
 	unsigned int sysclk;
 	unsigned int allowed_rates[NR_SUPPORTED_MCLK_LRCK_RATIOS];
 	struct snd_pcm_hw_constraint_list sysclk_constraints;
 	bool jd_inverted;
+	bool spk_active_level;
 };
 
+static void es8316_enable_spk(struct es8316_priv *es8316, bool enable)
+{
+	bool level;
+
+	level = enable ? es8316->spk_active_level : !es8316->spk_active_level;
+
+	if (INVALID_GPIO != es8316->spk_ctl_gpio)
+		gpio_set_value(es8316->spk_ctl_gpio, level);
+}
+
 /*
  * ES8316 controls
  */
@@ -599,11 +614,13 @@
 			es8316_disable_micbias_for_mic_gnd_short_detect(comp);
 
 		if (es8316->jack->status & SND_JACK_HEADPHONE) {
+			es8316_enable_spk(es8316, true);
 			snd_soc_jack_report(es8316->jack, 0,
 					    SND_JACK_HEADSET | SND_JACK_BTN_0);
 			dev_dbg(comp->dev, "jack unplugged\n");
 		}
 	} else if (!(es8316->jack->status & SND_JACK_HEADPHONE)) {
+		es8316_enable_spk(es8316, false);
 		/* Jack inserted, determine type */
 		es8316_enable_micbias_for_mic_gnd_short_detect(comp);
 		regmap_read(es8316->regmap, ES8316_GPIO_FLAG, &flags);
@@ -612,6 +629,7 @@
 		dev_dbg(comp->dev, "gpio flags %#04x\n", flags);
 		if (flags & ES8316_GPIO_FLAG_HP_NOT_INSERTED) {
 			/* Jack unplugged underneath us */
+			es8316_enable_spk(es8316, true);
 			es8316_disable_micbias_for_mic_gnd_short_detect(comp);
 		} else if (flags & ES8316_GPIO_FLAG_GM_NOT_SHORTED) {
 			/* Open, headset */
@@ -712,23 +730,43 @@
 {
 	struct es8316_priv *es8316 = snd_soc_component_get_drvdata(component);
 	int ret;
+	enum of_gpio_flags flags;
+	struct device *dev = component->dev;
 
 	es8316->component = component;
 
-	es8316->mclk = devm_clk_get_optional(component->dev, "mclk");
+	es8316->mclk = devm_clk_get_optional(dev, "mclk");
 	if (IS_ERR(es8316->mclk)) {
-		dev_err(component->dev, "unable to get mclk\n");
+		dev_err(dev, "unable to get mclk\n");
 		return PTR_ERR(es8316->mclk);
 	}
 	if (!es8316->mclk)
-		dev_warn(component->dev, "assuming static mclk\n");
+		dev_warn(dev, "assuming static mclk\n");
 
 	ret = clk_prepare_enable(es8316->mclk);
 	if (ret) {
-		dev_err(component->dev, "unable to enable mclk\n");
+		dev_err(dev, "unable to enable mclk\n");
 		return ret;
 	}
 
+	es8316->spk_ctl_gpio = of_get_named_gpio_flags(dev->of_node,
+						       "spk-con-gpio",
+						       0,
+						       &flags);
+	if (es8316->spk_ctl_gpio < 0) {
+		dev_info(dev, "Can not read property spk_ctl_gpio\n");
+		es8316->spk_ctl_gpio = INVALID_GPIO;
+	} else {
+		es8316->spk_active_level = !(flags & OF_GPIO_ACTIVE_LOW);
+		ret = devm_gpio_request_one(dev, es8316->spk_ctl_gpio,
+					    GPIOF_DIR_OUT, NULL);
+		if (ret) {
+			dev_err(dev, "Failed to request spk_ctl_gpio\n");
+			return ret;
+		}
+		es8316_enable_spk(es8316, false);
+	}
+
 	/* Reset codec and enable current state machine */
 	snd_soc_component_write(component, ES8316_RESET, 0x3f);
 	usleep_range(5000, 5500);
--- a/Documentation/devicetree/bindings/sound/everest,es8316.txt	2020-01-20 12:48:11.689646013 +0100
+++ b/Documentation/devicetree/bindings/sound/everest,es8316.txt	2020-01-20 12:29:39.245809168 +0100
@@ -12,6 +12,7 @@
   - clocks : a list of phandle, should contain entries for clock-names
   - clock-names : should include as follows:
          "mclk" : master clock (MCLK) of the device
+  - spk-con-gpio : spk mute enable/disable
 
 Example:
 
@@ -20,4 +21,5 @@
 	reg = <0x11>;
 	clocks = <&clks 10>;
 	clock-names = "mclk";
+	spk-con-gpio = <&gpio4 RK_PD3 GPIO_ACTIVE_HIGH>;
 };
