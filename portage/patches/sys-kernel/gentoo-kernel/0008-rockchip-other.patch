diff --color -urN ./drivers/leds/led-core.c /root/linux/drivers/leds/led-core.c
--- a/drivers/leds/led-core.c	2023-10-30 03:31:08.000000000 +0100
+++ b/drivers/leds/led-core.c	2023-11-08 23:51:15.770017262 +0100
@@ -36,6 +36,11 @@
 	[LED_COLOR_ID_IR] = "ir",
 	[LED_COLOR_ID_MULTI] = "multicolor",
 	[LED_COLOR_ID_RGB] = "rgb",
+	[LED_COLOR_ID_PURPLE] = "purple",
+	[LED_COLOR_ID_ORANGE] = "orange",
+	[LED_COLOR_ID_PINK] = "pink",
+	[LED_COLOR_ID_CYAN] = "cyan",
+	[LED_COLOR_ID_LIME] = "lime",
 };
 EXPORT_SYMBOL_GPL(led_colors);
 
diff --color -urN ./drivers/mfd/rk8xx-core.c /root/linux/drivers/mfd/rk8xx-core.c
--- a/drivers/mfd/rk8xx-core.c	2023-10-30 03:31:08.000000000 +0100
+++ b/drivers/mfd/rk8xx-core.c	2023-11-08 23:51:16.798000906 +0100
@@ -43,8 +43,8 @@
 };
 
 static const struct resource rk817_pwrkey_resources[] = {
-	DEFINE_RES_IRQ(RK817_IRQ_PWRON_RISE),
 	DEFINE_RES_IRQ(RK817_IRQ_PWRON_FALL),
+	DEFINE_RES_IRQ(RK817_IRQ_PWRON_RISE),
 };
 
 static const struct resource rk817_charger_resources[] = {
@@ -525,6 +525,10 @@
 		reg = RK805_DEV_CTRL_REG;
 		bit = DEV_OFF;
 		break;
+	case RK806_ID:
+		reg = RK806_SYS_CFG3;
+		bit = DEV_OFF;
+		break;
 	case RK808_ID:
 		reg = RK808_DEVCTRL_REG,
 		bit = DEV_OFF_RST;
@@ -685,7 +689,8 @@
 	if (ret)
 		return dev_err_probe(dev, ret, "failed to add MFD devices\n");
 
-	if (device_property_read_bool(dev, "rockchip,system-power-controller")) {
+	if (device_property_read_bool(dev, "rockchip,system-power-controller") ||
+	    device_property_read_bool(dev, "system-power-controller")) {
 		ret = devm_register_sys_off_handler(dev,
 				    SYS_OFF_MODE_POWER_OFF_PREPARE, SYS_OFF_PRIO_HIGH,
 				    &rk808_power_off, rk808);
diff --color -urN ./drivers/pci/pcie/portdrv.c /root/linux/drivers/pci/pcie/portdrv.c
--- a/drivers/pci/pcie/portdrv.c	2023-10-30 03:31:08.000000000 +0100
+++ b/drivers/pci/pcie/portdrv.c	2023-11-08 23:51:19.933951083 +0100
@@ -738,7 +738,7 @@
 		pm_runtime_dont_use_autosuspend(&dev->dev);
 	}
 
-	pcie_port_device_remove(dev);
+	device_for_each_child(&dev->dev, NULL, remove_iter);
 }
 
 static pci_ers_result_t pcie_portdrv_error_detected(struct pci_dev *dev,
