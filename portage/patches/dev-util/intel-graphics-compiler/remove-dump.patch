--- a/IGC/Compiler/CISACodeGen/PreRAScheduler.cpp
+++ b/IGC/Compiler/CISACodeGen/PreRAScheduler.cpp
@@ -249,7 +249,7 @@
         for (; edgeItBegin != edgeItEnd; edgeItBegin++)
         {
             ods() << " Successor: end ";
-            (*edgeItBegin)->end->dump();
+            //(*edgeItBegin)->end->dump();
             ods() << "\t";
             ods() << " Successor: delay " << (*edgeItBegin)->delay << "\n";
         }
@@ -852,7 +852,7 @@
     ods() << "Begin of longLatencyDelaySortedReadyQueue contents" << "\n";
     while (!longLatencyQueueCopy.empty())
     {
-        longLatencyQueueCopy.top()->instruction->dump();
+        //longLatencyQueueCopy.top()->instruction->dump();
         ods() << longLatencyQueueCopy.top()->nodeDelay << "\n";
         ods() << longLatencyQueueCopy.top()->earliestCycle << "\n";
         ods() << longLatencyQueueCopy.top()->successors.size() << "\n";
@@ -873,7 +873,7 @@
              readyMapNodeIt != readyMapIt->second.end();
              readyMapNodeIt++)
         {
-            (*readyMapNodeIt)->instruction->dump();
+            //(*readyMapNodeIt)->instruction->dump();
             ods() << (*readyMapNodeIt)->nodeDelay << "\n";
             ods() << (*readyMapNodeIt)->earliestCycle << "\n";
             ods() << (*readyMapNodeIt)->successors.size() << "\n";
@@ -885,7 +885,7 @@
     ods() << "Begin of shortLatencySortedReadyQueue contents" << "\n";
     while (!shortLatencyQueueCopy.empty())
     {
-        shortLatencyQueueCopy.top()->instruction->dump();
+        //shortLatencyQueueCopy.top()->instruction->dump();
         ods() << shortLatencyQueueCopy.top()->nodeDelay << "\n";
         ods() << shortLatencyQueueCopy.top()->earliestCycle << "\n";
         ods() << shortLatencyQueueCopy.top()->successors.size() << "\n";
@@ -899,7 +899,7 @@
     ods() << "Begin of readyNodeHoldQueue contents" << "\n";
     while (!holdQueueCopy.empty())
     {
-        holdQueueCopy.top()->instruction->dump();
+        //holdQueueCopy.top()->instruction->dump();
         ods() << holdQueueCopy.top()->nodeDelay << "\n";
         ods() << holdQueueCopy.top()->earliestCycle << "\n";
         ods() << holdQueueCopy.top()->successors.size() << "\n";
