--- a/src/Ide/Plugin/Hlint.hs	2022-09-12 10:54:15.303034095 +0200
+++ b/src/Ide/Plugin/Hlint.hs	2022-09-12 10:58:02.759104341 +0200
@@ -90,6 +90,7 @@
                                                                      withFile)
 import           System.IO.Temp
 #else
+import           GHC.Types.Fixity
 import           Development.IDE.GHC.Compat                         hiding
                                                                     (setEnv,
                                                                      (<+>))
@@ -286,9 +287,8 @@
           mbpm <- getParsedModuleWithComments nfp
           return $ createModule <$> mbpm
           where
-            createModule pm = Right (createModuleEx anns (applyParseFlagsFixities modu))
-                  where anns = pm_annotations pm
-                        modu = pm_parsed_source pm
+            createModule pm = Right (createModuleEx (applyParseFlagsFixities modu))
+                  where modu = pm_parsed_source pm
 
             applyParseFlagsFixities :: ParsedSource -> ParsedSource
             applyParseFlagsFixities modul = GhclibParserEx.applyFixities (parseFlagsToFixities _flags) modul
@@ -591,14 +591,11 @@
         case mbParsedModule of
             Nothing -> throwE "Apply hint: error parsing the module"
             Just pm -> do
-                let anns = pm_annotations pm
                 let modu = pm_parsed_source pm
-                -- apply-refact uses RigidLayout
-                let rigidLayout = deltaOptions RigidLayout
-                (anns', modu') <-
-                    ExceptT $ mapM (uncurry Refact.applyFixities)
-                            $ postParseTransform (Right (anns, [], dflags, modu)) rigidLayout
-                liftIO $ (Right <$> withRuntimeLibdir (Refact.applyRefactorings' position commands anns' modu'))
+                modu' <-
+                    ExceptT $ mapM (Refact.applyFixities)
+                            $ postParseTransform (Right ([], dflags, modu))
+                liftIO $ (Right <$> withRuntimeLibdir (Refact.applyRefactorings' position commands modu'))
                             `catches` errorHandlers
 #endif
     case res of
--- a/hls-hlint-plugin.cabal	2023-01-12 16:19:36.721300861 +0100
+++ b/hls-hlint-plugin.cabal	2023-01-12 16:21:43.365761204 +0100
@@ -24,6 +24,11 @@
     type:     git
     location: https://github.com/haskell/haskell-language-server.git
 
+flag ghc-lib
+   description: Force dependency on ghc-lib-parser even if GHC API in the ghc package is supported
+   default:     False
+   manual:      True
+
 flag pedantic
   description: Enable -Werror
   default:     False
@@ -59,14 +64,12 @@
     , text
     , transformers
     , unordered-containers
-    , ghc-lib-parser
     , ghc-lib-parser-ex
   if impl(ghc >= 9.2)
     build-depends: apply-refact ^>= 0.11.0.0
   else
     build-depends: apply-refact ^>= 0.9.0.0
 
-  cpp-options:   -DHLINT_ON_GHC_LIB
   ghc-options:
     -Wall -Wredundant-constraints -Wno-name-shadowing
     -Wno-unticked-promoted-constructors
@@ -74,6 +77,14 @@
   if flag(pedantic)
     ghc-options: -Werror
 
+  if ((!flag(ghc-lib) && impl(ghc >=9.2)) && impl(ghc <9.3))
+    build-depends:
+      ghc ==9.2.*
+  else
+    cpp-options:   -DHLINT_ON_GHC_LIB
+    build-depends:
+      ghc-lib-parser
+
   default-language:   Haskell2010
   default-extensions:
     DataKinds
