Only in /haskell-src-exts-1.20.3: Setup.hi
Only in /haskell-src-exts-1.20.3: Setup.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Build.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Build.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Build.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Build.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Comments.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Comments.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Comments.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Comments.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExactPrint.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExactPrint.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExactPrint.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExactPrint.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExtScheme.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExtScheme.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExtScheme.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ExtScheme.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Extension.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Extension.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Extension.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Extension.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Fixity.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Fixity.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Fixity.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Fixity.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalLexer.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalLexer.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalLexer.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalLexer.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalParser.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalParser.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalParser.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: InternalParser.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Lexer.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Lexer.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Lexer.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Lexer.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseMonad.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseMonad.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseMonad.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseMonad.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseSyntax.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseSyntax.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseSyntax.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseSyntax.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseUtils.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseUtils.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseUtils.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: ParseUtils.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Parser.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Parser.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Parser.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Parser.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Pretty.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Pretty.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Pretty.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Pretty.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: SrcLoc.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: SrcLoc.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: SrcLoc.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: SrcLoc.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Syntax.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Syntax.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Syntax.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell/Exts: Syntax.o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell: Exts.dyn_hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell: Exts.dyn_o
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell: Exts.hi
Only in /haskell-src-exts-1.20.3/dist/build/Language/Haskell: Exts.o
Only in /haskell-src-exts-1.20.3/dist/build/Language: Preprocessor
Only in /haskell-src-exts-1.20.3/dist/build: autogen
Only in /haskell-src-exts-1.20.3/dist/build: libHShaskell-src-exts-1.20.3-BOdMOF0iiEQLalBnfcUsEE-ghc8.8.1.so
Only in /haskell-src-exts-1.20.3/dist/build: libHShaskell-src-exts-1.20.3-BOdMOF0iiEQLalBnfcUsEE.a
Only in /haskell-src-exts-1.20.3/dist: package.conf.inplace
Only in /haskell-src-exts-1.20.3/dist: setup-config
Only in /haskell-src-exts-1.20.3: setup
diff -ur haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ExactPrint.hs /haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ExactPrint.hs
--- haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ExactPrint.hs	2018-09-19 14:31:29.000000000 +0200
+++ /haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ExactPrint.hs	2019-08-27 11:56:04.901396504 +0200
@@ -58,6 +58,9 @@
         (b, l2, c2, s2) = f l1 c1
     in (b, l2, c2, s1 . s2)
 
+instance MonadFail EP where
+   fail = error
+
 runEP :: EP () -> [Comment] -> String
 runEP (EP f) cs = let (_,_,_,s) = f (1,1) cs in s ""
 
diff -ur haskell-src-exts-1.20.3/src/Language/Haskell/Exts/Fixity.hs /haskell-src-exts-1.20.3/src/Language/Haskell/Exts/Fixity.hs
--- haskell-src-exts-1.20.3/src/Language/Haskell/Exts/Fixity.hs	2018-09-19 14:31:29.000000000 +0200
+++ /haskell-src-exts-1.20.3/src/Language/Haskell/Exts/Fixity.hs	2019-08-27 11:56:04.901396504 +0200
@@ -59,9 +59,9 @@
   -- | Tweak any expressions in the element to account for the
   --   fixities given. Assumes that all operator expressions are
   --   fully left associative chains to begin with.
-  applyFixities :: Monad m => [Fixity]      -- ^ The fixities to account for.
-                    -> ast SrcSpanInfo      -- ^ The element to tweak.
-                    -> m (ast SrcSpanInfo)  -- ^ The same element, but with operator expressions updated, or a failure.
+  applyFixities :: (MonadFail m, Monad m) => [Fixity]      -- ^ The fixities to account for.
+                                  -> ast SrcSpanInfo      -- ^ The element to tweak.
+                                  -> m (ast SrcSpanInfo)  -- ^ The same element, but with operator expressions updated, or a failure.
 
 assocNone, assocLeft, assocRight :: Assoc ()
 assocNone = AssocNone ()
@@ -239,7 +239,7 @@
     _ -> return dir
     where fix x = applyFixities fixs x
 
-appFixDecls :: Monad m => Maybe (ModuleName SrcSpanInfo) -> [Fixity] -> [Decl SrcSpanInfo] -> m [Decl SrcSpanInfo]
+appFixDecls :: (MonadFail m, Monad m) => Maybe (ModuleName SrcSpanInfo) -> [Fixity] -> [Decl SrcSpanInfo] -> m [Decl SrcSpanInfo]
 appFixDecls mmdl fixs decls =
     let extraFixs = getFixities mmdl decls
      in mapM (applyFixities (fixs++extraFixs)) decls
@@ -377,7 +377,7 @@
 -- Recursively fixes the "leaves" of the infix chains,
 -- without yet touching the chain itself. We assume all chains are
 -- left-associate to begin with.
-leafFix :: Monad m => [Fixity] -> Exp SrcSpanInfo -> m (Exp SrcSpanInfo)
+leafFix :: (MonadFail m, Monad m) => [Fixity] -> Exp SrcSpanInfo -> m (Exp SrcSpanInfo)
 leafFix fixs e' = case e' of
     InfixApp l e1 op e2       -> liftM2 (flip (InfixApp l) op) (leafFix fixs e1) (fix e2)
     App l e1 e2               -> liftM2 (App l) (fix e1) (fix e2)
@@ -425,7 +425,7 @@
   where
     fix x = applyFixities fixs x
 
-leafFixP :: Monad m => [Fixity] -> Pat SrcSpanInfo -> m (Pat SrcSpanInfo)
+leafFixP :: (MonadFail m, Monad m) => [Fixity] -> Pat SrcSpanInfo -> m (Pat SrcSpanInfo)
 leafFixP fixs p' = case p' of
         PInfixApp l p1 op p2    -> liftM2 (flip (PInfixApp l) op) (leafFixP fixs p1) (fix p2)
         PApp l n ps             -> liftM (PApp l n) $ mapM fix ps
diff -ur haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ParseMonad.hs /haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ParseMonad.hs
--- haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ParseMonad.hs	2018-09-19 14:31:29.000000000 +0200
+++ /haskell-src-exts-1.20.3/src/Language/Haskell/Exts/ParseMonad.hs	2019-08-27 11:56:04.901396504 +0200
@@ -96,7 +96,6 @@
 
 instance Monad ParseResult where
   return = ParseOk
-  fail = Fail.fail
   ParseOk x           >>= f = f x
   ParseFailed loc msg >>= _ = ParseFailed loc msg
 instance Fail.MonadFail ParseResult where
@@ -246,7 +245,6 @@
         case m i x y l ch s mode of
             Failed loc msg -> Failed loc msg
             Ok s' a -> runP (k a) i x y l ch s' mode
-    fail   = Fail.fail
 
 instance Fail.MonadFail P where
     fail s = P $ \_r _col _line loc _ _stk _m -> Failed loc s
@@ -354,7 +352,6 @@
     return a = Lex $ \k -> k a
     Lex v >>= f = Lex $ \k -> v (\a -> runL (f a) k)
     Lex v >> Lex w = Lex $ \k -> v (\_ -> w k)
-    fail   = Fail.fail
 
 instance Fail.MonadFail (Lex r) where
     fail s = Lex $ \_ -> fail s
