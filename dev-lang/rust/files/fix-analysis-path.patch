--- a/src/vendor/rls-analysis/src/loader.rs
+++ b/src/vendor/rls-analysis/src/loader.rs
@@ -88,11 +88,9 @@
             .join("save-analysis");
         // FIXME sys_root_path allows to break out of 'sandbox' - is that Ok?
         let sys_root_path = sys_root_path();
-        let target_triple = extract_target_triple(sys_root_path.as_path());
         let libs_path = sys_root_path
             .join("lib")
             .join("rustlib")
-            .join(&target_triple)
             .join("analysis");
 
         let src_path = sys_root_path
@@ -109,25 +107,6 @@
     }
 }
 
-// FIXME: This can fail when using a custom toolchain in rustup (often linked to
-// `/$rust_repo/build/$target/stage2`)
-fn extract_target_triple(sys_root_path: &Path) -> String {
-    // Extracts nightly-x86_64-pc-windows-msvc from
-    // $HOME/.rustup/toolchains/nightly-x86_64-pc-windows-msvc
-    let toolchain = sys_root_path
-        .iter()
-        .last()
-        .and_then(OsStr::to_str)
-        .expect("extracting toolchain failed");
-    // Extracts x86_64-pc-windows-msvc from nightly-x86_64-pc-windows-pc
-    let triple = toolchain
-        .splitn(2, '-')
-        .last()
-        .map(String::from)
-        .expect("extracting triple failed");
-    triple
-}
-
 fn sys_root_path() -> PathBuf {
     env::var("SYSROOT")
         .ok()
--- a/src/vendor/rls-analysis/.cargo-checksum.json
+++ b/src/vendor/rls-analysis/.cargo-checksum.json
@@ -1 +1 @@
-{"files":{".cargo-ok":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",".gitignore":"9507c2ad1861cc4599474f2fa645a0938dfb381b8c79e307ce1b44780cf10fcd",".travis.yml":"79a4b8dfb1f76bb1fb7126679109a5326fbd2bcadc69765ef98cb431a90a02a4","Cargo.toml":"7c505899f562090b1996c561002193c93602c8f54a6881e58a9bee7e95714a55","Cargo.toml.orig":"690a61d13777f0b7152bb02a59ad6b062dda6881657b6a4adda7d58f7f3a7a82","README.md":"3f8b7e6f924b74fdc7affa314d3b029090c4838c63d3420e8d6b3aa6eff448d2","benches/std_api_crate.rs":"d74c62201b6c9fc13a63acdc6c7013bf618633e8b0965a802315ca516f56742f","src/analysis.rs":"4d0df2e35103abd42f3d83d3b0bd6b6c43c4244ab3eacc5f6d7fc446bc035804","src/lib.rs":"a6eb230aad26b32398e2d50c974c5b722f58000717ca1d69757898bffcd0c788","src/listings/mod.rs":"b3cd49cd4ef69352f79a9a5302bde9d72c5ad192b0c06c4c1a1f1ad6dccd3f99","src/loader.rs":"303c87e19ebd3c2ebd535d6f9f1d70cb33f357db84a226196051590d144dd6a0","src/lowering.rs":"a5a8425bcc25d2238d511f42223d1e2cb7c65a9a3d70f52fdcc786f6671a7f82","src/raw.rs":"058a8b50516bc87d02dd5733cd477291d7d3e9270bf53d5a05ebb570f3b157bf","src/test/mod.rs":"46da189dad340ad8fa9f4c97a1183172d3b0a85fc6eec9f5645810cf0f9d1042","src/util.rs":"2b6a2a5a46f948818bafd616619242d11161971001b94a15dc071c8c43188047"},"package":"da9794cd1f80f2cb888c00641a32f9855d0226c954ee31cef145784914c7142e"}
\ No newline at end of file
+{"files":{".cargo-ok":"e3b0c44298fc1c149afbf4c8996fb92427ae41e4649b934ca495991b7852b855",".gitignore":"9507c2ad1861cc4599474f2fa645a0938dfb381b8c79e307ce1b44780cf10fcd",".travis.yml":"79a4b8dfb1f76bb1fb7126679109a5326fbd2bcadc69765ef98cb431a90a02a4","Cargo.toml":"7c505899f562090b1996c561002193c93602c8f54a6881e58a9bee7e95714a55","Cargo.toml.orig":"690a61d13777f0b7152bb02a59ad6b062dda6881657b6a4adda7d58f7f3a7a82","README.md":"3f8b7e6f924b74fdc7affa314d3b029090c4838c63d3420e8d6b3aa6eff448d2","benches/std_api_crate.rs":"d74c62201b6c9fc13a63acdc6c7013bf618633e8b0965a802315ca516f56742f","src/analysis.rs":"4d0df2e35103abd42f3d83d3b0bd6b6c43c4244ab3eacc5f6d7fc446bc035804","src/lib.rs":"a6eb230aad26b32398e2d50c974c5b722f58000717ca1d69757898bffcd0c788","src/listings/mod.rs":"b3cd49cd4ef69352f79a9a5302bde9d72c5ad192b0c06c4c1a1f1ad6dccd3f99","src/loader.rs":"6eef6e4094da1b520d9e7a7ede474374ce5406e5e97f2b7c46ab1e50beb85a07","src/lowering.rs":"a5a8425bcc25d2238d511f42223d1e2cb7c65a9a3d70f52fdcc786f6671a7f82","src/raw.rs":"058a8b50516bc87d02dd5733cd477291d7d3e9270bf53d5a05ebb570f3b157bf","src/test/mod.rs":"46da189dad340ad8fa9f4c97a1183172d3b0a85fc6eec9f5645810cf0f9d1042","src/util.rs":"2b6a2a5a46f948818bafd616619242d11161971001b94a15dc071c8c43188047"},"package":"da9794cd1f80f2cb888c00641a32f9855d0226c954ee31cef145784914c7142e"}
