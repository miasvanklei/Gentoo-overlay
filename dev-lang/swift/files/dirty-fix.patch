diff --git a/stdlib/public/core/CTypes.swift b/stdlib/public/core/CTypes.swift
index 16d8eaa2a3..d13e9e5ecb 100644
--- a/stdlib/public/core/CTypes.swift
+++ b/stdlib/public/core/CTypes.swift
@@ -191,7 +191,7 @@ func _memcpy(
   let dest = destination._rawValue
   let src = src._rawValue
   let size = UInt64(size)._value
-  Builtin.int_memcpy_RawPointer_RawPointer_Int64(
+  Builtin.int_memmove_RawPointer_RawPointer_Int64(
     dest, src, size,
     /*alignment:*/ Int32()._value,
     /*volatile:*/ false._value)
diff --git a/stdlib/public/core/UnsafeRawPointer.swift.gyb b/stdlib/public/core/UnsafeRawPointer.swift.gyb
index 4baf4d3602..216ed4b491 100644
--- a/stdlib/public/core/UnsafeRawPointer.swift.gyb
+++ b/stdlib/public/core/UnsafeRawPointer.swift.gyb
@@ -821,7 +821,7 @@ public struct Unsafe${Mutable}RawPointer : Strideable, Hashable, _Pointer {
     withUnsafeMutablePointer(to: &temp) { source in
       let rawSrc = UnsafeMutableRawPointer(source)._rawValue
       // FIXME: to be replaced by _memcpy when conversions are implemented.
-      Builtin.int_memcpy_RawPointer_RawPointer_Int64(
+      Builtin.int_memmove_RawPointer_RawPointer_Int64(
         (self + offset)._rawValue, rawSrc, UInt64(MemoryLayout<T>.size)._value,
         /*alignment:*/ Int32(0)._value,
         /*volatile:*/ false._value)
