--- a/CMakeLists.txt	2016-11-15 15:32:33.407734438 +0100
+++ b/CMakeLists.txt	2016-11-15 15:32:42.905781020 +0100
@@ -82,12 +82,6 @@
 set_property(CACHE SWIFT_STDLIB_BUILD_TYPE PROPERTY
     STRINGS "Debug" "RelWithDebInfo" "Release" "MinSizeRel")
 
-is_build_type_optimized("${SWIFT_STDLIB_BUILD_TYPE}" swift_optimized)
-if(swift_optimized)
-  set(SWIFT_STDLIB_ASSERTIONS_default FALSE)
-else()
-  set(SWIFT_STDLIB_ASSERTIONS_default TRUE)
-endif()
 option(SWIFT_STDLIB_ASSERTIONS
     "Enable internal checks for the Swift standard library (useful for debugging the library itself, does not affect checks required for safety)"
     "${SWIFT_STDLIB_ASSERTIONS_default}")
--- a/cmake/modules/AddSwift.cmake	2016-11-15 15:27:49.530028749 +0100
+++ b/cmake/modules/AddSwift.cmake	2016-11-15 15:31:23.830458780 +0100
@@ -159,30 +159,6 @@
     DEPLOYMENT_VERSION_IOS "${CFLAGS_DEPLOYMENT_VERSION_IOS}"
     RESULT_VAR_NAME result)
 
-  is_build_type_optimized("${CFLAGS_BUILD_TYPE}" optimized)
-  if(optimized)
-    list(APPEND result "-O2")
-
-    # Add -momit-leaf-frame-pointer on x86.
-    if("${CFLAGS_ARCH}" STREQUAL "i386" OR "${CFLAGS_ARCH}" STREQUAL "x86_64")
-      list(APPEND result "-momit-leaf-frame-pointer")
-    endif()
-  else()
-    list(APPEND result "-O0")
-  endif()
-
-  is_build_type_with_debuginfo("${CFLAGS_BUILD_TYPE}" debuginfo)
-  if(debuginfo)
-    _compute_lto_flag("${CFLAGS_ENABLE_LTO}" _lto_flag_out)
-    if(_lto_flag_out)
-      list(APPEND result "-gline-tables-only")
-    else()
-      list(APPEND result "-g")
-    endif()
-  else()
-    list(APPEND result "-g0")
-  endif()
-
   if("${CFLAGS_SDK}" STREQUAL "WINDOWS")
     list(APPEND result -Xclang;--dependent-lib=oldnames)
     # TODO(compnerd) handle /MT, /MTd, /MD, /MDd
@@ -230,22 +206,6 @@
         "-F" "${SWIFT_SDK_${sdk}_PATH}/../../../Developer/Library/Frameworks")
   endif()
 
-  is_build_type_optimized("${build_type}" optimized)
-  if(optimized)
-    list(APPEND result "-O")
-  else()
-    list(APPEND result "-Onone")
-  endif()
-
-  is_build_type_with_debuginfo("${build_type}" debuginfo)
-  if(debuginfo)
-    list(APPEND result "-g")
-  endif()
-
-  if(enable_assertions)
-    list(APPEND result "-D" "INTERNAL_CHECKS_ENABLED")
-  endif()
-
   set("${result_var_name}" "${result}" PARENT_SCOPE)
 endfunction()
 
@@ -1230,15 +1190,6 @@
         Core)
   endif()
 
-  if(SWIFTLIB_HAS_SWIFT_CONTENT AND NOT SWIFTLIB_IS_STDLIB_CORE)
-    # All Swift code depends on the SwiftOnoneSupport in non-optimized mode,
-    # except for the standard library itself.
-    is_build_type_optimized("${SWIFT_STDLIB_BUILD_TYPE}" optimized)
-    if(NOT optimized)
-      list(APPEND SWIFTLIB_SWIFT_MODULE_DEPENDS SwiftOnoneSupport)
-    endif()
-  endif()
-
   if((NOT "${SWIFT_BUILD_STDLIB}") AND
     (NOT "${SWIFTLIB_SWIFT_MODULE_DEPENDS}" STREQUAL ""))
     list(REMOVE_ITEM SWIFTLIB_SWIFT_MODULE_DEPENDS
--- a/test/CMakeLists.txt	2016-11-15 15:51:51.988796452 +0100
+++ b/test/CMakeLists.txt	2016-11-15 15:52:02.488785465 +0100
@@ -123,7 +123,6 @@
   normalize_boolean_spelling(SWIFT_STDLIB_ASSERTIONS)
   normalize_boolean_spelling(SWIFT_AST_VERIFIER)
   normalize_boolean_spelling(SWIFT_ASAN_BUILD)
-  is_build_type_optimized("${SWIFT_STDLIB_BUILD_TYPE}" SWIFT_OPTIMIZED)
 
   set(profdata_merge_worker
       "${CMAKE_CURRENT_SOURCE_DIR}/../utils/profdata_merge/main.py")
