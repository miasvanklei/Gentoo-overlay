--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -830,8 +820,9 @@ endif()
 # You need libedit linked in order to check if you have el_wgets.
 cmake_push_check_state()
 list(APPEND CMAKE_REQUIRED_LIBRARIES "edit")
+list(APPEND CMAKE_REQUIRED_LIBRARIES "bsd")
 check_symbol_exists(el_wgets "histedit.h" HAVE_EL_WGETS)
-check_symbol_exists(wcslcat wchar.h HAVE_WCSLCAT)
+check_symbol_exists(wcslcat bsd/wchar.h HAVE_WCSLCAT)
 # FIXME: UNICODE_LIBEDIT shouldn't need BSD's wcslcat function,
 #        rewrite the usages in terms of wcsncat to get the REPL
 #        building on linux.
--- a/lib/Immediate/REPL.cpp
+++ b/lib/Immediate/REPL.cpp
@@ -36,6 +36,7 @@
 #include "llvm/Support/Process.h"
 
 #if HAVE_UNICODE_LIBEDIT
+#include <bsd/wchar.h>
 #include <histedit.h>
 #endif
 
--- a/tools/driver/CMakeLists.txt
+++ b/tools/driver/CMakeLists.txt
@@ -37,6 +37,7 @@
 
 if(HAVE_UNICODE_LIBEDIT)
   target_link_libraries(swift edit)
+  target_link_libraries(swift bsd)
 endif()
 
 swift_create_post_build_symlink(swift
--- a/tools/swift-remoteast-test/CMakeLists.txt
+++ b/tools/swift-remoteast-test/CMakeLists.txt
@@ -26,6 +26,7 @@
 set_target_properties(swift-remoteast-test PROPERTIES ENABLE_EXPORTS 1)
 if(HAVE_UNICODE_LIBEDIT)
   target_link_libraries(swift-remoteast-test edit)
+  target_link_libraries(swift-remoteast-test bsd)
 endif()
 
 # If building as part of clang, make sure the headers are installed.
