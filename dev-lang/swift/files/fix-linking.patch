diff --git a/lib/Immediate/CMakeLists.txt b/lib/Immediate/CMakeLists.txt
index f6919cddf0..ebaf85a0e8 100644
--- a/lib/Immediate/CMakeLists.txt
+++ b/lib/Immediate/CMakeLists.txt
@@ -8,5 +8,9 @@ add_swift_library(swiftImmediate STATIC
     swiftSILOptimizer
     swiftIRGen
   LLVM_COMPONENT_DEPENDS
-    linker mcjit)
+    linker
+    mcjit
+    ExecutionEngine
+    TransformUtils
+)
 
diff --git a/lib/IRGen/CMakeLists.txt b/lib/IRGen/CMakeLists.txt
index 3749f7cd32..b080c03450 100644
--- a/lib/IRGen/CMakeLists.txt
+++ b/lib/IRGen/CMakeLists.txt
@@ -52,4 +52,6 @@ add_swift_library(swiftIRGen STATIC
     # FIXME: Clang should really export these in some reasonable manner.
     clangCodeGen
     clangAST
+  LLVM_COMPONENT_DEPENDS
+    TransformUtils
 )
diff --git a/tools/swift-llvm-opt/CMakeLists.txt b/tools/swift-llvm-opt/CMakeLists.txt
index 628d7bddb8..ce60754756 100644
--- a/tools/swift-llvm-opt/CMakeLists.txt
+++ b/tools/swift-llvm-opt/CMakeLists.txt
@@ -13,6 +13,11 @@ add_swift_host_tool(swift-llvm-opt
 
   LLVM_COMPONENT_DEPENDS
     DebugInfoCodeView
+    ScalarOpts
+    Vectorize
+    InstCombine
+    Target
+    CodeGen
 
   SWIFT_COMPONENT tools
 )
diff --git a/cmake/modules/AddSwift.cmake b/cmake/modules/AddSwift.cmake
index 86c0839e26..2de83ae5f2 100644
--- a/cmake/modules/AddSwift.cmake
+++ b/cmake/modules/AddSwift.cmake
@@ -952,17 +912,11 @@ function(_add_swift_library_single target name)
   # specified with this syntax, which breaks linking.
   set(prefixed_link_libraries)
   foreach(dep ${SWIFTLIB_SINGLE_LINK_LIBRARIES})
-    if("${dep}" MATCHES "^clang")
-      if("${SWIFT_HOST_VARIANT_SDK}" STREQUAL "WINDOWS")
-        set(dep "${LLVM_LIBRARY_OUTPUT_INTDIR}/${dep}.lib")
-      else()
-        set(dep "${LLVM_LIBRARY_OUTPUT_INTDIR}/lib${dep}.a")
-      endif()
-    elseif("${dep}" STREQUAL "cmark")
+    if("${dep}" STREQUAL "cmark")
       if("${SWIFT_HOST_VARIANT_SDK}" STREQUAL "WINDOWS")
         set(dep "${CMARK_LIBRARY_DIR}/${dep}.lib")
       else()
-        set(dep "${CMARK_LIBRARY_DIR}/lib${dep}.a")
+        set(dep "-lcmark")
       endif()
     endif()
     list(APPEND prefixed_link_libraries "${dep}")
diff --git a/stdlib/public/SwiftRemoteMirror/CMakeLists.txt b/stdlib/public/SwiftRemoteMirror/CMakeLists.txt
index 260d04e0f9..0d7f8cf1f3 100644
--- a/stdlib/public/SwiftRemoteMirror/CMakeLists.txt
+++ b/stdlib/public/SwiftRemoteMirror/CMakeLists.txt
@@ -5,6 +5,6 @@ if(SWIFT_BUILD_DYNAMIC_STDLIB OR SWIFT_BUILD_REMOTE_MIRROR)
       SwiftRemoteMirror.cpp
       LINK_LIBRARIES swiftReflection
       C_COMPILE_FLAGS ${SWIFT_RUNTIME_CXX_FLAGS}
-      LINK_FLAGS ${SWIFT_RUNTIME_LINK_FLAGS}
+      LINK_FLAGS ${SWIFT_RUNTIME_LINK_FLAGS} "-lLLVMSupport"
       INSTALL_IN_COMPONENT swift-remote-mirror)
 endif()
diff --git a/stdlib/public/core/CMakeLists.txt b/stdlib/public/core/CMakeLists.txt
index fc49842db8..e5210337be 100644
--- a/stdlib/public/core/CMakeLists.txt
+++ b/stdlib/public/core/CMakeLists.txt
@@ -222,7 +222,7 @@ add_swift_library(swiftCore ${SWIFT_STDLIB_LIBRARY_BUILD_TYPES} IS_STDLIB IS_STD
     ${GROUP_INFO_JSON_FILE}
   SWIFT_COMPILE_FLAGS ${swift_stdlib_compile_flags}
   LINK_FLAGS ${swift_core_link_flags}
-  PRIVATE_LINK_LIBRARIES ${swift_core_private_link_libraries}
+  PRIVATE_LINK_LIBRARIES ${swift_core_private_link_libraries} "-lLLVMSupport"
   INCORPORATE_OBJECT_LIBRARIES swiftRuntime swiftStdlibStubs
   FRAMEWORK_DEPENDS ${swift_core_framework_depends}
   INSTALL_IN_COMPONENT stdlib)
