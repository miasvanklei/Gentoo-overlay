diff --git a/cmake/modules/AddSwift.cmake b/cmake/modules/AddSwift.cmake
index 86c0839e26..2de83ae5f2 100644
--- a/cmake/modules/AddSwift.cmake
+++ b/cmake/modules/AddSwift.cmake
@@ -914,11 +874,11 @@ function(_add_swift_library_single target name)
   # specified with this syntax, which breaks linking.
   set(prefixed_link_libraries)
   foreach(dep ${SWIFTLIB_SINGLE_LINK_LIBRARIES})
-    if("${dep}" MATCHES "^clang")
-      set(dep "${LLVM_LIBRARY_OUTPUT_INTDIR}/lib${dep}.a")
-    endif()
+    #if("${dep}" MATCHES "^clang")
+    #  set(dep "${LLVM_LIBRARY_OUTPUT_INTDIR}/lib${dep}.a")
+    #endif()
     if("${dep}" STREQUAL "cmark")
-      set(dep "${CMARK_LIBRARY_DIR}/lib${dep}.a")
+      set(dep "-lcmark")
     endif()
     list(APPEND prefixed_link_libraries "${dep}")
   endforeach()
diff --git a/tools/driver/CMakeLists.txt b/tools/driver/CMakeLists.txt
index 902b9fe97c..f6986f9a1c 100644
--- a/tools/driver/CMakeLists.txt
+++ b/tools/driver/CMakeLists.txt
@@ -7,8 +7,31 @@ add_swift_host_tool(swift
   LINK_LIBRARIES
     swiftDriver
     swiftFrontendTool
+    swiftFrontend
+    swiftBasic
+    swiftAST
+    swiftSema
+    swiftOption
+    swiftOption
+    swiftSIL
+    swiftParse
+    swiftIDE
+    swiftIRGen
+    swiftClangImporter
+
+    clangAPINotes
   LLVM_COMPONENT_DEPENDS
     DebugInfoCodeView
+    Support
+    X86Info
+    X86CodeGen
+    X86Desc
+    X86AsmParser
+    X86Disassembler
+    Option
+    Object
+    ExecutionEngine
+    TransformUtils
   SWIFT_COMPONENT compiler
 )
 
diff --git a/tools/lldb-moduleimport-test/CMakeLists.txt b/tools/lldb-moduleimport-test/CMakeLists.txt
index f1c80823a6..676e3b187f 100644
--- a/tools/lldb-moduleimport-test/CMakeLists.txt
+++ b/tools/lldb-moduleimport-test/CMakeLists.txt
@@ -1,9 +1,22 @@
 add_swift_host_tool(lldb-moduleimport-test
   lldb-moduleimport-test.cpp
   LINK_LIBRARIES
-    swiftASTSectionImporter swiftFrontend swiftClangImporter
+    swiftASTSectionImporter
+    swiftFrontend
+    swiftClangImporter
+    swiftAST
+    swiftSIL
+    swiftSerialization
   LLVM_COMPONENT_DEPENDS
     DebugInfoCodeView
+    Support
+    Option
+    Object
+    X86Info
+    X86CodeGen
+    X86Desc
+    X86AsmParser
+    X86Disassembler
   SWIFT_COMPONENT testsuite-tools
 )
 
diff --git a/tools/sil-extract/CMakeLists.txt b/tools/sil-extract/CMakeLists.txt
index 982cdb10ff..b7c90d4a48 100644
--- a/tools/sil-func-extractor/CMakeLists.txt
+++ b/tools/sil-func-extractor/CMakeLists.txt
@@ -2,11 +2,22 @@ add_swift_host_tool(sil-extract
   SILExtract.cpp
   LINK_LIBRARIES
     swiftFrontend
+    swiftSIL
+    swiftBasic
     swiftSILGen
     swiftSILOptimizer
     swiftSerialization
     swiftClangImporter
+    swiftAST
   LLVM_COMPONENT_DEPENDS
     DebugInfoCodeView
+    Support
+    Option
+    Object
+    X86Info
+    X86CodeGen
+    X86Desc
+    X86AsmParser
+    X86Disassembler
   SWIFT_COMPONENT tools
 )
diff --git a/tools/sil-opt/CMakeLists.txt b/tools/sil-opt/CMakeLists.txt
index f2ccbb8fbf..2035301be0 100644
--- a/tools/sil-opt/CMakeLists.txt
+++ b/tools/sil-opt/CMakeLists.txt
@@ -1,11 +1,23 @@
 add_swift_host_tool(sil-opt
   SILOpt.cpp
   LINK_LIBRARIES
+    swiftBasic
     swiftFrontend
     swiftIRGen
     swiftSILGen
     swiftSILOptimizer
+    swiftSIL
+    swiftSerialization
+    swiftAST
   LLVM_COMPONENT_DEPENDS
     DebugInfoCodeView
+    Option
+    TableGen
+    Support
+    X86Info
+    X86CodeGen
+    X86Desc
+    X86AsmParser
+    X86Disassembler
   SWIFT_COMPONENT tools
 )
diff --git a/tools/swift-api-digester/CMakeLists.txt b/tools/swift-api-digester/CMakeLists.txt
index d09f6437cf..62aae2fb08 100644
--- a/tools/swift-api-digester/CMakeLists.txt
+++ b/tools/swift-api-digester/CMakeLists.txt
@@ -1,5 +1,24 @@
 add_swift_host_tool(swift-api-digester
   swift-api-digester.cpp
-  LINK_LIBRARIES swiftFrontend swiftIDE
+  LINK_LIBRARIES
+    swiftFrontend
+    swiftIDE
+    swiftAST
+    swiftBasic
+    swiftDriver
+    swiftSIL
+    swiftClangImporter
+
+    clangAST
+    clangBasic
+  LLVM_COMPONENT_DEPENDS
+    Support
+    Option
+    X86Info
+    X86CodeGen
+    X86Desc
+    X86AsmParser
+    X86Disassembler
+    Core
   SWIFT_COMPONENT tools
 )
diff --git a/tools/swift-ide-test/CMakeLists.txt b/tools/swift-ide-test/CMakeLists.txt
index eedd3ce866..d3313e7374 100644
--- a/tools/swift-ide-test/CMakeLists.txt
+++ b/tools/swift-ide-test/CMakeLists.txt
@@ -6,8 +6,27 @@ add_swift_host_tool(swift-ide-test
     swiftDriver
     swiftFrontend
     swiftIDE
+    swiftBasic
+    swiftIRGen
+    swiftSILGen
+    swiftSILOptimizer
+    swiftSIL
+    swiftSerialization
+    swiftAST
+    swiftClangImporter
+    swiftMarkup
+    swiftSema
+    swiftParse
+
+    clangRewrite
   LLVM_COMPONENT_DEPENDS
     DebugInfoCodeView
+    Support
+    X86Info
+    X86CodeGen
+    X86Desc
+    X86AsmParser
+    X86Disassembler
   SWIFT_COMPONENT tools
 )
 
diff --git a/tools/swift-llvm-opt/CMakeLists.txt b/tools/swift-llvm-opt/CMakeLists.txt
index 628d7bddb8..e9f88bffe0 100644
--- a/tools/swift-llvm-opt/CMakeLists.txt
+++ b/tools/swift-llvm-opt/CMakeLists.txt
@@ -6,6 +6,8 @@ add_swift_host_tool(swift-llvm-opt
   # Swift libraries included to appease the linker on linux.
   swiftSema
   swiftAST
+  swiftBasic
+  swiftLLVMPasses
 
   # Clang libraries included to appease the linker on linux.
   clangBasic
@@ -13,6 +15,29 @@ add_swift_host_tool(swift-llvm-opt
 
   LLVM_COMPONENT_DEPENDS
     DebugInfoCodeView
+    ScalarOpts
+    TransformUtils
+    CodeGen
+    InstCombine
+    ScalarOpts
+    Vectorize
+    ExecutionEngine
+    Instrumentation
+    Support
+    Option
+    Object
+    X86Info
+    X86CodeGen
+    X86Desc
+    X86AsmParser
+    X86Disassembler
+    ObjCARCOpts
+    Ipo
+    Target
+    Core
+    Analysis
+    MC
+    IRReader
 
   SWIFT_COMPONENT tools
 )
diff --git a/tools/swift-remoteast-test/CMakeLists.txt b/tools/swift-remoteast-test/CMakeLists.txt
index b0c546ed50..47bb49dec2 100644
--- a/tools/swift-remoteast-test/CMakeLists.txt
+++ b/tools/swift-remoteast-test/CMakeLists.txt
@@ -3,6 +3,23 @@ add_swift_host_tool(swift-remoteast-test
   LINK_LIBRARIES
     swiftFrontendTool
     swiftRemoteAST
+    swiftSIL
+    swiftDriver
+    swiftFrontend
+    swiftIDE
+    swiftBasic
+    swiftIRGen
+    swiftSILGen
+    swiftSILOptimizer
+    swiftSerialization
+    swiftAST
+    swiftSema
+    swiftParse
+
+  LLVM_COMPONENT_DEPENDS
+    Support
+    ExecutionEngine
+    TransformUtils
   SWIFT_COMPONENT tools
 )
 
diff --git a/stdlib/public/core/CMakeLists.txt b/stdlib/public/core/CMakeLists.txt
index fc49842db8..5417f23a55 100644
--- a/stdlib/public/core/CMakeLists.txt
+++ b/stdlib/public/core/CMakeLists.txt
@@ -216,6 +216,8 @@ add_swift_library(swiftCore ${SWIFT_STDLIB_LIBRARY_BUILD_TYPES} IS_STDLIB IS_STD
   # directory, but is not sufficient to cause the object file to be rebuilt
   # when the shim header changes.  Therefore, we pass both the target
   # and the generated directory as dependencies.
+  LLVM_COMPONENT_DEPENDS
+    Support
   FILE_DEPENDS
     copy_shim_headers "${SWIFTLIB_DIR}/shims"
     section_magic
diff --git a/stdlib/public/SwiftRemoteMirror/CMakeLists.txt b/stdlib/public/SwiftRemoteMirror/CMakeLists.txt
index 260d04e0f9..0d7f8cf1f3 100644
--- a/stdlib/public/SwiftRemoteMirror/CMakeLists.txt
+++ b/stdlib/public/SwiftRemoteMirror/CMakeLists.txt
@@ -5,6 +5,6 @@ if(SWIFT_BUILD_DYNAMIC_STDLIB OR SWIFT_BUILD_REMOTE_MIRROR)
       SwiftRemoteMirror.cpp
       LINK_LIBRARIES swiftReflection
       C_COMPILE_FLAGS ${SWIFT_RUNTIME_CXX_FLAGS}
-      LINK_FLAGS ${SWIFT_RUNTIME_LINK_FLAGS}
+      LINK_FLAGS ${SWIFT_RUNTIME_LINK_FLAGS} "-lLLVMSupport"
       INSTALL_IN_COMPONENT swift-remote-mirror)
 endif()
diff --git a/stdlib/public/core/CMakeLists.txt b/stdlib/public/core/CMakeLists.txt
index fc49842db8..e5210337be 100644
--- a/stdlib/public/core/CMakeLists.txt
+++ b/stdlib/public/core/CMakeLists.txt
@@ -222,7 +222,7 @@ add_swift_library(swiftCore ${SWIFT_STDLIB_LIBRARY_BUILD_TYPES} IS_STDLIB IS_STD
     ${GROUP_INFO_JSON_FILE}
   SWIFT_COMPILE_FLAGS ${swift_stdlib_compile_flags}
   LINK_FLAGS ${swift_core_link_flags}
-  PRIVATE_LINK_LIBRARIES ${swift_core_private_link_libraries}
+  PRIVATE_LINK_LIBRARIES ${swift_core_private_link_libraries} "-lLLVMSupport"
   INCORPORATE_OBJECT_LIBRARIES swiftRuntime swiftStdlibStubs
   FRAMEWORK_DEPENDS ${swift_core_framework_depends}
   INSTALL_IN_COMPONENT stdlib)
