--- a/ui/Makefile	2017-05-21 13:43:42.993574856 +0200
+++ b/ui/Makefile	2017-05-21 13:42:30.233694416 +0200
@@ -31,6 +31,10 @@
 endif
 endif
 
+ifeq ($(USE_SYSTEM_LIBUV),1)
+JLDFLAGS += -luv
+endif
+
 ifeq ($(OS),WINNT)
 JLDFLAGS += -municode
 endif
--- a/src/threading.c	2017-05-21 13:44:23.457508299 +0200
+++ b/src/threading.c	2017-05-21 13:45:10.376431070 +0200
@@ -583,7 +583,7 @@
 void jl_start_threads(void)
 {
     jl_ptls_t ptls = jl_get_ptls_states();
-    char *cp, mask[UV_CPU_SETSIZE];
+    char *cp, mask[CPU_SETSIZE];
     int i, exclusive;
     uv_thread_t uvtid;
     ti_threadarg_t **targs;
@@ -598,10 +598,10 @@
     // according to a 'compact' policy
     // non-exclusive: no affinity settings; let the kernel move threads about
     if (exclusive) {
-        memset(mask, 0, UV_CPU_SETSIZE);
+        memset(mask, 0, CPU_SETSIZE);
         mask[0] = 1;
         uvtid = (uv_thread_t)uv_thread_self();
-        uv_thread_setaffinity(&uvtid, mask, NULL, UV_CPU_SETSIZE);
+        uv_thread_setaffinity(&uvtid, mask, NULL, CPU_SETSIZE);
     }
 
     // create threads
@@ -615,9 +615,9 @@
         targs[i]->tid = i + 1;
         uv_thread_create(&uvtid, ti_threadfun, targs[i]);
         if (exclusive) {
-            memset(mask, 0, UV_CPU_SETSIZE);
+            memset(mask, 0, CPU_SETSIZE);
             mask[i+1] = 1;
-            uv_thread_setaffinity(&uvtid, mask, NULL, UV_CPU_SETSIZE);
+            uv_thread_setaffinity(&uvtid, mask, NULL, CPU_SETSIZE);
         }
         uv_thread_detach(&uvtid);
     }
--- a/Make.inc	2017-05-21 14:06:27.736268515 +0200
+++ b/Make.inc	2017-05-21 14:06:43.439241993 +0200
@@ -849,7 +849,7 @@
 endif
 
 ifeq ($(USE_SYSTEM_LIBUV), 1)
-  LIBUV := $(LOCALBASE)/lib/libuv-julia.a
+  LIBUV := -luv
   LIBUV_INC := $(LOCALBASE)/include
 else
   LIBUV := $(build_libdir)/libuv.a
--- a/base/Makefile	2017-05-21 14:08:48.583030919 +0200
+++ b/base/Makefile	2017-05-21 14:09:00.567010731 +0200
@@ -30,7 +30,7 @@
 $(BUILDDIR)/file_constants.jl: $(SRCDIR)/../src/file_constants.h
 	@$(call PRINT_PERL, $(CPP_STDOUT) -DJULIA $< | perl -nle 'print "$$1 0o$$2" if /^(\s*const\s+[A-z_]+\s+=)\s+(0[0-9]*)\s*$$/; print "$$1" if /^\s*(const\s+[A-z_]+\s+=\s+([1-9]|0x)[0-9A-z]*)\s*$$/' > $@)
 
-$(BUILDDIR)/uv_constants.jl: $(SRCDIR)/../src/uv_constants.h $(build_includedir)/uv-errno.h
+$(BUILDDIR)/uv_constants.jl: $(SRCDIR)/../src/uv_constants.h
 	@$(call PRINT_PERL, $(CPP_STDOUT) "-I$(LIBUV_INC)" -DJULIA $< | tail -n 16 > $@)
 
 $(BUILDDIR)/build_h.jl.phony:
