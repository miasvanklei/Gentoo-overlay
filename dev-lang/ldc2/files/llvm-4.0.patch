diff --git a/gen/dibuilder.cpp b/gen/dibuilder.cpp
index ab76ba01..88398743 100644
--- a/gen/dibuilder.cpp
+++ b/gen/dibuilder.cpp
@@ -780,7 +780,7 @@ void ldc::DIBuilder::EmitCompileUnit(Module *m) {
   CUNode = DBuilder.createCompileUnit(
       global.params.symdebug == 2 ? llvm::dwarf::DW_LANG_C
                                   : llvm::dwarf::DW_LANG_D,
-      llvm::sys::path::filename(srcpath), llvm::sys::path::parent_path(srcpath),
+      DBuilder.createFile(llvm::sys::path::filename(srcpath), llvm::sys::path::parent_path(srcpath)),
       "LDC (http://wiki.dlang.org/LDC)",
       isOptimizationEnabled(), // isOptimized
       llvm::StringRef(),       // Flags TODO
@@ -1212,7 +1212,7 @@ void ldc::DIBuilder::EmitGlobalVariable(llvm::GlobalVariable *llVar,
 #if LDC_LLVM_VER >= 400
   auto DIVar =
 #endif
-      DBuilder.createGlobalVariable(
+      DBuilder.createGlobalVariableExpression(
 #if LDC_LLVM_VER >= 306
           GetCU(), // context
 #endif
diff --git a/gen/tollvm.cpp b/gen/tollvm.cpp
index 554ce2d6..ba8f87a4 100644
--- a/gen/tollvm.cpp
+++ b/gen/tollvm.cpp
@@ -424,7 +424,7 @@ LLConstant *DtoConstFP(Type *t, longdouble value) {
     bits[0] = *reinterpret_cast<uint64_t *>(&value);
     bits[1] =
         *reinterpret_cast<uint16_t *>(reinterpret_cast<uint64_t *>(&value) + 1);
-    return LLConstantFP::get(gIR->context(), APFloat(APFloat::x87DoubleExtended,
+    return LLConstantFP::get(gIR->context(), APFloat(APFloat::x87DoubleExtended(),
                                                      APInt(80, 2, bits)));
   }
   if (llty == LLType::getFP128Ty(gIR->context())) {
@@ -434,7 +434,7 @@ LLConstant *DtoConstFP(Type *t, longdouble value) {
     } t;
     t.ld = value;
     return LLConstantFP::get(gIR->context(),
-                             APFloat(APFloat::IEEEquad, APInt(128, 2, t.bits)));
+                             APFloat(APFloat::IEEEquad(), APInt(128, 2, t.bits)));
   }
   if (llty == LLType::getPPC_FP128Ty(gIR->context())) {
     uint64_t bits[] = {0, 0};
@@ -442,7 +442,7 @@ LLConstant *DtoConstFP(Type *t, longdouble value) {
     bits[1] =
         *reinterpret_cast<uint16_t *>(reinterpret_cast<uint64_t *>(&value) + 1);
     return LLConstantFP::get(
-        gIR->context(), APFloat(APFloat::PPCDoubleDouble, APInt(128, 2, bits)));
+        gIR->context(), APFloat(APFloat::PPCDoubleDouble(), APInt(128, 2, bits)));
   }
 
   llvm_unreachable("Unknown floating point type encountered");
