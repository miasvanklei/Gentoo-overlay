--- a/gen/optimizer.cpp	2019-02-19
+++ b/gen/optimizer.cpp	2019-02-19
@@ -29,7 +29,7 @@
 #include "llvm/Support/CommandLine.h"
 #include "llvm/Target/TargetMachine.h"
 #include "llvm/Transforms/Instrumentation.h"
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
 #include "llvm/Transforms/Instrumentation/MemorySanitizer.h"
 #include "llvm/Transforms/Instrumentation/ThreadSanitizer.h"
 #endif
@@ -126,7 +126,7 @@
   return enableCrossModuleInlining == llvm::cl::BOU_TRUE;
 }
 
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
 llvm::FramePointer::FP whichFramePointersToEmit() {
   auto option = opts::framePointerUsage();
   if (option)
@@ -193,7 +193,7 @@
 
 static void addMemorySanitizerPass(const PassManagerBuilder &Builder,
                                    PassManagerBase &PM) {
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
   PM.add(createMemorySanitizerLegacyPassPass());
 #else
   PM.add(createMemorySanitizerPass());
@@ -214,7 +214,7 @@
 
 static void addThreadSanitizerPass(const PassManagerBuilder &Builder,
                                    PassManagerBase &PM) {
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
   PM.add(createThreadSanitizerLegacyPassPass());
 #else
   PM.add(createThreadSanitizerPass());
--- a/gen/functions.cpp
+++ b/gen/functions.cpp
@@ -469,7 +469,7 @@
   func.addFnAttr("no-infs-fp-math", TO.NoInfsFPMath ? "true" : "false");
   func.addFnAttr("no-nans-fp-math", TO.NoNaNsFPMath ? "true" : "false");
 
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
   switch (whichFramePointersToEmit()) {
     case llvm::FramePointer::None:
       func.addFnAttr("no-frame-pointer-elim", "false");
--- a/driver/cl_options-llvm.h
+++ b/driver/cl_options-llvm.h
@@ -23,7 +23,7 @@
 #else
 llvm::CodeModel::Model getCodeModel();
 #endif
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
 llvm::Optional<llvm::FramePointer::FP> framePointerUsage();
 #else
 llvm::cl::boolOrDefault disableFPElim();
--- a/driver/cache.cpp
+++ b/driver/cache.cpp
@@ -315,7 +315,7 @@
 #else
   hash_os << opts::getCodeModel();
 #endif
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
   const auto framePointerUsage = opts::framePointerUsage();
   if (framePointerUsage.hasValue())
     hash_os << framePointerUsage.getValue();
--- a/driver/cl_options-llvm.cpp
+++ b/driver/cl_options-llvm.cpp
@@ -37,7 +37,7 @@
 CodeModel::Model getCodeModel() { return ::CMModel; }
 #endif
 
-#if LDC_LLVM_VER >= 900
+#if LDC_LLVM_VER >= 800
 llvm::Optional<llvm::FramePointer::FP> framePointerUsage() {
   if (::FramePointerUsage.getNumOccurrences() == 0)
     return llvm::None;
