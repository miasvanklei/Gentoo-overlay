diff --git a/Sources/Basic/OutputByteStream.swift b/Sources/Basic/OutputByteStream.swift
index 7b835f83..62601f34 100644
--- a/Sources/Basic/OutputByteStream.swift
+++ b/Sources/Basic/OutputByteStream.swift
@@ -583,7 +583,7 @@ public class FileOutputByteStream: OutputByteStream {
 public final class LocalFileOutputByteStream: FileOutputByteStream {
 
     /// The pointer to the file.
-    let filePointer: UnsafeMutablePointer<FILE>
+    let filePointer: OpaquePointer
 
     /// True if there were any IO error during writing.
     private var error: Bool = false
@@ -592,7 +592,7 @@ public final class LocalFileOutputByteStream: FileOutputByteStream {
     private var closeOnDeinit: Bool
 
     /// Instantiate using the file pointer.
-    init(filePointer: UnsafeMutablePointer<FILE>, closeOnDeinit: Bool = true) throws {
+    init(filePointer: OpaquePointer, closeOnDeinit: Bool = true) throws {
         self.filePointer = filePointer
         self.closeOnDeinit = closeOnDeinit
         super.init()
diff --git a/Sources/Commands/SwiftTool.swift b/Sources/Commands/SwiftTool.swift
index 4141c3c9..c50a827b 100644
--- a/Sources/Commands/SwiftTool.swift
+++ b/Sources/Commands/SwiftTool.swift
@@ -224,9 +224,9 @@ public class SwiftTool<Options: ToolOptions> {
               #if os(macOS)
                 action.__sigaction_u.__sa_handler = SIG_DFL
               #else
-                action.__sigaction_handler = unsafeBitCast(
+                action.__sa_handler = unsafeBitCast(
                     SIG_DFL,
-                    to: sigaction.__Unnamed_union___sigaction_handler.self)
+                    to: sigaction.__Unnamed_union___sa_handler.self)
               #endif
                 sigaction(SIGINT, &action, nil)
 
diff --git a/Sources/Utility/InterruptHandler.swift b/Sources/Utility/InterruptHandler.swift
index 415ed742..0a28fb2d 100644
--- a/Sources/Utility/InterruptHandler.swift
+++ b/Sources/Utility/InterruptHandler.swift
@@ -41,9 +41,9 @@ public final class InterruptHandler {
       #if os(macOS)
         action.__sigaction_u.__sa_handler = signalHandler
       #else
-        action.__sigaction_handler = unsafeBitCast(
+        action.__sa_handler = unsafeBitCast(
             signalHandler,
-            to: sigaction.__Unnamed_union___sigaction_handler.self)
+            to: sigaction.__Unnamed_union___sa_handler.self)
       #endif
         // Install the new handler.
         sigaction(SIGINT, &action, &oldAction)
