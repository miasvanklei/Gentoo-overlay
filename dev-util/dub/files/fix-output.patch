--- a/source/dub/commandline.d	2017-06-16 19:56:38.158095128 +0200
+++ b/source/dub/commandline.d	2017-06-16 19:58:31.990100732 +0200
@@ -473,6 +473,7 @@
 		string input(string caption, string default_value)
 		{
 			writef("%s [%s]: ", caption, default_value);
+			stdout.flush();
 			auto inp = readln();
 			return inp.length > 1 ? inp[0 .. $-1] : default_value;
 		}
@@ -1261,6 +1262,7 @@
 			writeln(packages.length + 1, ") ", "all versions");
 			while (true) {
 				writef("> ");
+				stdout.flush();
 				auto inp = readln();
 				if (!inp.length) // Ctrl+D
 					return size_t.max;
@@ -1896,6 +1898,7 @@
 			if (cmd.hidden) continue;
 			writeWS(shortArgColumn);
 			writef("%s %s", cmd.name, cmd.argumentsPattern);
+			stdout.flush();
 			auto chars_output = cmd.name.length + cmd.argumentsPattern.length + shortArgColumn + 1;
 			if (chars_output < descColumn) {
 				writeWS(descColumn - chars_output);
@@ -1957,15 +1960,18 @@
 		if (sarg !is null) {
 			writeWS(shortArgColumn);
 			writef("-%s", sarg);
+			stdout.flush();
 			writeWS(longArgColumn - shortArgColumn - 2);
 		} else writeWS(longArgColumn);
 		size_t col = longArgColumn;
 		if (larg !is null) {
 			if (arg.defaultValue.peek!bool) {
 				writef("--%s", larg);
+				stdout.flush();
 				col += larg.length + 2;
 			} else {
 				writef("--%s=VALUE", larg);
+				stdout.flush();
 				col += larg.length + 8;
 			}
 		}
