--- a/backtrace-sys-0.1.16/build.rs
+++ b/backtrace-sys-0.1.16/build.rs
@@ -131,33 +131,6 @@
 
     println!("cargo:rustc-link-search=native={}/.libs", dst.display());
     println!("cargo:rustc-link-lib=static=backtrace");
-
-    // The standard library currently bundles in libbacktrace, but it's
-    // compiled with hidden visibility (naturally) so we can't use it.
-    //
-    // To prevent conflicts with a second statically linked copy we rename all
-    // symbols with a '__rbt_' prefix manually here through `objcopy`.
-    let lib = dst.join(".libs/libbacktrace.a");
-    let tmpdir = dst.join("__tmp");
-    drop(fs::remove_dir_all(&tmpdir));
-    t!(fs::create_dir_all(&tmpdir));
-    run(Command::new(&ar).arg("x").arg(&lib).current_dir(&tmpdir),
-        ar.to_str().unwrap());
-
-    t!(fs::remove_file(&lib));
-    let mut objs = Vec::new();
-    let objcopy = find_tool(&compiler, cc, "objcopy");
-    for obj in t!(tmpdir.read_dir()) {
-        let obj = t!(obj);
-        run(Command::new(&objcopy)
-                    .arg("--redefine-syms=symbol-map")
-                    .arg(obj.path()),
-            objcopy.to_str().unwrap());
-        objs.push(obj.path());
-    }
-
-    run(Command::new(&ar).arg("crus").arg(&lib).args(&objs),
-        ar.to_str().unwrap());
 }
 
 fn run(cmd: &mut Command, program: &str) {
--- a/backtrace-sys-0.1.16/src/lib.rs
+++ b/backtrace-sys-0.1.16/src/lib.rs
@@ -24,18 +24,15 @@
 pub enum backtrace_state {}
 
 extern {
-    #[link_name = "__rbt_backtrace_create_state"]
     pub fn backtrace_create_state(filename: *const c_char,
                                   threaded: c_int,
                                   error: backtrace_error_callback,
                                   data: *mut c_void) -> *mut backtrace_state;
-    #[link_name = "__rbt_backtrace_syminfo"]
     pub fn backtrace_syminfo(state: *mut backtrace_state,
                              addr: uintptr_t,
                              cb: backtrace_syminfo_callback,
                              error: backtrace_error_callback,
                              data: *mut c_void) -> c_int;
-    #[link_name = "__rbt_backtrace_pcinfo"]
     pub fn backtrace_pcinfo(state: *mut backtrace_state,
                             addr: uintptr_t,
                             cb: backtrace_full_callback,
