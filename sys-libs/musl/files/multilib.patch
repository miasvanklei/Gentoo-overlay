--- ldso/dynlink.c	2016-02-09 19:46:23.122930857 +0100
+++ ldso/dynlink.c	2016-02-09 19:48:02.557742970 +0100
@@ -115,6 +115,7 @@
 static struct dso ldso;
 static struct dso *head, *tail, *fini_head;
 static char *env_path, *sys_path;
+static const char *keeptrackoff;
 static unsigned long long gencnt;
 static int runtime;
 static int ldd_mode;
@@ -720,12 +721,17 @@
 {
 	size_t l;
 	int fd;
+	if(keeptrackoff) s = keeptrackoff;
 	for (;;) {
 		s += strspn(s, ":\n");
 		l = strcspn(s, ":\n");
 		if (l-1 >= INT_MAX) return -1;
 		if (snprintf(buf, buf_size, "%.*s/%s", (int)l, s, name) < buf_size) {
-			if ((fd = open(buf, O_RDONLY|O_CLOEXEC))>=0) return fd;
+			if ((fd = open(buf, O_RDONLY|O_CLOEXEC))>=0) {
+				keeptrackoff = s;
+				keeptrackoff += strcspn(s, ":\n");
+				return fd;
+			}
 			switch (errno) {
 			case ENOENT:
 			case ENOTDIR:
@@ -898,6 +904,7 @@
 	int n_th = 0;
 	int is_self = 0;
 
+retrypath:
 	if (!*name) {
 		errno = EINVAL;
 		return 0;
@@ -1013,7 +1020,9 @@
 	}
 	map = noload ? 0 : map_library(fd, &temp_dso);
 	close(fd);
-	if (!map) return 0;
+	if (!map) goto retrypath;
+
+	keeptrackoff = NULL;
 
 	/* Allocate storage for the new DSO. When there is TLS, this
 	 * storage must include a reservation for all pre-existing
