diff --git a/configure b/configure
index 81e90f7..93d44ce 100755
--- a/configure
+++ b/configure
@@ -114,7 +114,7 @@ fi
 # Beginning of actual script
 
 CFLAGS_C99FSE=
-CFLAGS_AUTO=
+CFLAGS_AUTO=-fblocks
 CFLAGS_MEMOPS=
 CFLAGS_NOSSP=
 CFLAGS_TRY=
diff --git a/src/exit/atexit.c b/src/exit/atexit.c
index 2b58b8b..371d1c0 100644
--- a/src/exit/atexit.c
+++ b/src/exit/atexit.c
@@ -1,5 +1,6 @@
 #include <stdlib.h>
 #include <stdint.h>
+#include <errno.h>
 #include "libc.h"
 
 /* Ensure that at least 32 atexit handlers can be registered without malloc */
@@ -60,6 +61,26 @@ int __cxa_atexit(void (*func)(void *), void *arg, void *dso)
 	return 0;
 }
 
+#define GET_BLOCK_FUNCTION(x) \
+	(((struct {\
+		void *isa;\
+		int flags;\
+		int reserved;\
+		void (*invoke)(void *, ...);\
+	}*)x)->invoke)
+
+__attribute__((weak)) void* _Block_copy(void*);
+
+int atexit_b(atexit_block func)
+{
+	if (_Block_copy == 0) {
+		errno = ENOSYS;
+		return -1;
+	}
+	void* arg = _Block_copy(func);
+        return __cxa_atexit((void(*)(void*))GET_BLOCK_FUNCTION(arg), arg, NULL);
+}
+
 static void call(void *p)
 {
 	((void (*)(void))(uintptr_t)p)();
diff --git a/include/stdlib.h b/include/stdlib.h
index 42ca833..5445a77 100644
--- a/include/stdlib.h
+++ b/include/stdlib.h
@@ -43,6 +45,8 @@ void *aligned_alloc(size_t, size_t);
 
 _Noreturn void abort (void);
 int atexit (void (*) (void));
+typedef void(^atexit_block)(void);
+int atexit_b(atexit_block func);
 _Noreturn void exit (int);
 _Noreturn void _Exit (int);
 int at_quick_exit (void (*) (void));
