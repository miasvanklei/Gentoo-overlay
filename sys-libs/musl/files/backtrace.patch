--- /dev/null	2016-02-08 10:33:28.047121246 +0100
+++ src/compat/builtin.c	2016-02-08 13:47:03.912057737 +0100
@@ -0,0 +1,65 @@
+/*	$NetBSD: builtin.c,v 1.1 2012/05/26 22:02:29 christos Exp $	*/
+
+/*-
+ * Copyright (c) 2012 The NetBSD Foundation, Inc.
+ * All rights reserved.
+ *
+ * This code is derived from software contributed to The NetBSD Foundation
+ * by Christos Zoulas.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
+ * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+ * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+#include <sys/param.h>
+#include <sys/types.h>
+
+#include "execinfo.h"
+
+#ifdef __MACHINE_STACK_GROWS_UP
+#define BELOW >
+#else
+#define BELOW <
+#endif
+
+#ifdef __lint__
+#define __builtin_frame_address(a)	((void *)a)
+#endif
+
+struct frameinfo {
+	struct frameinfo *next;
+	void *return_address;
+};
+
+size_t
+backtrace(void **trace, size_t len)
+{
+	const struct frameinfo *frame = __builtin_frame_address(0);
+	void *stack = &stack;
+
+	for (size_t i = 0; i < len; i++) {
+		if ((const void *)frame BELOW stack)
+			return i;
+		trace[i] = frame->return_address;
+		frame = frame->next;
+	}
+
+	return len;
+}
--- /dev/null	2016-02-08 10:33:28.047121246 +0100
+++ src/compat/backtracesyms.c	2016-02-08 13:49:48.669633719 +0100
@@ -0,0 +1,106 @@
+/* Return list with names for address in backtrace.
+   Copyright (C) 1998,1999,2000,2001,2003 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1998.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; see the file COPYING.LIB.  If
+   not, see <http://www.gnu.org/licenses/>.
+
+   Based on glibc/sysdeps/generic/elf/backtracesyms.c
+
+   Copyright (C) 2010 STMicroelectronics Ltd
+   Author(s): Carmelo Amoroso <carmelo.amoroso@st.com>
+   * Modified to work with uClibc
+     - updated headers inclusion
+     - updated formatting and style
+     - updated to use dladdr from libdl */
+
+#define _GNU_SOURCE
+
+#include "execinfo.h"
+#include <assert.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <string.h>
+
+#include <dlfcn.h>
+#include <link.h>	/* required for __ELF_NATIVE_CLASS */
+
+#if UINTPTR_MAX > 0xffffffff
+# define WORD_WIDTH 16
+#else
+/* We assyme 64bits.  */
+# define WORD_WIDTH 8
+#endif
+
+
+char ** backtrace_symbols (void *const *array, int size)
+{
+	Dl_info info[size];
+	int status[size];
+	int cnt;
+	size_t total = 0;
+	char **result;
+
+	/* Fill in the information we can get from `dladdr'.  */
+	for (cnt = 0; cnt < size; ++cnt) {
+		status[cnt] = dladdr (array[cnt], &info[cnt]);
+		if (status[cnt] && info[cnt].dli_fname &&
+			info[cnt].dli_fname[0] != '\0')
+		/*
+		 * We have some info, compute the length of the string which will be
+		 * "<file-name>(<sym-name>) [+offset].
+		 */
+		total += (strlen (info[cnt].dli_fname ?: "") +
+				  (info[cnt].dli_sname ?
+				  strlen (info[cnt].dli_sname) + 3 + WORD_WIDTH + 3 : 1)
+				  + WORD_WIDTH + 5);
+		else
+			total += 5 + WORD_WIDTH;
+	}
+
+	/* Allocate memory for the result.  */
+	result = (char **) malloc (size * sizeof (char *) + total);
+	if (result != NULL) {
+		char *last = (char *) (result + size);
+		for (cnt = 0; cnt < size; ++cnt) {
+			result[cnt] = last;
+
+			if (status[cnt] && info[cnt].dli_fname
+				&& info[cnt].dli_fname[0] != '\0') {
+
+				char buf[20];
+
+				if (array[cnt] >= (void *) info[cnt].dli_saddr)
+					sprintf (buf, "+%#lx",
+							(unsigned long)(array[cnt] - info[cnt].dli_saddr));
+				else
+					sprintf (buf, "-%#lx",
+					(unsigned long)(info[cnt].dli_saddr - array[cnt]));
+
+				last += 1 + sprintf (last, "%s%s%s%s%s[%p]",
+				info[cnt].dli_fname ?: "",
+				info[cnt].dli_sname ? "(" : "",
+				info[cnt].dli_sname ?: "",
+				info[cnt].dli_sname ? buf : "",
+				info[cnt].dli_sname ? ") " : " ",
+				array[cnt]);
+			} else
+				last += 1 + sprintf (last, "[%p]", array[cnt]);
+		}
+		assert (last <= (char *) result + size * sizeof (char *) + total);
+	}
+
+	return result;
+}
--- /dev/null	2016-02-08 10:33:28.047121246 +0100
+++ src/compat/backtracesymsfd.c	2016-02-08 13:50:20.679912051 +0100
@@ -0,0 +1,117 @@
+/* Write formatted list with names for addresses in backtrace to a file.
+   Copyright (C) 1998, 2000, 2003, 2005 Free Software Foundation, Inc.
+   This file is part of the GNU C Library.
+   Contributed by Ulrich Drepper <drepper@cygnus.com>, 1998.
+
+   The GNU C Library is free software; you can redistribute it and/or
+   modify it under the terms of the GNU Lesser General Public
+   License as published by the Free Software Foundation; either
+   version 2.1 of the License, or (at your option) any later version.
+
+   The GNU C Library is distributed in the hope that it will be useful,
+   but WITHOUT ANY WARRANTY; without even the implied warranty of
+   MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
+   Lesser General Public License for more details.
+
+   You should have received a copy of the GNU Lesser General Public
+   License along with the GNU C Library; see the file COPYING.LIB.  If
+   not, see <http://www.gnu.org/licenses/>.
+
+   Based on glibc/sysdeps/generic/elf/backtracesymsfd.c
+
+   Copyright (C) 2010 STMicroelectronics Ltd
+   Author(s): Carmelo Amoroso <carmelo.amoroso@st.com>
+   * Modified to work with uClibc
+     - updated headers inclusion
+     - updated formatting and style
+     - updated to use dladdr from libdl
+     - updated to use snprintf instead of _itoa_word */
+
+#define _GNU_SOURCE
+
+#include "execinfo.h"
+#include <string.h>
+#include <sys/uio.h>
+#include <dlfcn.h>
+#include <stdio.h>
+#include <link.h>	/* required for __ELF_NATIVE_CLASS */
+
+#if UINTPTR_MAX > 0xffffffff
+# define WORD_WIDTH 16
+#else
+/* We assyme 64bits.  */
+# define WORD_WIDTH 8
+#endif
+
+#define BUF_SIZE (WORD_WIDTH + 1)
+
+void backtrace_symbols_fd (void *const *array, int size, int fd)
+{
+	struct iovec iov[9];
+	int cnt;
+
+	for (cnt = 0; cnt < size; ++cnt) {
+		char buf[BUF_SIZE];
+		Dl_info info;
+		size_t last = 0;
+		size_t len = 0;
+
+		memset(buf, 0, sizeof(buf));
+		if (dladdr (array[cnt], &info)
+			&& info.dli_fname && info.dli_fname[0] != '\0')	{
+			/* Name of the file.  */
+			iov[0].iov_base = (void *) info.dli_fname;
+			iov[0].iov_len = strlen (info.dli_fname);
+			last = 1;
+
+			/* Symbol name.  */
+			if (info.dli_sname != NULL) {
+				char buf2[BUF_SIZE];
+				memset(buf2, 0, sizeof(buf2));
+				size_t diff;
+
+				iov[1].iov_base = (void *) "(";
+				iov[1].iov_len = 1;
+				iov[2].iov_base = (void *) info.dli_sname;
+				iov[2].iov_len = strlen (info.dli_sname);
+
+				if (array[cnt] >= (void *) info.dli_saddr) {
+					iov[3].iov_base = (void *) "+0x";
+					diff = array[cnt] - info.dli_saddr;
+				} else {
+					iov[3].iov_base = (void *) "-0x";
+					diff = info.dli_saddr - array[cnt];
+				}
+
+				iov[3].iov_len = 3;
+
+				/* convert diff to a string in hex format */
+				len = snprintf(buf2, sizeof(buf2), "%lx", (unsigned long) diff);
+				iov[4].iov_base = buf2;
+				iov[4].iov_len = len;
+
+				iov[5].iov_base = (void *) ")";
+				iov[5].iov_len = 1;
+
+				last = 6;
+			}
+		}
+
+		iov[last].iov_base = (void *) "[0x";
+		iov[last].iov_len = 3;
+		++last;
+
+		/* convert array[cnt] to a string in hex format */
+		len = snprintf(buf, sizeof(buf), "%lx", (unsigned long) array[cnt]);
+		iov[last].iov_base = buf;
+		iov[last].iov_len = len;
+
+		++last;
+
+		iov[last].iov_base = (void *) "]\n";
+		iov[last].iov_len = 2;
+		++last;
+
+		writev (fd, iov, last);
+	}
+}
--- /dev/null	2016-02-08 10:33:28.047121246 +0100
+++ include/execinfo.h	2016-02-08 13:55:12.026554695 +0100
@@ -0,0 +1,49 @@
+/*	$NetBSD: execinfo.h,v 1.2 2012/06/09 21:22:17 christos Exp $	*/
+/*	$FreeBSD: releng/10.1/contrib/libexecinfo/execinfo.h 255177 2013-09-03 13:38:41Z emaste $ */
+
+/*-
+ * Copyright (c) 2012 The NetBSD Foundation, Inc.
+ * All rights reserved.
+ *
+ * This code is derived from software contributed to The NetBSD Foundation
+ * by Christos Zoulas.
+ *
+ * Redistribution and use in source and binary forms, with or without
+ * modification, are permitted provided that the following conditions
+ * are met:
+ * 1. Redistributions of source code must retain the above copyright
+ *    notice, this list of conditions and the following disclaimer.
+ * 2. Redistributions in binary form must reproduce the above copyright
+ *    notice, this list of conditions and the following disclaimer in the
+ *    documentation and/or other materials provided with the distribution.
+ *
+ * THIS SOFTWARE IS PROVIDED BY THE NETBSD FOUNDATION, INC. AND CONTRIBUTORS
+ * ``AS IS'' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED
+ * TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR
+ * PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL THE FOUNDATION OR CONTRIBUTORS
+ * BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR
+ * CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF
+ * SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS
+ * INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN
+ * CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE)
+ * ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE
+ * POSSIBILITY OF SUCH DAMAGE.
+ */
+#ifndef _EXECINFO_H_
+#define _EXECINFO_H_
+
+#ifdef __cplusplus
+extern "C" {
+#endif
+
+#include <stddef.h>
+
+size_t backtrace(void **, size_t);
+char **backtrace_symbols(void *const *, int);
+void backtrace_symbols_fd(void *const *, int, int);
+
+#ifdef __cplusplus
+}
+#endif
+
+#endif /* _EXECINFO_H_ */
