--- lib/CMakeLists.txt.bak	2016-07-02 10:38:53.825750697 +0200
+++ lib/CMakeLists.txt	2016-07-02 10:39:50.724746015 +0200
@@ -28,11 +28,7 @@
   set(exclude_from_all EXCLUDE_FROM_ALL)
 endif()
 
-if (LIBCXX_ENABLE_SHARED)
-  add_library(cxx SHARED ${exclude_from_all} ${LIBCXX_SOURCES} ${LIBCXX_HEADERS})
-else()
-  add_library(cxx STATIC ${exclude_from_all} ${LIBCXX_SOURCES} ${LIBCXX_HEADERS})
-endif()
+add_library(cxx OBJECT ${exclude_from_all} ${LIBCXX_SOURCES} ${LIBCXX_HEADERS})
 
 if (DEFINED LIBCXX_CXX_ABI_DEPS)
   add_dependencies(cxx LIBCXX_CXX_ABI_DEPS)
@@ -139,18 +135,39 @@
   endif()
 endif()
 
-target_link_libraries(cxx ${LIBCXX_LIBRARIES})
 split_list(LIBCXX_COMPILE_FLAGS)
 split_list(LIBCXX_LINK_FLAGS)
 
 set_target_properties(cxx
   PROPERTIES
     COMPILE_FLAGS "${LIBCXX_COMPILE_FLAGS}"
+  )
+
+set(LIBCXX_TARGETS)
+
+add_library(cxx_shared SHARED $<TARGET_OBJECTS:cxx>)
+add_library(cxx_static STATIC $<TARGET_OBJECTS:cxx>)
+
+target_link_libraries(cxx_static ${LIBCXX_LIBRARIES})
+target_link_libraries(cxx_shared ${LIBCXX_LIBRARIES})
+
+set_target_properties(cxx_shared
+  PROPERTIES
     LINK_FLAGS    "${LIBCXX_LINK_FLAGS}"
     OUTPUT_NAME   "c++"
     VERSION       "${LIBCXX_ABI_VERSION}.0"
     SOVERSION     "${LIBCXX_ABI_VERSION}"
   )
+set_target_properties(cxx_static
+  PROPERTIES
+    LINK_FLAGS    "${LIBCXX_LINK_FLAGS}"
+    OUTPUT_NAME   "c++"
+  )
+
+list(APPEND LIBCXX_TARGETS "cxx_static")
+list(APPEND LIBCXX_TARGETS "cxx_shared")
+
+add_custom_target(allcxx DEPENDS ${LIBCXX_TARGETS})
 
 if (LIBCXX_ENABLE_EXPERIMENTAL_LIBRARY)
   file(GLOB LIBCXX_EXPERIMENTAL_SOURCES ../src/experimental/*.cpp)
@@ -158,7 +175,7 @@
     file(GLOB LIBCXX_FILESYSTEM_SOURCES ../src/experimental/filesystem/*.cpp)
   endif()
   add_library(cxx_experimental STATIC ${LIBCXX_EXPERIMENTAL_SOURCES} ${LIBCXX_FILESYSTEM_SOURCES})
-  target_link_libraries(cxx_experimental cxx)
+  target_link_libraries(cxx_experimental cxx_static)
 
   set(experimental_flags "${LIBCXX_COMPILE_FLAGS}")
   check_flag_supported(-std=c++14)
@@ -183,11 +200,11 @@
   endif()
   # Generate a linker script inplace of a libc++.so symlink. Rerun this command
   # after cxx builds.
-  add_custom_command(TARGET cxx POST_BUILD
+  add_custom_command(TARGET cxx_shared POST_BUILD
     COMMAND
       ${PYTHON_EXECUTABLE} ${LIBCXX_SOURCE_DIR}/utils/gen_link_script/gen_link_script.py
     ARGS
-      "$<TARGET_LINKER_FILE:cxx>"
+      "$<TARGET_LINKER_FILE:cxx_shared>"
       "${SCRIPT_ABI_LIBNAME}"
     WORKING_DIRECTORY ${LIBCXX_BUILD_DIR}
   )
@@ -197,7 +214,7 @@
   if (LIBCXX_INSTALL_EXPERIMENTAL_LIBRARY)
     set(experimental_lib cxx_experimental)
   endif()
-  install(TARGETS cxx ${experimental_lib}
+  install(TARGETS ${LIBCXX_TARGETS} ${experimental_lib}
     LIBRARY DESTINATION lib${LIBCXX_LIBDIR_SUFFIX} COMPONENT libcxx
     ARCHIVE DESTINATION lib${LIBCXX_LIBDIR_SUFFIX} COMPONENT libcxx
     )
@@ -215,7 +232,7 @@
 if (NOT CMAKE_CONFIGURATION_TYPES AND (LIBCXX_INSTALL_LIBRARY OR
                                        LIBCXX_INSTALL_HEADERS))
     if(LIBCXX_INSTALL_LIBRARY)
-      set(lib_install_target cxx)
+      set(lib_install_target ${LIBCXX_TARGETS})
     endif()
     if (LIBCXX_INSTALL_EXPERIMENTAL_LIBRARY)
       set(experimental_lib_install_target cxx_experimental)
