--- a/CMakeLists.txt	2025-04-03 21:59:07.406583056 +0200
+++ b/CMakeLists.txt	2025-04-03 23:11:46.037756801 +0200
@@ -6,6 +6,7 @@
 include(../../eng/native/configurepaths.cmake)
 include(${CLR_ENG_NATIVE_DIR}/configurecompiler.cmake)

+include_directories("${CMAKE_SOURCE_DIR}")
 include_directories("${CLR_SRC_NATIVE_DIR}")
 include_directories("${CLR_SRC_NATIVE_DIR}/inc")
 
--- a/debug/di/CMakeLists.txt	2025-04-03 21:54:26.681763024 +0200
+++ b/debug/di/CMakeLists.txt	2025-04-03 21:53:48.870199910 +0200
@@ -82,5 +82,5 @@
 list(APPEND CORDBDI_SOURCES ${CORDBDI_SOURCES_ASM_FILE})
 
 add_library_clr(cordbdi STATIC ${CORDBDI_SOURCES})
-target_precompile_headers(cordbdi PRIVATE stdafx.h)
+target_precompile_headers(cordbdi PRIVATE [["debug/di/stdafx.h"]])
 add_dependencies(cordbdi eventing_headers)
--- a/dlls/mscordbi/CMakeLists.txt	2025-04-03 21:54:26.689762932 +0200
+++ b/dlls/mscordbi/CMakeLists.txt	2025-04-03 21:53:48.886199724 +0200
@@ -56,7 +56,7 @@
 
 add_library_clr(mscordbi SHARED ${MSCORDBI_SOURCES})
 set_target_properties(mscordbi PROPERTIES DBI_COMPONENT TRUE)
-target_precompile_headers(mscordbi PRIVATE $<$<COMPILE_LANGUAGE:CXX>:stdafx.h>)
+target_precompile_headers(mscordbi PRIVATE $<$<COMPILE_LANGUAGE:CXX>:dlls/mscordbi/stdafx.h>)
 
 if(CLR_CMAKE_HOST_UNIX)
     add_custom_target(mscordbi_exports DEPENDS ${EXPORTS_FILE})
--- a/jit/CMakeLists.txt	2025-04-03 21:54:26.705762748 +0200
+++ b/jit/CMakeLists.txt	2025-04-03 21:53:48.890199678 +0200
@@ -603,7 +603,7 @@
     endif(CLR_CMAKE_TARGET_WIN32)
 
     target_include_directories(${jitName} PRIVATE ${JIT_SOURCE_DIR})
-    target_precompile_headers(${jitName} PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:jitpch.h>")
+    target_precompile_headers(${jitName} PRIVATE $<$<COMPILE_LANGUAGE:CXX>:jit/jitpch.h>)
 
     add_dependencies(${jitName} jit_exports)
 
--- a/md/datasource/CMakeLists.txt	2025-04-03 21:54:26.709762702 +0200
+++ b/md/datasource/CMakeLists.txt	2025-04-03 21:53:48.922199307 +0200
@@ -22,4 +22,4 @@
 
 add_library_clr(mddatasource_dbi STATIC ${MDDATASOURCE_SOURCES})
 set_target_properties(mddatasource_dbi PROPERTIES DBI_COMPONENT TRUE)
-target_precompile_headers(mddatasource_dbi PRIVATE stdafx.h)
+target_precompile_headers(mddatasource_dbi PRIVATE [["md/datasource/stdafx.h"]])
--- a/md/ceefilegen/CMakeLists.txt	2025-02-12 05:10:18.000000000 +0100
+++ b/md/ceefilegen/CMakeLists.txt	2025-04-04 15:50:05.362863543 +0200
@@ -29,7 +29,7 @@
     OBJECT
     ${CEEFILEGEN_SOURCES}
 )
-target_precompile_headers(ceefgen_obj PRIVATE stdafx.h)
+target_precompile_headers(ceefgen_obj PRIVATE [["md/ceefilegen/stdafx.h"]])

 add_library(ceefgen INTERFACE)
 target_sources(ceefgen INTERFACE $<TARGET_OBJECTS:ceefgen_obj>)
--- a/md/compiler/CMakeLists.txt	2025-02-12 05:10:18.000000000 +00100
+++ b/md/compiler/CMakeLists.txt	2025-04-04 15:50:52.038397927 +0200
@@ -63,18 +63,18 @@

 add_library_clr(mdcompiler_dac ${MDCOMPILER_SOURCES})
 set_target_properties(mdcompiler_dac PROPERTIES DAC_COMPONENT TRUE)
-target_precompile_headers(mdcompiler_dac PRIVATE stdafx.h)
+target_precompile_headers(mdcompiler_dac PRIVATE [["md/compiler/stdafx.h"]])

 add_library_clr(mdcompiler_wks_obj OBJECT ${MDCOMPILER_WKS_SOURCES})
 target_compile_definitions(mdcompiler_wks_obj PRIVATE FEATURE_METADATA_EMIT_ALL)
-target_precompile_headers(mdcompiler_wks_obj PRIVATE stdafx.h)
+target_precompile_headers(mdcompiler_wks_obj PRIVATE [["md/compiler/stdafx.h"]])
 add_library(mdcompiler_wks INTERFACE)
 target_sources(mdcompiler_wks INTERFACE $<TARGET_OBJECTS:mdcompiler_wks_obj>)

 add_library_clr(mdcompiler-dbi ${MDCOMPILER_SOURCES})
 set_target_properties(mdcompiler-dbi PROPERTIES DBI_COMPONENT TRUE)
-target_precompile_headers(mdcompiler-dbi PRIVATE stdafx.h)
+target_precompile_headers(mdcompiler-dbi PRIVATE [["md/compiler/stdafx.h"]])

 add_library_clr(mdcompiler_ppdb ${MDCOMPILER_SOURCES})
 target_compile_definitions(mdcompiler_ppdb PRIVATE FEATURE_METADATA_EMIT_ALL FEATURE_METADATA_EMIT_PORTABLE_PDB)
-target_precompile_headers(mdcompiler_ppdb PRIVATE stdafx.h)
+target_precompile_headers(mdcompiler_ppdb PRIVATE [["md/compiler/stdafx.h"]])
--- a/md/enc/CMakeLists.txt	2025-04-04 15:52:19.805518308 +0200
+++ b/md/enc/CMakeLists.txt	2025-04-04 15:51:59.581721434 +0200
@@ -49,18 +49,18 @@

 add_library_clr(mdruntimerw_dac ${MDRUNTIMERW_SOURCES})
 set_target_properties(mdruntimerw_dac PROPERTIES DAC_COMPONENT TRUE)
-target_precompile_headers(mdruntimerw_dac PRIVATE stdafx.h)
+target_precompile_headers(mdruntimerw_dac PRIVATE [["md/enc/stdafx.h"]])

 add_library_clr(mdruntimerw_wks_obj OBJECT ${MDRUNTIMERW_SOURCES})
 target_compile_definitions(mdruntimerw_wks_obj PRIVATE FEATURE_METADATA_EMIT_ALL)
-target_precompile_headers(mdruntimerw_wks_obj PRIVATE stdafx.h)
+target_precompile_headers(mdruntimerw_wks_obj PRIVATE [["md/enc/stdafx.h"]])
 add_library(mdruntimerw_wks INTERFACE)
 target_sources(mdruntimerw_wks INTERFACE $<TARGET_OBJECTS:mdruntimerw_wks_obj>)

 add_library_clr(mdruntimerw-dbi ${MDRUNTIMERW_SOURCES})
 set_target_properties(mdruntimerw-dbi PROPERTIES DBI_COMPONENT TRUE)
-target_precompile_headers(mdruntimerw-dbi PRIVATE stdafx.h)
+target_precompile_headers(mdruntimerw-dbi PRIVATE [["md/enc/stdafx.h"]])

 add_library_clr(mdruntimerw_ppdb ${MDRUNTIMERW_SOURCES})
 target_compile_definitions(mdruntimerw_ppdb PRIVATE FEATURE_METADATA_EMIT_ALL FEATURE_METADATA_EMIT_PORTABLE_PDB)
-target_precompile_headers(mdruntimerw_ppdb PRIVATE stdafx.h)
+target_precompile_headers(mdruntimerw_ppdb PRIVATE [["md/enc/stdafx.h"]])
--- a/md/runtime/CMakeLists.txt	2025-04-04 15:53:32.656784635 +0200
+++ b/md/runtime/CMakeLists.txt	2025-04-04 15:53:21.964892493 +0200
@@ -45,18 +45,18 @@

 add_library_clr(mdruntime_dac ${MDRUNTIME_SOURCES})
 set_target_properties(mdruntime_dac PROPERTIES DAC_COMPONENT TRUE)
-target_precompile_headers(mdruntime_dac PRIVATE stdafx.h)
+target_precompile_headers(mdruntime_dac PRIVATE [["md/runtime/stdafx.h"]])

 add_library_clr(mdruntime_wks_obj OBJECT ${MDRUNTIME_SOURCES})
 target_compile_definitions(mdruntime_wks_obj PRIVATE FEATURE_METADATA_EMIT_ALL)
-target_precompile_headers(mdruntime_wks_obj PRIVATE stdafx.h)
+target_precompile_headers(mdruntime_wks_obj PRIVATE [["md/runtime/stdafx.h"]])
 add_library(mdruntime_wks INTERFACE)
 target_sources(mdruntime_wks INTERFACE $<TARGET_OBJECTS:mdruntime_wks_obj>)

 add_library_clr(mdruntime-dbi ${MDRUNTIME_SOURCES})
 set_target_properties(mdruntime-dbi PROPERTIES DBI_COMPONENT TRUE)
-target_precompile_headers(mdruntime-dbi PRIVATE stdafx.h)
+target_precompile_headers(mdruntime-dbi PRIVATE [["md/runtime/stdafx.h"]])

 add_library_clr(mdruntime_ppdb ${MDRUNTIME_SOURCES})
 target_compile_definitions(mdruntime_ppdb PRIVATE FEATURE_METADATA_EMIT_ALL FEATURE_METADATA_EMIT_PORTABLE_PDB)
-target_precompile_headers(mdruntime_ppdb PRIVATE stdafx.h)
+target_precompile_headers(mdruntime_ppdb PRIVATE [["md/runtime/stdafx.h"]])
--- a/tools/superpmi/mcs/CMakeLists.txt	2025-04-03 21:54:26.725762517 +0200
+++ b/tools/superpmi/mcs/CMakeLists.txt	2025-04-03 21:53:49.078197500 +0200
@@ -50,7 +50,7 @@
 add_executable_clr(mcs
     ${MCS_SOURCES}
 )
-target_precompile_headers(mcs PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:standardpch.h>")
+target_precompile_headers(mcs PRIVATE $<$<COMPILE_LANGUAGE:CXX>:tools/superpmi/superpmi-shared/standardpch.h>)
 
 if(CLR_CMAKE_HOST_UNIX)
     target_link_libraries(mcs
--- a/tools/superpmi/superpmi/CMakeLists.txt	2025-04-03 21:54:26.725762517 +0200
+++ b/tools/superpmi/superpmi/CMakeLists.txt	2025-04-03 21:53:49.078197500 +0200
@@ -56,7 +56,7 @@
     ${SUPERPMI_SOURCES}
 )
 
-target_precompile_headers(superpmi PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:standardpch.h>")
+target_precompile_headers(superpmi PRIVATE $<$<COMPILE_LANGUAGE:CXX>:tools/superpmi/superpmi-shared/standardpch.h>)
 
 if(CLR_CMAKE_HOST_UNIX)
     target_link_libraries(superpmi
--- a/tools/superpmi/superpmi-shim-collector/CMakeLists.txt	2025-04-03 21:54:26.725762517 +0200
+++ b/tools/superpmi/superpmi-shim-collector/CMakeLists.txt	2025-04-03 21:53:49.078197500 +0200
@@ -60,7 +60,7 @@
     ${SUPERPMI_SHIM_COLLECTOR_SOURCES}
 )
 
-target_precompile_headers(superpmi-shim-collector PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:standardpch.h>")
+target_precompile_headers(superpmi-shim-collector PRIVATE $<$<COMPILE_LANGUAGE:CXX>:tools/superpmi/superpmi-shared/standardpch.h>)
 
 add_custom_target(spmi_exports DEPENDS ${SPMI_COLLECTOR_EXPORTS_FINAL_FILE})
 add_dependencies(superpmi-shim-collector spmi_exports)
--- a/tools/superpmi/superpmi-shim-counter/CMakeLists.txt	2025-04-03 21:54:26.725762517 +0200
+++ b/tools/superpmi/superpmi-shim-counter/CMakeLists.txt	2025-04-03 21:53:49.078197500 +0200
@@ -46,7 +46,7 @@
     ${SUPERPMI_SHIM_COUNTER_SOURCES}
 )
 
-target_precompile_headers(superpmi-shim-counter PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:standardpch.h>")
+target_precompile_headers(superpmi-shim-counter PRIVATE $<$<COMPILE_LANGUAGE:CXX>:tools/superpmi/superpmi-shared/standardpch.h>)
 
 if(CLR_CMAKE_HOST_UNIX)
     target_link_libraries(superpmi-shim-counter
--- a/tools/superpmi/superpmi-shim-simple/CMakeLists.txt	2025-04-03 21:54:26.725762517 +0200
+++ b/tools/superpmi/superpmi-shim-simple/CMakeLists.txt	2025-04-03 21:53:49.078197500 +0200
@@ -45,7 +45,7 @@
     ${SUPERPMI_SHIM_SIMPLE_SOURCES}
 )
 
-target_precompile_headers(superpmi-shim-simple PRIVATE "$<$<COMPILE_LANGUAGE:CXX>:standardpch.h>")
+target_precompile_headers(superpmi-shim-simple PRIVATE $<$<COMPILE_LANGUAGE:CXX>:tools/superpmi/superpmi-shared/standardpch.h>)
 
 if(CLR_CMAKE_HOST_UNIX)
     target_link_libraries(superpmi-shim-simple
