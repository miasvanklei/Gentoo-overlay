diff -ur coreclr-2.0.3/CMakeLists.txt coreclr-2.0.3-new/CMakeLists.txt
--- coreclr-2.0.3/CMakeLists.txt	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/CMakeLists.txt	2017-11-20 21:23:25.198368286 +0100
@@ -617,7 +617,7 @@
   remove_definitions(-DUNICODE)
   remove_definitions(-D_UNICODE)
 
-  add_subdirectory(tests)
+  #add_subdirectory(tests)
 endif(CLR_CMAKE_BUILD_TESTS)
 
 include(definitionsconsistencycheck.cmake)
Only in coreclr-2.0.3-new: bin
diff -ur coreclr-2.0.3/compileoptions.cmake coreclr-2.0.3-new/compileoptions.cmake
--- coreclr-2.0.3/compileoptions.cmake	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/compileoptions.cmake	2017-11-20 20:38:45.016144228 +0100
@@ -25,7 +25,7 @@
 
   if (CLR_CMAKE_WARNINGS_ARE_ERRORS)
     # All warnings that are not explicitly disabled are reported as errors
-    add_compile_options(-Werror)
+    #add_compile_options(-Werror)
   endif(CLR_CMAKE_WARNINGS_ARE_ERRORS)
 
   # Disabled warnings
diff -ur coreclr-2.0.3/src/CMakeLists.txt coreclr-2.0.3-new/src/CMakeLists.txt
--- coreclr-2.0.3/src/CMakeLists.txt	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/CMakeLists.txt	2017-11-20 19:45:25.052746463 +0100
@@ -54,7 +54,7 @@
 endif(WIN32)
 
 if(CLR_CMAKE_WARNINGS_ARE_ERRORS)
-    set(PYTHON_WARNING_FLAGS -Wall -Werror)
+    set(PYTHON_WARNING_FLAGS -Wall)
 else()
     set(PYTHON_WARNING_FLAGS -Wall)
 endif(CLR_CMAKE_WARNINGS_ARE_ERRORS)
diff -ur coreclr-2.0.3/src/ToolBox/SOS/Strike/strike.cpp coreclr-2.0.3-new/src/ToolBox/SOS/Strike/strike.cpp
--- coreclr-2.0.3/src/ToolBox/SOS/Strike/strike.cpp	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/ToolBox/SOS/Strike/strike.cpp	2017-11-20 21:31:51.175439867 +0100
@@ -82,6 +82,7 @@
 #include <dbghelp.h>
 
 #include <stdio.h>
+#include <sys/types.h>
 #include <stdlib.h>
 #include <string.h>
 #include <stddef.h>
diff -ur coreclr-2.0.3/src/ToolBox/superpmi/superpmi-shared/methodcontext.cpp coreclr-2.0.3-new/src/ToolBox/superpmi/superpmi-shared/methodcontext.cpp
--- coreclr-2.0.3/src/ToolBox/superpmi/superpmi-shared/methodcontext.cpp	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/ToolBox/superpmi/superpmi-shared/methodcontext.cpp	2017-11-20 20:59:20.583899424 +0100
@@ -297,8 +297,6 @@
 
 void MethodContext::MethodInitHelper(unsigned char* buff2, unsigned int totalLen)
 {
-    MethodContext::MethodContext();
-
     unsigned int   buffIndex = 0;
     unsigned int   localsize = 0;
     unsigned char  canary    = 0xff;
diff -ur coreclr-2.0.3/src/debug/createdump/crashinfo.cpp coreclr-2.0.3-new/src/debug/createdump/crashinfo.cpp
--- coreclr-2.0.3/src/debug/createdump/crashinfo.cpp	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/debug/createdump/crashinfo.cpp	2017-11-20 20:44:19.104509567 +0100
@@ -3,6 +3,7 @@
 // See the LICENSE file in the project root for more information.
 
 #include "createdump.h"
+#include <string>
 
 CrashInfo::CrashInfo(pid_t pid, ICLRDataTarget* dataTarget, bool sos) :
     m_ref(1),
diff -ur coreclr-2.0.3/src/debug/createdump/crashinfo.h coreclr-2.0.3-new/src/debug/createdump/crashinfo.h
--- coreclr-2.0.3/src/debug/createdump/crashinfo.h	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/debug/createdump/crashinfo.h	2017-11-20 19:47:18.988506222 +0100
@@ -3,6 +3,9 @@
 // See the LICENSE file in the project root for more information.
 
 // typedef for our parsing of the auxv variables in /proc/pid/auxv.
+
+#include <array>
+
 #if defined(__i386) || defined(__ARM_EABI__) 
 typedef Elf32_auxv_t elf_aux_entry;
 #elif defined(__x86_64) || defined(__aarch64__)
diff -ur coreclr-2.0.3/src/debug/createdump/main.cpp coreclr-2.0.3-new/src/debug/createdump/main.cpp
--- coreclr-2.0.3/src/debug/createdump/main.cpp	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/debug/createdump/main.cpp	2017-11-20 21:30:53.222547370 +0100
@@ -3,6 +3,7 @@
 // See the LICENSE file in the project root for more information.
 
 #include "createdump.h"
+#include <string>
 
 const char* g_help = "createdump [options] pid\n" 
 "-f, --name - dump path and file name. The pid can be placed in the name with %d. The default is '/tmp/coredump.%d'\n"
diff -ur coreclr-2.0.3/src/debug/createdump/memoryregion.h coreclr-2.0.3-new/src/debug/createdump/memoryregion.h
--- coreclr-2.0.3/src/debug/createdump/memoryregion.h	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/debug/createdump/memoryregion.h	2017-11-20 19:49:06.164280055 +0100
@@ -2,6 +2,8 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 // See the LICENSE file in the project root for more information.
 
+#define PAGE_SHIFT 12
+
 enum MEMORY_REGION_FLAGS : uint32_t
 {
     // PF_X        = 0x01,      // Execute
diff -ur coreclr-2.0.3/src/debug/createdump/threadinfo.cpp coreclr-2.0.3-new/src/debug/createdump/threadinfo.cpp
--- coreclr-2.0.3/src/debug/createdump/threadinfo.cpp	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/debug/createdump/threadinfo.cpp	2017-11-20 20:44:05.232533459 +0100
@@ -4,6 +4,10 @@
 
 #include "createdump.h"
 
+#ifndef __GLIBC__
+typedef int __ptrace_request;
+#endif
+
 #define FPREG_ErrorOffset(fpregs) *(DWORD*)&((fpregs).rip)
 #define FPREG_ErrorSelector(fpregs) *(((WORD*)&((fpregs).rip)) + 2)
 #define FPREG_DataOffset(fpregs) *(DWORD*)&((fpregs).rdp)
diff -ur coreclr-2.0.3/src/debug/daccess/nidump.cpp coreclr-2.0.3-new/src/debug/daccess/nidump.cpp
--- coreclr-2.0.3/src/debug/daccess/nidump.cpp	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/debug/daccess/nidump.cpp	2017-11-20 21:30:01.335643413 +0100
@@ -9239,7 +9239,7 @@
 #define assert(a)
 #define NOTHROW
 #define GC_NOTRIGGER
-#include <gcdecoder.cpp>
+//#include <gcdecoder.cpp>
 #undef NOTHROW
 #undef GC_NOTRIGGER
 
@@ -9253,16 +9253,16 @@
 #undef _ASSERTE
 #define _ASSERTE(a) do {} while (0)
 #ifdef _TARGET_X86_
-#include <gcdump.cpp>
+//#include <gcdump.cpp>
 #endif
 
 #undef LIMITED_METHOD_CONTRACT
 #undef WRAPPER_NO_CONTRACT
 #ifdef _TARGET_X86_
-#include <i386/gcdumpx86.cpp>
+//#include <i386/gcdumpx86.cpp>
 #else // !_TARGET_X86_
 #undef PREGDISPLAY
-#include <gcdumpnonx86.cpp>
+//#include <gcdumpnonx86.cpp>
 #endif // !_TARGET_X86_
 
 #ifdef __MSC_VER
diff -ur coreclr-2.0.3/src/dlls/mscoree/coreclr/CMakeLists.txt coreclr-2.0.3-new/src/dlls/mscoree/coreclr/CMakeLists.txt
--- coreclr-2.0.3/src/dlls/mscoree/coreclr/CMakeLists.txt	2017-10-14 00:43:04.000000000 +0200
+++ coreclr-2.0.3-new/src/dlls/mscoree/coreclr/CMakeLists.txt	2017-11-20 20:54:44.840393643 +0100
@@ -28,7 +28,7 @@
     if(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD)
         # This option is necessary to ensure that the overloaded delete operator defined inside
         # of the utilcode will be used instead of the standard library delete operator.
-        set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Xlinker -Bsymbolic -Xlinker -Bsymbolic-functions")
+        set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Xlinker -Bsymbolic -Xlinker -Bsymbolic-functions -Xlinker -nostrip")
 
         # The following linked options can be inserted into the linker libraries list to 
         # ensure proper resolving of circular references between a subset of the libraries.
