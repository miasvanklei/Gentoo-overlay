--- a/src/ToolBox/SOS/Strike/strike.cpp
+++ b/src/ToolBox/SOS/Strike/strike.cpp
@@ -82,6 +82,7 @@
 #include <dbghelp.h>
 
 #include <stdio.h>
+#include <sys/types.h>
 #include <stdlib.h>
 #include <string.h>
 #include <stddef.h>
--- a/src/ToolBox/superpmi/superpmi-shared/methodcontext.cpp
+++ b/src/ToolBox/superpmi/superpmi-shared/methodcontext.cpp
@@ -297,8 +297,6 @@
 
 void MethodContext::MethodInitHelper(unsigned char* buff2, unsigned int totalLen)
 {
-    MethodContext::MethodContext();
-
     unsigned int   buffIndex = 0;
     unsigned int   localsize = 0;
     unsigned char  canary    = 0xff;
--- a/src/debug/createdump/crashinfo.cpp
+++ b/src/debug/createdump/crashinfo.cpp
@@ -3,6 +3,7 @@
 // See the LICENSE file in the project root for more information.
 
 #include "createdump.h"
+#include <string>
 
 CrashInfo::CrashInfo(pid_t pid, ICLRDataTarget* dataTarget, bool sos) :
     m_ref(1),
--- a/src/debug/createdump/crashinfo.h
+++ b/src/debug/createdump/crashinfo.h
@@ -3,6 +3,9 @@
 // See the LICENSE file in the project root for more information.
 
 // typedef for our parsing of the auxv variables in /proc/pid/auxv.
+
+#include <array>
+
 #if defined(__i386) || defined(__ARM_EABI__) 
 typedef Elf32_auxv_t elf_aux_entry;
 #elif defined(__x86_64) || defined(__aarch64__)
--- a/src/debug/createdump/main.cpp
+++ b/src/debug/createdump/main.cpp
@@ -3,6 +3,7 @@
 // See the LICENSE file in the project root for more information.
 
 #include "createdump.h"
+#include <string>
 
 const char* g_help = "createdump [options] pid\n" 
 "-f, --name - dump path and file name. The pid can be placed in the name with %d. The default is '/tmp/coredump.%d'\n"
--- a/src/debug/createdump/memoryregion.h
+++ b/src/debug/createdump/memoryregion.h
@@ -2,6 +2,8 @@
 // The .NET Foundation licenses this file to you under the MIT license.
 // See the LICENSE file in the project root for more information.
 
+#define PAGE_SHIFT 12
+
 enum MEMORY_REGION_FLAGS : uint32_t
 {
     // PF_X        = 0x01,      // Execute
--- a/src/debug/createdump/threadinfo.cpp
+++ b/src/debug/createdump/threadinfo.cpp
@@ -4,6 +4,10 @@
 
 #include "createdump.h"
 
+#ifndef __GLIBC__
+typedef int __ptrace_request;
+#endif
+
 #define FPREG_ErrorOffset(fpregs) *(DWORD*)&((fpregs).rip)
 #define FPREG_ErrorSelector(fpregs) *(((WORD*)&((fpregs).rip)) + 2)
 #define FPREG_DataOffset(fpregs) *(DWORD*)&((fpregs).rdp)
--- a/src/debug/daccess/nidump.cpp
+++ b/src/debug/daccess/nidump.cpp
@@ -9239,7 +9239,7 @@
 #define assert(a)
 #define NOTHROW
 #define GC_NOTRIGGER
-#include <gcdecoder.cpp>
+//#include <gcdecoder.cpp>
 #undef NOTHROW
 #undef GC_NOTRIGGER
 
@@ -9253,16 +9253,16 @@
 #undef _ASSERTE
 #define _ASSERTE(a) do {} while (0)
 #ifdef _TARGET_X86_
-#include <gcdump.cpp>
+//#include <gcdump.cpp>
 #endif
 
 #undef LIMITED_METHOD_CONTRACT
 #undef WRAPPER_NO_CONTRACT
 #ifdef _TARGET_X86_
-#include <i386/gcdumpx86.cpp>
+//#include <i386/gcdumpx86.cpp>
 #else // !_TARGET_X86_
 #undef PREGDISPLAY
-#include <gcdumpnonx86.cpp>
+//#include <gcdumpnonx86.cpp>
 #endif // !_TARGET_X86_
 
 #ifdef __MSC_VER
--- a/src/dlls/mscoree/coreclr/CMakeLists.txt
+++ b/src/dlls/mscoree/coreclr/CMakeLists.txt
@@ -28,7 +28,7 @@
     if(CMAKE_SYSTEM_NAME STREQUAL Linux OR CMAKE_SYSTEM_NAME STREQUAL FreeBSD OR CMAKE_SYSTEM_NAME STREQUAL NetBSD)
         # This option is necessary to ensure that the overloaded delete operator defined inside
         # of the utilcode will be used instead of the standard library delete operator.
-        set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Xlinker -Bsymbolic -Xlinker -Bsymbolic-functions")
+        set(CMAKE_SHARED_LINKER_FLAGS "${CMAKE_SHARED_LINKER_FLAGS} -Xlinker -Bsymbolic -Xlinker -Bsymbolic-functions")
 
         # The following linked options can be inserted into the linker libraries list to 
         # ensure proper resolving of circular references between a subset of the libraries.
--- a/src/pal/tools/clang-compiler-override.txt
+++ b/src/pal/tools/clang-compiler-override.txt
@@ -1,16 +1,5 @@
 SET (CMAKE_C_FLAGS_INIT                "-Wall -std=c11")
-SET (CMAKE_C_FLAGS_DEBUG_INIT          "-g -O0")
-SET (CLR_C_FLAGS_CHECKED_INIT          "-g -O2")
-# Refer to the below instruction to support __thread with -O2/-O3 on Linux/ARM
-# https://github.com/dotnet/coreclr/blob/master/Documentation/building/linux-instructions.md
-SET (CMAKE_C_FLAGS_RELEASE_INIT        "-g -O3")
-SET (CMAKE_C_FLAGS_RELWITHDEBINFO_INIT "-g -O2")
-
 SET (CMAKE_CXX_FLAGS_INIT                "-Wall -Wno-null-conversion -std=c++11")
-SET (CMAKE_CXX_FLAGS_DEBUG_INIT          "-g -O0")
-SET (CLR_CXX_FLAGS_CHECKED_INIT          "-g -O2")
-SET (CMAKE_CXX_FLAGS_RELEASE_INIT        "-g -O3")
-SET (CMAKE_CXX_FLAGS_RELWITHDEBINFO_INIT "-g -O2")
 
 SET (CLR_DEFINES_DEBUG_INIT              DEBUG _DEBUG _DBG URTBLDENV_FRIENDLY=Checked BUILDENV_CHECKED=1)
 SET (CLR_DEFINES_CHECKED_INIT            DEBUG _DEBUG _DBG URTBLDENV_FRIENDLY=Checked BUILDENV_CHECKED=1)
