diff --git a/Sources/Vapor/File/FileManager.swift b/Sources/Vapor/File/FileManager.swift
index b1ea7074..a36338b1 100644
--- a/Sources/Vapor/File/FileManager.swift
+++ b/Sources/Vapor/File/FileManager.swift
@@ -41,7 +41,7 @@ class FileManager {
         let path = try self.expandPath(path).finished(with: "/")
         let pattern = strdup(path + "{*,.*}")
 
-        switch glob(pattern, GLOB_MARK | GLOB_NOSORT | GLOB_BRACE, nil, &gt) {
+        switch glob(pattern, GLOB_MARK | GLOB_NOSORT, nil, &gt) {
         case GLOB_NOMATCH:
             return [ ]
         case GLOB_ABORTED:
diff --git a/Sources/Vapor/Error/ErrorMiddleware.swift b/Sources/Vapor/Error/ErrorMiddleware.swift
index 9329e3a5..196a05fe 100644
--- a/Sources/Vapor/Error/ErrorMiddleware.swift
+++ b/Sources/Vapor/Error/ErrorMiddleware.swift
@@ -62,9 +62,9 @@ extension JSON {
         
         var json = JSON(["error": true])
         if let abort = error as? AbortError {
-            json.set("reason", abort.reason)
+            try! json.set("reason", abort.reason)
         } else {
-            json.set("reason", status.reasonPhrase)
+            try! json.set("reason", status.reasonPhrase)
         }
         
         guard env != .production else {
@@ -78,13 +78,13 @@ extension JSON {
             }
             
             if let debug = error as? Debuggable {
-                json.set("debugReason", debug.reason)
-                json.set("identifier", debug.fullIdentifier)
-                json.set("possibleCauses", debug.possibleCauses)
-                json.set("suggestedFixes", debug.suggestedFixes)
-                json.set("documentationLinks", debug.documentationLinks)
-                json.set("stackOverflowQuestions", debug.stackOverflowQuestions)
-                json.set("gitHubIssues", debug.gitHubIssues)
+                try! json.set("debugReason", debug.reason)
+                try! json.set("identifier", debug.fullIdentifier)
+                try! json.set("possibleCauses", debug.possibleCauses)
+                try! json.set("suggestedFixes", debug.suggestedFixes)
+                try! json.set("documentationLinks", debug.documentationLinks)
+                try! json.set("stackOverflowQuestions", debug.stackOverflowQuestions)
+                try! json.set("gitHubIssues", debug.gitHubIssues)
             }
         }
         
@@ -95,7 +95,7 @@ extension JSON {
 extension StructuredDataWrapper {
     fileprivate mutating func set(_ key: String, _ closure: (Context?) throws -> Node) rethrows {
         let node = try closure(context)
-        set(key, node)
+        try! set(key, node)
     }
     
     fileprivate mutating func set(_ key: String, _ value: String?) {
