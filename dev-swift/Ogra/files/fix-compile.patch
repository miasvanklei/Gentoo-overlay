diff --git a/Sources/Encodable.swift b/Sources/Encodable.swift
index 3d3658e..96e9b39 100644
--- a/Sources/Encodable.swift
+++ b/Sources/Encodable.swift
@@ -33,25 +33,25 @@ extension Bool: Encodable {
 
 extension Int: Encodable {
 	public func encode() -> JSON {
-		return .number(self as NSNumber)
+		return .number(NSNumber(value: self))
 	}
 }
 
 extension Double: Encodable {
 	public func encode() -> JSON {
-		return .number(self as NSNumber)
+		return .number(NSNumber(value: self))
 	}
 }
 
 extension Float: Encodable {
 	public func encode() -> JSON {
-		return .number(self as NSNumber)
+		return .number(NSNumber(value: self))
 	}
 }
 
 extension UInt: Encodable {
 	public func encode() -> JSON {
-		return .number(self as NSNumber)
+		return .number(NSNumber(value: self))
 	}
 }
 
@@ -106,25 +106,25 @@ extension Encodable where Self: RawRepresentable, Self.RawValue == String {
 
 extension Encodable where Self: RawRepresentable, Self.RawValue == Int {
     public func encode() -> JSON {
-        return .number(self.rawValue as NSNumber)
+        return .number(NSNumber(value: self.rawValue))
     }
 }
 
 extension Encodable where Self: RawRepresentable, Self.RawValue == Double {
     public func encode() -> JSON {
-        return .number(self.rawValue as NSNumber)
+        return .number(NSNumber(value: self.rawValue))
     }
 }
 
 extension Encodable where Self: RawRepresentable, Self.RawValue == Float {
     public func encode() -> JSON {
-        return .number(self.rawValue as NSNumber)
+        return .number(NSNumber(value: self.rawValue))
     }
 }
 
 extension Encodable where Self: RawRepresentable, Self.RawValue == UInt {
     public func encode() -> JSON {
-        return .number(self.rawValue as NSNumber)
+        return .number(NSNumber(value: self.rawValue))
     }
 }
 
