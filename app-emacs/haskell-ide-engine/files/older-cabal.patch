--- a/src/Haskell/Ide/Engine/Plugin/Build.hs	2018-02-09 11:33:41.750300596 +0100
+++ b/src/Haskell/Ide/Engine/Plugin/Build.hs	2018-02-09 11:44:05.115771160 +0100
@@ -25,7 +25,7 @@
 import System.Process (readProcess)
 import System.IO (openFile, hClose, IOMode(..))
 
-import Distribution.Helper as CH
+import Distribution.Helper
 
 import Distribution.Simple.Setup (defaultDistPref)
 import Distribution.Simple.Configure (localBuildInfoFile)
@@ -233,7 +233,7 @@
 
 prepareHelper' :: MonadIO m => FilePath -> FilePath -> FilePath -> m ()
 prepareHelper' distDir cabalExe dir =
-  prepare $ (mkQueryEnv dir distDir) {qePrograms = defaultPrograms {cabalProgram = cabalExe}}
+  prepare' $ (defaultQueryEnv dir distDir) {qePrograms = defaultPrograms {cabalProgram = cabalExe}}
 
 -----------------------------------------------
 
@@ -425,28 +425,20 @@
 
 listCabalTargets :: MonadIO m => FilePath -> FilePath -> m Package
 listCabalTargets distDir dir = do
-  runQuery (mkQueryEnv dir distDir) $ do
+  runQuery (defaultQueryEnv dir distDir) $ do
     pkgName' <- fst <$> packageId
-    cc <- components $ (,) CH.<$> entrypoints
-    let comps = map (fixupLibraryEntrypoint pkgName') $ map snd cc
+    comps <- map (fixupLibraryEntrypoint pkgName') <$> map fst <$> entrypoints
     absDir <- liftIO $ makeAbsolute dir
     return $ Package pkgName' absDir comps
   where
 -- # if MIN_VERSION_Cabal(2,0,0)
-#if MIN_VERSION_Cabal(1,24,0)
+#if MIN_VERSION_Cabal(1,25,0)
     fixupLibraryEntrypoint _n ChLibName = ChLibName
 #else
     fixupLibraryEntrypoint n (ChLibName "") = (ChLibName n)
 #endif
     fixupLibraryEntrypoint _ e = e
 
--- Example of new way to use cabal helper 'entrypoints' is a ComponentQuery,
--- components applies it to all components in the project, the semigroupoids
--- apply batches the result per component, and returns the component as the last
--- item.
-getComponents :: QueryEnv -> IO [(ChEntrypoint,ChComponentName)]
-getComponents env = runQuery env $ components $ (,) CH.<$> entrypoints
-
 -----------------------------------------------
 
 data StackYaml = StackYaml [StackPackage]
@@ -475,7 +467,7 @@
 
 compToJSON :: ChComponentName -> Value
 compToJSON ChSetupHsName = object ["type" .= ("setupHs" :: T.Text)]
-#if MIN_VERSION_Cabal(1,24,0)
+#if MIN_VERSION_Cabal(1,25,0)
 compToJSON ChLibName        = object ["type" .= ("library" :: T.Text)]
 compToJSON (ChSubLibName n) = object ["type" .= ("library" :: T.Text), "name" .= n]
 compToJSON (ChFLibName   n) = object ["type" .= ("library" :: T.Text), "name" .= n]
