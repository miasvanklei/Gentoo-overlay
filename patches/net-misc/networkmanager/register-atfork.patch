--- src/systemd/src/basic/process-util.c.bak	2017-11-27 19:18:32.414491901 +0100
+++ src/systemd/src/basic/process-util.c	2017-11-27 19:20:48.854209793 +0100
@@ -1015,12 +1015,6 @@
         cached_pid = CACHED_PID_UNSET;
 }
 
-/* We use glibc __register_atfork() + __dso_handle directly here, as they are not included in the glibc
- * headers. __register_atfork() is mostly equivalent to pthread_atfork(), but doesn't require us to link against
- * libpthread, as it is part of glibc anyway. */
-extern int __register_atfork(void (*prepare) (void), void (*parent) (void), void (*child) (void), void * __dso_handle);
-extern void* __dso_handle __attribute__ ((__weak__));
-
 pid_t getpid_cached(void) {
         pid_t current_value;
 
@@ -1042,7 +1036,7 @@
 
                 new_pid = getpid();
 
-                if (__register_atfork(NULL, NULL, reset_cached_pid, __dso_handle) != 0) {
+                if (pthread_atfork(NULL, NULL, reset_cached_pid) != 0) {
                         /* OOM? Let's try again later */
                         cached_pid = CACHED_PID_UNSET;
                         return new_pid;
