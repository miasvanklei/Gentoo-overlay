--- a/arch/x86/purgatory/Makefile	2018-09-21 15:16:15.027827930 +0200
+++ b/arch/x86/purgatory/Makefile	2018-09-21 15:16:26.034827668 +0200
@@ -9,7 +9,7 @@
 $(obj)/sha256.o: $(srctree)/lib/sha256.c FORCE
 	$(call if_changed_rule,cc_o_c)
 
-LDFLAGS_purgatory.ro := -e purgatory_start -r --no-undefined -nostdlib -z nodefaultlib
+LDFLAGS_purgatory.ro := -e purgatory_start -r --no-undefined -nostdlib
 targets += purgatory.ro
 
 KASAN_SANITIZE	:= n
--- a/arch/x86/realmode/rm/Makefile	2018-09-21 15:15:34.259828269 +0200
+++ b/arch/x86/realmode/rm/Makefile	2018-09-21 15:15:58.306828189 +0200
@@ -47,7 +47,7 @@
 targets += realmode.lds
 $(obj)/realmode.lds: $(obj)/pasyms.h
 
-LDFLAGS_realmode.elf := --emit-relocs -T
+LDFLAGS_realmode.elf := -m elf_i386 --emit-relocs -T
 CPPFLAGS_realmode.lds += -P -C -I$(objtree)/$(obj)
 
 targets += realmode.elf
--- a/arch/x86/boot/Makefile	2018-09-21 15:21:06.180801298 +0200
+++ b/arch/x86/boot/Makefile	2018-09-21 15:21:23.610798629 +0200
@@ -100,7 +100,7 @@
 AFLAGS_header.o += -I$(objtree)/$(obj)
 $(obj)/header.o: $(obj)/zoffset.h
 
-LDFLAGS_setup.elf	:= -T
+LDFLAGS_setup.elf	:= -m elf_i386 -T
 $(obj)/setup.elf: $(src)/setup.ld $(SETUP_OBJS) FORCE
 	$(call if_changed,ld)
 
--- a/arch/x86/kernel/vmlinux.lds.S	2018-09-24 11:12:51.892696132 +0200
+++ b/arch/x86/kernel/vmlinux.lds.S	2018-09-24 11:13:06.627987544 +0200
@@ -389,7 +389,7 @@
  * Per-cpu symbols which need to be offset from __per_cpu_load
  * for the boot processor.
  */
-#define INIT_PER_CPU(x) init_per_cpu__##x = x + __per_cpu_load
+#define INIT_PER_CPU(x) init_per_cpu__##x = x + ABSOLUTE(__per_cpu_load)
 INIT_PER_CPU(gdt_page);
 INIT_PER_CPU(irq_stack_union);
 
--- a/arch/x86/entry/vdso/Makefile	2018-10-22 19:02:37.991688007 +0200
+++ b/arch/x86/entry/vdso/Makefile	2018-10-22 19:02:47.421679012 +0200
@@ -47,7 +47,7 @@
 CPPFLAGS_vdso.lds += -P -C
 
 VDSO_LDFLAGS_vdso.lds = -m elf_x86_64 -soname linux-vdso.so.1 --no-undefined \
-			-z max-page-size=4096 -z common-page-size=4096
+			-z max-page-size=4096
 
 $(obj)/vdso64.so.dbg: $(obj)/vdso.lds $(vobjs) FORCE
 	$(call if_changed,vdso)
