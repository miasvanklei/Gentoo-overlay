--- a/gnomemusic/notification.py	2016-09-11 21:41:29.000000000 +0200
+++ b/gnomemusic/notification.py	2016-09-28 20:00:06.145601097 +0200
@@ -24,12 +24,16 @@
 
 from gi.repository import GLib, Grl, Notify
 
+from gnomemusic.albumartcache import AlbumArtCache, DefaultIcon
+
 from gettext import gettext as _
 
 from gnomemusic import log
 import logging
 logger = logging.getLogger(__name__)
 
+IMAGE_SIZE = 125
+
 
 class NotificationManager:
 
@@ -47,6 +51,76 @@
         self._notification.set_hint('resident', GLib.Variant('b', True))
         self._notification.set_hint('desktop-entry', GLib.Variant('s', 'gnome-music'))
 
+        self._isPlaying = False
+
+        self._albumArtCache = AlbumArtCache.get_default()
+        self._noArtworkIcon = self._albumArtCache.default_icon.get(IMAGE_SIZE, IMAGE_SIZE, DefaultIcon.Type.music)
+
+        rowStride = self._noArtworkIcon.get_rowstride()
+        hasAlpha = self._noArtworkIcon.get_has_alpha()
+        bitsPerSample = self._noArtworkIcon.get_bits_per_sample()
+        nChannels = self._noArtworkIcon.get_n_channels()
+        data = self._noArtworkIcon.get_pixels()
+
+        self._noArtworkIconSerialized = GLib.Variant(
+            '(iiibiiay)',
+            (IMAGE_SIZE, IMAGE_SIZE, rowStride, hasAlpha, bitsPerSample, nChannels, data))
+
+        self._player.connect('playing-changed', self._on_playing_changed)
+        self._player.connect('current-changed', self._update_track)
+        self._player.connect('thumbnail-updated', self._on_thumbnail_updated)
+
+    @log
+    def _on_playing_changed(self, player):
+        # this function might be called from one of the action handlers
+        # from libnotify, and we can't call _set_actions() from there
+        # (we would free the closure we're currently in and corrupt
+        # the stack)
+        GLib.idle_add(self._update_playing)
+
+    @log
+    def _update_playing(self):
+        isPlaying = self._player.playing
+
+        if self._isPlaying != isPlaying:
+            self._isPlaying = isPlaying
+            self._set_actions(isPlaying)
+            self._update_track(self._player)
+
+    @log
+    def _update_track(self, player):
+        if not self._player.currentTrack:
+            self._notification.update(_("Not playing"), None, 'gnome-music')
+            self._notification.set_hint('image-data', None)
+            self._notification.show()
+        else:
+            item = self._player.get_current_media()
+            if not item:
+                return
+            artist = item.get_string(Grl.METADATA_KEY_ARTIST)\
+                or item.get_author()\
+                or _("Unknown Artist")
+            album = item.get_string(Grl.METADATA_KEY_ALBUM)\
+                or _("Unknown Album")
+
+            self._notification.update(AlbumArtCache.get_media_title(item),
+                                      # TRANSLATORS: by refers to the artist, from to the album
+                                      _("by %s, from %s") % ('<b>' + artist + '</b>',
+                                                             '<i>' + album + '</i>'),
+                                      'gnome-music')
+
+            self._notification.show()
+
+    @log
+    def _on_thumbnail_updated(self, player, path, data=None):
+        if path:
+            self._notification.set_hint('image-path', GLib.Variant('s', path))
+            self._notification.set_hint('image-data', None)
+        else:
+            self._notification.set_hint('image-path', None)
+            self._notification.set_hint('image-data', self._noArtworkIconSerialized)
+        self._notification.show()
+
     @log
     def _set_actions(self, playing):
         self._notification.clear_actions()
