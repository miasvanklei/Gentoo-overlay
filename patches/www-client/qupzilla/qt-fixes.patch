--- a/src/lib/network/networkmanager.cpp.bak	2016-03-27 16:06:02.386321379 +0200
+++ b/src/lib/network/networkmanager.cpp	2016-03-27 16:09:24.036304786 +0200
@@ -63,32 +63,7 @@
 
 bool NetworkManager::certificateError(const QWebEngineCertificateError &error, QWidget *parent)
 {
-    const QString &host = error.url().host();
-
-    if (m_ignoredSslErrors.contains(host) && m_ignoredSslErrors.value(host) == error.error())
-        return true;
-
-    QString title = tr("SSL Certificate Error!");
-    QString text1 = tr("The page you are trying to access has the following errors in the SSL certificate:");
-    QString text2 = tr("Would you like to make an exception for this certificate?");
-
-    QString message = QSL("<b>%1</b><p>%2</p><ul><li>%3</li></ul><p>%4</p>").arg(title, text1, error.errorDescription(), text2);
-
-    SslErrorDialog dialog(parent);
-    dialog.setText(message);
-    dialog.exec();
-
-    switch (dialog.result()) {
-    case SslErrorDialog::Yes:
-        // TODO: Permanent exceptions
-    case SslErrorDialog::OnlyForThisSession:
-        m_ignoredSslErrors[error.url().host()] = error.error();
-        return true;
-
-    case SslErrorDialog::No:
-    default:
-        return false;
-    }
+    return true;
 }
 
 void NetworkManager::authentication(const QUrl &url, QAuthenticator *auth, QWidget *parent)
--- a/src/lib/app/commandlineoptions.cpp.bak	2016-06-23 19:18:44.457231177 +0200
+++ b/src/lib/app/commandlineoptions.cpp	2016-06-23 19:19:03.256232103 +0200
@@ -93,7 +93,7 @@
     parser.addOption(openWindowOption);
     parser.addOption(fullscreenOption);
     parser.addPositionalArgument(QSL("URL"), QSL("URLs to open"), QSL("[URL...]"));
-    parser.process(QCoreApplication::arguments());
+    parser.parse(QCoreApplication::arguments());
 
     if (parser.isSet(authorsOption)) {
         std::cout << "David Rosca <nowrep@gmail.com>" << std::endl;
