diff --git a/src/intel/intel_driver.c b/src/intel/intel_driver.c
index b8a1b52f..4aa6428d 100644
--- a/src/intel/intel_driver.c
+++ b/src/intel/intel_driver.c
@@ -140,23 +140,12 @@ intel_driver_context_init(intel_driver_t *driver)
 driver->ctx = drm_intel_gem_context_create(driver->bufmgr);
 if (!driver->ctx)
   return 0;
-driver->null_bo = NULL;
-#ifdef HAS_BO_SET_SOFTPIN
-drm_intel_bo *bo = dri_bo_alloc(driver->bufmgr, "null_bo", 64*1024, 4096);
-drm_intel_bo_set_softpin_offset(bo, 0);
-// don't reuse it, that would make two bo trying to bind to same address,
-// which is un-reasonable.
-drm_intel_bo_disable_reuse(bo);
-driver->null_bo = bo;
-#endif
 return 1;
 }
 
 static void
 intel_driver_context_destroy(intel_driver_t *driver)
 {
-if (driver->null_bo)
-  drm_intel_bo_unreference(driver->null_bo);
 if(driver->ctx)
   drm_intel_gem_context_destroy(driver->ctx);
 driver->ctx = NULL;
diff --git a/src/intel/intel_driver.h b/src/intel/intel_driver.h
index 3be93c2a..51f0e0db 100644
--- a/src/intel/intel_driver.h
+++ b/src/intel/intel_driver.h
@@ -79,7 +79,6 @@ typedef struct intel_driver
 {
   dri_bufmgr *bufmgr;
   drm_intel_context *ctx;
-  drm_intel_bo *null_bo;
   int fd;
   int device_id;
   int gen_ver;
diff --git a/src/intel/intel_gpgpu.c b/src/intel/intel_gpgpu.c
index 283b07a4..1c91fbc0 100644
--- a/src/intel/intel_gpgpu.c
+++ b/src/intel/intel_gpgpu.c
@@ -2084,8 +2084,6 @@ static void
 intel_gpgpu_states_setup(intel_gpgpu_t *gpgpu, cl_gpgpu_kernel *kernel)
 {
   gpgpu->ker = kernel;
-  if (gpgpu->drv->null_bo)
-    intel_gpgpu_setup_bti(gpgpu, gpgpu->drv->null_bo, 0, 64*1024, 0xfe, I965_SURFACEFORMAT_RAW);
 
   intel_gpgpu_build_idrt(gpgpu, kernel);
   dri_bo_unmap(gpgpu->aux_buf.bo);
