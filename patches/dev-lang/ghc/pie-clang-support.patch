--- a/mk/ways.mk	2018-02-09 09:33:13.733219177 +0100
+++ b/mk/ways.mk	2018-02-09 09:34:33.084020377 +0100
@@ -42,15 +42,15 @@
 
 # Way 'v':
 WAY_v_NAME=vanilla
-WAY_v_HC_OPTS= -static
+WAY_v_HC_OPTS= -fPIC -static
 
 # Way 'p':
 WAY_p_NAME=profiling
-WAY_p_HC_OPTS= -static -prof -eventlog
+WAY_p_HC_OPTS= -fPIC -static -prof -eventlog
 
 # Way 'l':
 WAY_l_NAME=event logging
-WAY_l_HC_OPTS= -static -eventlog
+WAY_l_HC_OPTS= -fPIC -static -eventlog
 
 #
 # These ways apply to the RTS only:
@@ -58,35 +58,35 @@
 
 # Way 'thr':
 WAY_thr_NAME=threaded
-WAY_thr_HC_OPTS= -static -optc-DTHREADED_RTS
+WAY_thr_HC_OPTS= -fPIC -static -optc-DTHREADED_RTS
 
 # Way 'thr_p':
 WAY_thr_p_NAME=threaded profiling
-WAY_thr_p_HC_OPTS= -static -prof -eventlog -optc-DTHREADED_RTS
+WAY_thr_p_HC_OPTS= -fPIC -static -prof -eventlog -optc-DTHREADED_RTS
 
 # Way 'thr_l':
 WAY_thr_l_NAME=threaded event logging
-WAY_thr_l_HC_OPTS= -static -optc-DTHREADED_RTS -eventlog
+WAY_thr_l_HC_OPTS= -fPIC -static -optc-DTHREADED_RTS -eventlog
 
 # Way 'debug':
 WAY_debug_NAME=debug
-WAY_debug_HC_OPTS= -static -optc-DDEBUG -ticky -DTICKY_TICKY -eventlog
+WAY_debug_HC_OPTS= -fPIC -static -optc-DDEBUG -ticky -DTICKY_TICKY -eventlog
 
 # Way 'debug_p':
 WAY_debug_p_NAME=debug profiled
-WAY_debug_p_HC_OPTS= -static -optc-DDEBUG -prof -eventlog
+WAY_debug_p_HC_OPTS= -fPIC -static -optc-DDEBUG -prof -eventlog
 
 # Way 'p':
 WAY_p_NAME=profiling
-WAY_p_HC_OPTS= -static -prof -eventlog
+WAY_p_HC_OPTS= -fPIC -static -prof -eventlog
 
 # Way 'thr_debug':
 WAY_thr_debug_NAME=threaded debug
-WAY_thr_debug_HC_OPTS= -static -optc-DTHREADED_RTS -optc-DDEBUG -eventlog
+WAY_thr_debug_HC_OPTS= -fPIC -static -optc-DTHREADED_RTS -optc-DDEBUG -eventlog
 
 # Way 'thr_debug_p':
 WAY_thr_debug_p_NAME=threaded debug profiling event logging
-WAY_thr_debug_p_HC_OPTS= -static -optc-DTHREADED_RTS -optc-DDEBUG -prof -eventlog
+WAY_thr_debug_p_HC_OPTS= -fPIC -static -optc-DTHREADED_RTS -optc-DDEBUG -prof -eventlog
 
 # Way 'dyn': build dynamic shared libraries
 WAY_dyn_NAME=dyn
--- a/compiler/main/DynFlags.hs   2018-02-01 05:20:33.000000000 +0100
+++ b/compiler/main/DynFlags.hs   2018-04-15 17:38:55.219737734 +0200
@@ -1104,7 +1104,6 @@
   sLdSupportsBuildId       :: Bool,
   sLdSupportsFilelist      :: Bool,
   sLdIsGnuLd               :: Bool,
-  sGccSupportsNoPie        :: Bool,
   -- commands for particular phases
   sPgm_L                 :: String,
   sPgm_P                 :: (String,[Option]),
@@ -5149,23 +5149,9 @@
           ["-fPIC", "-U__PIC__", "-D__PIC__"]
        | otherwise                             -> []
 
-    pieOpts
-      | gopt Opt_PICExecutable dflags       = ["-pie"]
-        -- See Note [No PIE when linking]
-      | sGccSupportsNoPie (settings dflags) = ["-no-pie"]
-      | otherwise                           = []
+    pieOpts = ["-pie"]
 
 
-{-
-Note [No PIE while linking]
-~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
-As of 2016 some Linux distributions (e.g. Debian) have started enabling -pie by
-default in their gcc builds. This is incompatible with -r as it implies that we
-are producing an executable. Consequently, we must manually pass -no-pie to gcc
-when joining object files or linking dynamic libraries. Unless, of course, the
-user has explicitly requested a PIE executable with -pie. See #12759.
--}
-
 picPOpts :: DynFlags -> [String]
 picPOpts dflags
  | gopt Opt_PIC dflags = ["-U__PIC__", "-D__PIC__"]
--- a/compiler/main/DriverPipeline.hs     2018-04-15 17:40:13.449589908 +0200
+++ b/compiler/main/DriverPipeline.hs     2018-04-15 17:41:11.139481368 +0200
@@ -1814,7 +1814,6 @@
                       ++ map SysTools.Option (
                          []
 
-                      -- See Note [No PIE when linking]
                       ++ picCCOpts dflags
 
                       -- Permit the linker to auto link _symbol to _imp_symbol.
@@ -2128,12 +2127,8 @@
       osInfo = platformOS (targetPlatform dflags)
       ld_r args cc = SysTools.runLink dflags ([
                        SysTools.Option "-nostdlib",
-                       SysTools.Option "-Wl,-r"
+                       SysTools.Option "-r"
                      ]
-                        -- See Note [No PIE while linking] in SysTools
-                     ++ (if sGccSupportsNoPie mySettings
-                          then [SysTools.Option "-no-pie"]
-                          else [])
 
                      ++ (if any (cc ==) [Clang, AppleClang, AppleClang51]
                           then []
--- a/compiler/main/SysTools.hs   2017-11-28 17:39:29.000000000 +0100
+++ b/compiler/main/SysTools.hs   2018-04-15 17:43:31.443216668 +0200
@@ -184,7 +184,6 @@
        -- to make that possible, so for now you can't.
        gcc_prog <- getSetting "C compiler command"
        gcc_args_str <- getSetting "C compiler flags"
-       gccSupportsNoPie <- getBooleanSetting "C compiler supports -no-pie"
        cpp_prog <- getSetting "Haskell CPP command"
        cpp_args_str <- getSetting "Haskell CPP flags"
        let unreg_gcc_args = if targetUnregisterised
@@ -280,7 +279,6 @@
                     sLdSupportsBuildId       = ldSupportsBuildId,
                     sLdSupportsFilelist      = ldSupportsFilelist,
                     sLdIsGnuLd               = ldIsGnuLd,
-                    sGccSupportsNoPie        = gccSupportsNoPie,
                     sProgramName             = "ghc",
                     sProjectVersion          = cProjectVersion,
                     sPgm_L   = unlit_path,
