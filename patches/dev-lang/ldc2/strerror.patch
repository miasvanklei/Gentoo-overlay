--- a/runtime/phobos/std/socket.d  2016-06-18 19:58:41.097486391 +0200
+++ b/runtime/phobos/std/socket.d  2016-06-18 20:02:07.097496533 +0200
@@ -159,52 +159,11 @@
     {
         char[80] buf;
         const(char)* cs;
-        version (CRuntime_Glibc)
-        {
-            cs = strerror_r(err, buf.ptr, buf.length);
-        }
-        else version (OSX)
-        {
-            auto errs = strerror_r(err, buf.ptr, buf.length);
-            if (errs == 0)
-                cs = buf.ptr;
-            else
-                return "Socket error " ~ to!string(err);
-        }
-        else version (FreeBSD)
-        {
-            auto errs = strerror_r(err, buf.ptr, buf.length);
-            if (errs == 0)
-                cs = buf.ptr;
-            else
-                return "Socket error " ~ to!string(err);
-        }
-        else version (NetBSD)
-        {
-            auto errs = strerror_r(err, buf.ptr, buf.length);
-            if (errs == 0)
-                cs = buf.ptr;
-            else
-                return "Socket error " ~ to!string(err);
-        }
-        else version (Solaris)
-        {
-            auto errs = strerror_r(err, buf.ptr, buf.length);
-            if (errs == 0)
-                cs = buf.ptr;
-            else
-                return "Socket error " ~ to!string(err);
-        }
-        else version (CRuntime_Bionic)
-        {
-            auto errs = strerror_r(err, buf.ptr, buf.length);
-            if (errs == 0)
-                cs = buf.ptr;
-            else
-                return "Socket error " ~ to!string(err);
-        }
+        auto errs = strerror_r(err, buf.ptr, buf.length);
+        if (errs == 0)
+            cs = buf.ptr;
         else
-            static assert(0);
+            return "Socket error " ~ to!string(err);
 
         auto len = strlen(cs);
 
--- a/runtime/phobos/std/exception.d	2016-05-28 11:16:02.120157309 +0200
+++ b/runtime/phobos/std/exception.d	2016-05-28 11:30:43.935200725 +0200
@@ -1491,15 +1491,7 @@
     this(string msg, string file = null, size_t line = 0) @trusted
     {
         _errno = .errno;
-        version (CRuntime_Glibc)
-        {
-            char[1024] buf = void;
-            auto s = core.stdc.string.strerror_r(errno, buf.ptr, buf.length);
-        }
-        else
-        {
-            auto s = core.stdc.string.strerror(errno);
-        }
+        auto s = core.stdc.string.strerror(errno);
         super(msg ~ " (" ~ s[0..s.strlen].idup ~ ")", file, line);
     }
 }
--- a/runtime/druntime/src/core/stdc/string.d	2016-05-28 11:16:41.970159271 +0200
+++ b/runtime/druntime/src/core/stdc/string.d	2016-05-28 11:30:45.677200811 +0200
@@ -67,32 +67,8 @@
 char*  strtok(char* s1, in char* s2);
 ///
 char*  strerror(int errnum);
-version (CRuntime_Glibc)
-{
-    ///
-    const(char)* strerror_r(int errnum, char* buf, size_t buflen);
-}
-else version (OSX)
-{
-    int strerror_r(int errnum, char* buf, size_t buflen);
-}
-else version (FreeBSD)
-{
-    int strerror_r(int errnum, char* buf, size_t buflen);
-}
-else version (OpenBSD)
-{
-    int strerror_r(int errnum, char* buf, size_t buflen);
-}
-else version (Solaris)
-{
-    int strerror_r(int errnum, char* buf, size_t buflen);
-}
-else version (CRuntime_Bionic)
-{
-    ///
-    int strerror_r(int errnum, char* buf, size_t buflen);
-}
+///
+int strerror_r(int errnum, char* buf, size_t buflen);
 ///
 pure size_t strlen(in char* s);
 ///
