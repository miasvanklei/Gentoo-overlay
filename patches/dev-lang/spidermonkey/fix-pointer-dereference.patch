--- a/js/src/shell/jsoptparse.cpp
+++ b/js/src/shell/jsoptparse.cpp
@@ -248,17 +248,17 @@ OptionParser::printHelp(const char *prog
 
 OptionParser::Result
 OptionParser::extractValue(size_t argc, char **argv, size_t *i, char **value)
 {
     JS_ASSERT(*i < argc);
     char *eq = strchr(argv[*i], '=');
     if (eq) {
         *value = eq + 1;
-        if (value[0] == '\0')
+        if (*value[0] == '\0')
             return error("A value is required for option %.*s", eq - argv[*i], argv[*i]);
         return Okay;
     }
 
     if (argc == *i + 1)
         return error("Expected a value for option %s", argv[*i]);
 
     *i += 1;
--- a/js/src/jsopcode.cp	2016-12-20 15:34:16.725744006 +0100
+++ b/js/src/jsopcode.cpp	2016-12-20 15:37:03.351362303 +0100
@@ -1391,7 +1391,7 @@
 bool
 ExpressionDecompiler::quote(JSString *s, uint32_t quote)
 {
-    return QuoteString(&sprinter, s, quote) >= 0;
+    return QuoteString(&sprinter, s, quote) ? true : false;
 }
 
 JSAtom *
