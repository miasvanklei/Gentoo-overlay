--- a/src/intel/vulkan/anv_device.c	2018-04-18 16:47:54.000000000 +0200
+++ b/src/intel/vulkan/anv_device.c	2018-04-27 13:29:20.953805429 +0200
@@ -221,8 +221,7 @@
 static VkResult
 anv_physical_device_init_uuids(struct anv_physical_device *device)
 {
-   const struct build_id_note *note =
-      build_id_find_nhdr_for_addr(anv_physical_device_init_uuids);
+   const struct build_id_note *note = build_id_find_nhdr("libvulkan_intel.so");
    if (!note) {
       return vk_errorf(device->instance, device,
                        VK_ERROR_INITIALIZATION_FAILED,
--- a/src/mesa/drivers/dri/i965/brw_disk_cache.c	2018-04-18 16:47:54.000000000 +0200
+++ b/src/mesa/drivers/dri/i965/brw_disk_cache.c	2018-04-27 13:29:21.007805323 +0200
@@ -416,7 +416,7 @@
    assert(len == sizeof(renderer) - 1);
 
    const struct build_id_note *note =
-      build_id_find_nhdr_for_addr(brw_disk_cache_init);
+      build_id_find_nhdr("i965_dri.so");
    assert(note && build_id_length(note) == 20 /* sha1 */);
 
    const uint8_t *id_sha1 = build_id_data(note);
--- a/src/mesa/drivers/dri/i965/brw_program_binary.c	2018-04-18 16:47:54.000000000 +0200
+++ b/src/mesa/drivers/dri/i965/brw_program_binary.c	2018-04-27 13:29:21.013805312 +0200
@@ -35,7 +35,7 @@
 brw_program_binary_init(unsigned device_id)
 {
    const struct build_id_note *note =
-      build_id_find_nhdr_for_addr(brw_program_binary_init);
+      build_id_find_nhdr("i965_dri.so");
    assert(note);
 
    /**
--- a/src/util/build_id.c	2018-04-18 16:47:54.000000000 +0200
+++ b/src/util/build_id.c	2018-04-27 13:29:20.974805388 +0200
@@ -47,8 +47,7 @@
 };
 
 struct callback_data {
-   /* Base address of shared object, taken from Dl_info::dli_fbase */
-   const void *dli_fbase;
+   const char *filename;
 
    struct build_id_note *note;
 };
@@ -69,7 +68,14 @@
       }
    }
 
-   if (map_start != data->dli_fbase)
+   /* The first object visited by callback is the main program.
+    * Android's libc returns a NULL pointer for the first executable.
+    */
+   if (info->dlpi_name == NULL)
+      return 0;
+
+   char *ptr = strstr(info->dlpi_name, data->filename);
+   if (ptr == NULL || ptr[strlen(data->filename)] != '\0')
       return 0;
 
    for (unsigned i = 0; i < info->dlpi_phnum; i++) {
@@ -101,18 +107,10 @@
 }
 
 const struct build_id_note *
-build_id_find_nhdr_for_addr(const void *addr)
+build_id_find_nhdr(const char *filename)
 {
-   Dl_info info;
-
-   if (!dladdr(addr, &info))
-      return NULL;
-
-   if (!info.dli_fbase)
-      return NULL;
-
    struct callback_data data = {
-      .dli_fbase = info.dli_fbase,
+      .filename = filename,
       .note = NULL,
    };
 
--- a/src/util/build_id.h	2018-04-18 16:47:54.000000000 +0200
+++ b/src/util/build_id.h	2018-04-27 13:29:20.971805393 +0200
@@ -29,7 +29,7 @@
 struct build_id_note;
 
 const struct build_id_note *
-build_id_find_nhdr_for_addr(const void *addr);
+build_id_find_nhdr(const char *filename);
 
 unsigned
 build_id_length(const struct build_id_note *note);
