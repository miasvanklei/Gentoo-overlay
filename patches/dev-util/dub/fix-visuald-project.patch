--- source/dub/generators/visuald.d.bak	2015-11-27 09:40:25.043416250 +0100
+++ source/dub/generators/visuald.d	2015-11-27 09:40:42.180941115 +0100
@@ -286,7 +286,7 @@
 				auto bin_path = pack == m_project.rootPackage.name ? Path(buildsettings.targetPath) : Path(".dub/lib/");
 				bin_path.endsWithSlash = true;
 				ret.formattedWrite("    <lib>%s</lib>\n", output_type);
-				ret.formattedWrite("    <exefile>%s%s.%s</exefile>\n", bin_path.toNativeString(), buildsettings.targetName, output_ext);
+				ret.formattedWrite("    <exefile>$(OutDir)\\$(ProjectName).exe</exefile>\n");
 
 				// include paths and string imports
 				string imports = join(getPathSettings!"importPaths"(), " ");
@@ -367,8 +367,8 @@
 				ret.formattedWrite("    <ignoreUnsupportedPragmas>%s</ignoreUnsupportedPragmas>\n", buildsettings.options & BuildOption.ignoreUnknownPragmas ? "1" : "0");
 				ret.formattedWrite("    <compiler>%s</compiler>\n", settings.compiler.name == "ldc" ? 2 : settings.compiler.name == "gdc" ? 1 : 0);
 				ret.formattedWrite("    <otherDMD>0</otherDMD>\n");
-				ret.formattedWrite("    <outdir>%s</outdir>\n", bin_path.toNativeString());
-				ret.formattedWrite("    <objdir>.dub/obj/%s/%s</objdir>\n", to!string(type), intersubdir);
+				ret.formattedWrite("    <outdir>$(ConfigurationName) $(PlatformName)</outdir>\n");
+				ret.formattedWrite("    <objdir>$(OutDir)</objdir>\n");
 				ret.put("    <objname />\n");
 				ret.put("    <libname />\n");
 				ret.put("    <doDocComments>0</doDocComments>\n");
