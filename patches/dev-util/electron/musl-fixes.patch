--- a/third_party/lss/linux_syscall_support.h
+++ b/third_party/lss/linux_syscall_support.h
@@ -1127,6 +1127,12 @@
 #ifndef __NR_fallocate
 #define __NR_fallocate          285
 #endif
+
+#undef __NR_pread
+#define __NR_pread __NR_pread64
+#undef __NR_pwrite
+#define __NR_pwrite __NR_pwrite64
+
 /* End of x86-64 definitions                                                 */
 #elif defined(__mips__)
 #if _MIPS_SIM == _MIPS_SIM_ABI32
--- a/sandbox/linux/suid/process_util.h
+++ b/sandbox/linux/suid/process_util.h
@@ -11,6 +11,14 @@
 #include <stdbool.h>
 #include <sys/types.h>
 
+// Some additional functions
+# define TEMP_FAILURE_RETRY(expression) \
+	(__extension__			\
+	 ({ long int __result;		\
+	  do __result = (long int) (expression); \
+	  while (__result == -1L && errno == EINTR); \
+	  __result; }))
+
 // This adjusts /proc/process/oom_score_adj so the Linux OOM killer
 // will prefer certain process types over others. The range for the
 // adjustment is [-1000, 1000], with [0, 1000] being user accessible.
--- a/sandbox/linux/seccomp-bpf/trap.cc
+++ b/sandbox/linux/seccomp-bpf/trap.cc
@@ -156,7 +156,7 @@
   // most versions of glibc don't include this information in siginfo_t. So,
   // we need to explicitly copy it into a arch_sigsys structure.
   struct arch_sigsys sigsys;
-  memcpy(&sigsys, &info->_sifields, sizeof(sigsys));
+  memcpy(&sigsys, &info->__si_fields, sizeof(sigsys));
 
 #if defined(__mips__)
   // When indirect syscall (syscall(__NR_foo, ...)) is made on Mips, the
--- a/net/dns/dns_config_service_posix.cc
+++ b/net/dns/dns_config_service_posix.cc
@@ -116,7 +116,7 @@
 ConfigParsePosixResult ReadDnsConfig(DnsConfig* config) {
   ConfigParsePosixResult result;
   config->unhandled_options = false;
-#if defined(OS_OPENBSD)
+#if defined(OS_OPENBSD) || defined(_GNU_SOURCE)
   // Note: res_ninit in glibc always returns 0 and sets RES_INIT.
   // res_init behaves the same way.
   memset(&_res, 0, sizeof(_res));
--- a/third_party/ffmpeg/libavutil/cpu.c
+++ b/third_party/ffmpeg/libavutil/cpu.c
@@ -38,7 +38,6 @@
 #include <sys/param.h>
 #endif
 #include <sys/types.h>
-#include <sys/sysctl.h>
 #endif
 #if HAVE_UNISTD_H
 #include <unistd.h>
--- a/third_party/WebKit/Source/platform/heap/StackFrameDepth.cpp
+++ b/third_party/WebKit/Source/platform/heap/StackFrameDepth.cpp
@@ -58,7 +58,7 @@
     // FIXME: On Mac OSX and Linux, this method cannot estimate stack size
     // correctly for the main thread.
 
-#if defined(__GLIBC__) || OS(ANDROID) || OS(FREEBSD)
+#if OS(LINUX) || OS(ANDROID) || OS(FREEBSD)
     // pthread_getattr_np() can fail if the thread is not invoked by
     // pthread_create() (e.g., the main thread of webkit_unit_tests).
     // In this case, this method returns 0 and the caller must handle it.
@@ -105,7 +105,7 @@
 
 void* StackFrameDepth::getStackStart()
 {
-#if defined(__GLIBC__) || OS(ANDROID) || OS(FREEBSD)
+#if OS(LINUX) || OS(ANDROID) || OS(FREEBSD)
     pthread_attr_t attr;
     int error;
 #if OS(FREEBSD)
--- a/third_party/ffmpeg/libavutil/autorename_libavutil_cpu.c
+++ b/third_party/ffmpeg/libavutil/autorename_libavutil_cpu.c
@@ -38,7 +38,6 @@
 #include <sys/param.h>
 #endif
 #include <sys/types.h>
-#include <sys/sysctl.h>
 #endif
 #if HAVE_UNISTD_H
 #include <unistd.h>
--- a/device/serial/serial_io_handler_posix.cc
+++ b/device/serial/serial_io_handler_posix.cc
@@ -6,6 +6,7 @@
 
 #include <sys/ioctl.h>
 #include <termios.h>
+#include <asm-generic/ioctls.h>
 
 #include "base/posix/eintr_wrapper.h"
 
--- a/third_party/ots/include/opentype-sanitiser.h.bak
+++ b/third_party/ots/include/opentype-sanitiser.h
@@ -24,6 +24,7 @@
 #include <stdint.h>
 #endif
 
+#include <sys/types.h>
 #include <algorithm>
 #include <cassert>
 #include <cstddef>
--- a/third_party/WebKit/Source/platform/heap/GCInfo.cpp
+++ b/third_party/WebKit/Source/platform/heap/GCInfo.cpp
@@ -5,6 +5,7 @@
 #include "config.h"
 #include "platform/heap/GCInfo.h"
 
+#include <malloc.h>
 #include "platform/heap/Handle.h"
 #include "platform/heap/Heap.h"
 
--- a/breakpad/src/client/linux/minidump_writer/minidump_writer.h
+++ b/breakpad/src/client/linux/minidump_writer/minidump_writer.h
@@ -48,7 +48,7 @@
 #if defined(__aarch64__)
 typedef struct fpsimd_context fpstate_t;
 #elif !defined(__ARM_EABI__) && !defined(__mips__)
-typedef struct _libc_fpstate fpstate_t;
+typedef struct _fpstate fpstate_t;
 #endif
 

--- a/breakpad/src/client/linux/dump_writer_common/ucontext_reader.cc
+++ b/breakpad/src/client/linux/dump_writer_common/ucontext_reader.cc
@@ -49,7 +49,7 @@
 }
 
 void UContextReader::FillCPUContext(RawContextCPU *out, const ucontext *uc,
-                                    const struct _libc_fpstate* fp) {
+                                    const struct _fpstate* fp) {
   const greg_t* regs = uc->uc_mcontext.gregs;
 
   out->context_flags = MD_CONTEXT_X86_FULL |
@@ -97,7 +97,7 @@
 }
 
 void UContextReader::FillCPUContext(RawContextCPU *out, const ucontext *uc,
-                                    const struct _libc_fpstate* fpregs) {
+                                    const struct _fpstate* fpregs) {
   const greg_t* regs = uc->uc_mcontext.gregs;
 
   out->context_flags = MD_CONTEXT_AMD64_FULL;
--- a/breakpad/src/client/linux/dump_writer_common/ucontext_reader.h
+++ b/breakpad/src/client/linux/dump_writer_common/ucontext_reader.h
@@ -50,7 +50,7 @@
   //   info: the collection of register structures.
 #if defined(__i386__) || defined(__x86_64)
   static void FillCPUContext(RawContextCPU *out, const ucontext *uc,
-                             const struct _libc_fpstate* fp);
+                             const struct _fpstate* fp);
 #elif defined(__aarch64__)
   static void FillCPUContext(RawContextCPU *out, const ucontext *uc,
                              const struct fpsimd_context* fpregs);
--- a/breakpad/src/common/stabs_reader.cc
+++ b/breakpad/src/common/stabs_reader.cc
@@ -34,7 +34,6 @@
 #include "common/stabs_reader.h"
 
 #include <assert.h>
-#include <stab.h>
 #include <string.h>
 
 #include <string>
--- a/breakpad/src/common/common.gyp
+++ b/breakpad/src/common/common.gyp
@@ -32,9 +32,6 @@
       ['OS=="mac"', {
         'defines': ['HAVE_MACH_O_NLIST_H'],
       }],
-      ['OS=="linux"', {
-        'defines': ['HAVE_A_OUT_H'],
-      }],
     ],
   },
   'targets': [
--- a/breakpad/BUILD.gn
+++ b/breakpad/BUILD.gn
@@ -456,11 +456,6 @@
       configs -= [ "//build/config/compiler:no_rtti" ]
       configs += [ "//build/config/compiler:rtti" ]
 
-      # Breakpad rev 583 introduced this flag.
-      # Using this define, stabs_reader.h will include a.out.h to
-      # build on Linux.
-      defines = [ "HAVE_A_OUT_H" ]
-
       include_dirs = [ "src" ]
 
       deps = [
--- a/breakpad/breakpad.gyp
+++ b/breakpad/breakpad.gyp
@@ -491,13 +491,6 @@
             'src/tools/linux/dump_syms/dump_syms.cc',
           ],
 
-          # Breakpad rev 583 introduced this flag.
-          # Using this define, stabs_reader.h will include a.out.h to
-          # build on Linux.
-          'defines': [
-            'HAVE_A_OUT_H',
-          ],
-
           'include_dirs': [
             'src',
             '..',
--- a/breakpad/src/common/stabs_reader_unittest.cc
+++ b/breakpad/src/common/stabs_reader_unittest.cc
@@ -33,7 +33,6 @@
 
 #include <assert.h>
 #include <errno.h>
-#include <stab.h>
 #include <stdarg.h>
 #include <stdlib.h>
 #include <string.h>
--- a/breakpad/src/common/linux/elf_core_dump.h
+++ b/breakpad/src/common/linux/elf_core_dump.h
@@ -36,6 +36,7 @@
 #include <elf.h>
 #include <link.h>
 #include <stddef.h>
+#include <limits.h>
 
 #include "common/memory_range.h"
 
@@ -51,9 +52,9 @@
   typedef ElfW(Phdr) Phdr;
   typedef ElfW(Word) Word;
   typedef ElfW(Addr) Addr;
-#if __WORDSIZE == 32
+#if ULONG_MAX == 0xffffffff
   static const int kClass = ELFCLASS32;
-#elif __WORDSIZE == 64
+#elif ULONG_MAX == 0xffffffffffffffff
   static const int kClass = ELFCLASS64;
 #else
 #error "Unsupported __WORDSIZE for ElfCoreDump."
--- a/breakpad/src/common/stabs_reader.h
+++ b/breakpad/src/common/stabs_reader.h
@@ -61,6 +61,17 @@
 #include <mach-o/nlist.h>
 #endif
 
+// Definitions from <stab.h> and <a.out.h> for systems which
+// do not have them
+#undef N_UNDF
+#define N_UNDF  0x0
+#define N_FUN   0x24
+#define N_SLINE 0x44
+#define N_SO    0x64
+#define N_LSYM  0x80
+#define N_BINCL 0x82
+#define N_SOL   0x84
+
 #include <string>
 #include <vector>
 
--- a/breakpad/src/common/linux/dump_symbols.cc
+++ b/breakpad/src/common/linux/dump_symbols.cc
@@ -45,6 +45,7 @@
 #include <sys/mman.h>
 #include <sys/stat.h>
 #include <unistd.h>
+#include <libgen.h>
 
 #include <iostream>
 #include <set>

