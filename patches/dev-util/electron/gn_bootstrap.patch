--- a/chromium/base/BUILD.gn  2017-11-29 20:42:52.500690029 +0100
+++ b/chromium/base/BUILD.gn  2017-11-29 20:43:25.771627748 +0100
@@ -1126,11 +1126,6 @@
     ":debugging_flags",
   ]
 
-  # Needed for <atomic> if using newer C++ library than sysroot
-  if (!use_sysroot && (is_android || (is_linux && !is_chromecast))) {
-    libs = [ "atomic" ]
-  }
-
   if (use_experimental_allocator_shim) {
     # TODO(primiano): support other platforms, currently this works only on
     # Linux/CrOS/Android. http://crbug.com/550886 .
--- a/chromium/tools/gn/bootstrap/bootstrap.py   2016-11-17 00:15:29.112867732 +0100
+++ b/chromium/tools/gn/bootstrap/bootstrap.py	2016-11-17 00:43:54.712718406 +0100
@@ -166,7 +166,7 @@
   mkdir_p(root_gen_dir)
 
   write_buildflag_header_manually(root_gen_dir, 'base/allocator/features.h',
-      {'USE_EXPERIMENTAL_ALLOCATOR_SHIM': 'true' if is_linux else 'false'})
+      {'USE_EXPERIMENTAL_ALLOCATOR_SHIM': 'false'})
 
   write_buildflag_header_manually(root_gen_dir, 'base/debug/debugging_flags.h',
       {
@@ -378,8 +378,6 @@
       'base/third_party/superfasthash/superfasthash.c',
   ])
   static_libraries['base']['sources'].extend([
-      'base/allocator/allocator_check.cc',
-      'base/allocator/allocator_extension.cc',
       'base/at_exit.cc',
       'base/base_paths.cc',
       'base/base_switches.cc',
@@ -593,7 +591,7 @@
     }
 
   if is_linux:
-    libs.extend(['-lrt', '-latomic'])
+    libs.extend(['-lrt'])
     ldflags.extend(['-pthread'])
 
     static_libraries['xdg_user_dirs'] = {
@@ -603,8 +601,6 @@
         'tool': 'cxx',
     }
     static_libraries['base']['sources'].extend([
-        'base/allocator/allocator_shim.cc',
-        'base/allocator/allocator_shim_default_dispatch_to_glibc.cc',
         'base/memory/shared_memory_posix.cc',
         'base/nix/xdg_util.cc',
         'base/process/internal_linux.cc',
@@ -772,9 +768,6 @@
   cmd.append('gn')
   check_call(cmd)
 
-  if not options.debug and not is_win:
-    check_call(['strip', os.path.join(build_dir, 'gn')])
-
 
 if __name__ == '__main__':
   sys.exit(main(sys.argv[1:])
--- a/chromium/base/native_library_posix.cc	2016-11-17 01:45:50.032002326 +0100
+++ b/chromium/base/native_library_posix.cc	2016-11-17 01:46:23.729001549 +0100
@@ -12,6 +12,10 @@
 #include "base/strings/utf_string_conversions.h"
 #include "base/threading/thread_restrictions.h"

+#ifndef RTLD_DEEPBIND
+#define RTLD_DEEPBIND 0
+#endif
+
 namespace base {

 std::string NativeLibraryLoadError::ToString() const {
